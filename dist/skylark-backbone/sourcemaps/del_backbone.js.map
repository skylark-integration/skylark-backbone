{"version":3,"sources":["del_backbone.js"],"names":["define","skylark","langx","$","plugins","_","models","klass","mixin","Evented","Stateful","Widget","Plugin","inherit","_construct","el","options","isHtmlNode","this","cid","uniqueId","_ensureElement","init","tagName","selector","$el","find","render","remove","_removeElement","unlistenTo","setElement","element","undelegateEvents","_setElement","delegateEvents","widgets","events","result","key","method","isFunction","match","delegateEventSplitter","delegate","proxy","eventName","listener","on","uid","off","undelegate","_createElement","attrs","noder","createElement","id","className","_setAttributes","attributes","attr","previousBackbone","root","Backbone","slice","Array","prototype","VERSION","noConflict","emulateHTTP","emulateJSON","addUnderscoreMethods","Class","methods","attribute","each","length","value","iteratee","context","cb","defaultVal","args","call","arguments","unshift","apply","addMethod","instance","isObject","_isModel","modelMatcher","isString","model","get","matcher","matches","EventExtends","name","callback","fn","type","overrided","once","one","bind","unbind","stopListening","obj","EventedProto","Events","listenTo","listenToOnce","trigger","extend","Model","Entity","initialize","partial","escape","keys","values","pairs","invert","pick","omit","chain","isEmpty","Collection","constructor","_constructor","comparator","_reset","reset","silent","Object","defineProperty","[object Object]","entity","newValue","entities","modelId","entityId","_isEntity","forEach","map","collect","reduce","foldl","inject","reduceRight","foldr","detect","filter","select","reject","every","all","some","any","include","includes","contains","invoke","max","min","toArray","size","first","head","take","initial","rest","tail","drop","last","without","difference","indexOf","shuffle","lastIndexOf","sample","partition","groupBy","countBy","sortBy","indexBy","findIndex","findLastIndex","View","sync","ajax","protoProps","staticProps","child"],"mappings":"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","file":"../del_backbone.js","sourcesContent":["define([\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/query\",\r\n  \"skylark-utils-dom/plugins\",\r\n  \"skylark-underscore/underscore\",\r\n  \"./models\"\r\n],function(skylark,langx, $,plugins,_,models){\r\n//     skylark-backbone.js 0.9.0\r\n//     Backbone.js 1.2.3\r\n\r\n//     (c) 2010-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\r\n//     Backbone may be freely distributed under the MIT license.\r\n//     For all details and documentation:\r\n//     http://backbonejs.org\r\n  var \r\n    klass =  langx.klass,\r\n    mixin = langx.mixin,\r\n    Evented = langx.Evented,\r\n    Stateful = langx.Stateful,\r\n    Widget = plugins.Plugin.inherit({\r\n      _construct :function(el,options) {\r\n        //for supporting init(options,el)\r\n          if (langx.isHtmlNode(options)) {\r\n            var _t = el,\r\n              options = el;\r\n              el = options;\r\n          }\r\n          if (langx.isHtmlNode(el)) { \r\n            this.el = el;\r\n        } else {\r\n          this.el = null;\r\n        }\r\n          if (options) {\r\n              langx.mixin(this,options);\r\n          }\r\n          if (!this.cid) {\r\n              this.cid = langx.uniqueId('w');\r\n          }\r\n          this._ensureElement();\r\n          this.init();\r\n      },\r\n\r\n      // The default `tagName` of a View's element is `\"div\"`.\r\n      tagName: 'div',\r\n\r\n      // query delegate for element lookup, scoped to DOM elements within the\r\n      // current view. This should be preferred to global lookups where possible.\r\n      $: function(selector) {\r\n        return this.$el.find(selector);\r\n      },\r\n\r\n      // **render** is the core function that your view should override, in order\r\n      // to populate its element (`this.el`), with the appropriate HTML. The\r\n      // convention is for **render** to always return `this`.\r\n      render: function() {\r\n        return this;\r\n      },\r\n\r\n      // Remove this view by taking the element out of the DOM, and removing any\r\n      // applicable Backbone.Events listeners.\r\n      remove: function() {\r\n        this._removeElement();\r\n        this.unlistenTo();\r\n        return this;\r\n      },\r\n\r\n      // Remove this view's element from the document and all event listeners\r\n      // attached to it. Exposed for subclasses using an alternative DOM\r\n      // manipulation API.\r\n      _removeElement: function() {\r\n        this.$el.remove();\r\n      },\r\n\r\n      // Change the view's element (`this.el` property) and re-delegate the\r\n      // view's events on the new element.\r\n      setElement: function(element) {\r\n        this.undelegateEvents();\r\n        this._setElement(element);\r\n        this.delegateEvents();\r\n        return this;\r\n      },\r\n\r\n      // Creates the `this.el` and `this.$el` references for this view using the\r\n      // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\r\n      // context or an element. Subclasses can override this to utilize an\r\n      // alternative DOM manipulation API and are only required to set the\r\n      // `this.el` property.\r\n      _setElement: function(el) {\r\n        this.$el = widgets.$(el);\r\n        this.el = this.$el[0];\r\n      },\r\n\r\n      // Set callbacks, where `this.events` is a hash of\r\n      //\r\n      // *{\"event selector\": \"callback\"}*\r\n      //\r\n      //     {\r\n      //       'mousedown .title':  'edit',\r\n      //       'click .button':     'save',\r\n      //       'click .open':       function(e) { ... }\r\n      //     }\r\n      //\r\n      // pairs. Callbacks will be bound to the view, with `this` set properly.\r\n      // Uses event delegation for efficiency.\r\n      // Omitting the selector binds the event to `this.el`.\r\n      delegateEvents: function(events) {\r\n        events || (events = langx.result(this, 'events'));\r\n        if (!events) return this;\r\n        this.undelegateEvents();\r\n        for (var key in events) {\r\n          var method = events[key];\r\n          if (!langx.isFunction(method)) method = this[method];\r\n          if (!method) continue;\r\n          var match = key.match(delegateEventSplitter);\r\n          this.delegate(match[1], match[2], langx.proxy(method, this));\r\n        }\r\n        return this;\r\n      },\r\n\r\n      // Add a single event listener to the view's element (or a child element\r\n      // using `selector`). This only works for delegate-able events: not `focus`,\r\n      // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\r\n      delegate: function(eventName, selector, listener) {\r\n        this.$el.on(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n        return this;\r\n      },\r\n\r\n      // Clears all callbacks previously bound to the view by `delegateEvents`.\r\n      // You usually don't need to use this, but may wish to if you have multiple\r\n      // Backbone views attached to the same DOM element.\r\n      undelegateEvents: function() {\r\n        if (this.$el) this.$el.off('.delegateEvents' + this.uid);\r\n        return this;\r\n      },\r\n\r\n      // A finer-grained `undelegateEvents` for removing a single delegated event.\r\n      // `selector` and `listener` are both optional.\r\n      undelegate: function(eventName, selector, listener) {\r\n        this.$el.off(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n        return this;\r\n      },\r\n\r\n      // Produces a DOM element to be assigned to your view. Exposed for\r\n      // subclasses using an alternative DOM manipulation API.\r\n      _createElement: function(tagName,attrs) {\r\n        return noder.createElement(tagName,attrs);\r\n      },\r\n\r\n      // Ensure that the View has a DOM element to render into.\r\n      // If `this.el` is a string, pass it through `$()`, take the first\r\n      // matching element, and re-assign it to `el`. Otherwise, create\r\n      // an element from the `id`, `className` and `tagName` properties.\r\n      _ensureElement: function() {\r\n        if (!this.el) {\r\n          var attrs = langx.mixin({}, langx.result(this, 'attributes'));\r\n          if (this.id) attrs.id = langx.result(this, 'id');\r\n          if (this.className) attrs['class'] = langx.result(this, 'className');\r\n          this.setElement(this._createElement(langx.result(this, 'tagName'),attrs));\r\n          this._setAttributes(attrs);\r\n        } else {\r\n          this.setElement(langx.result(this, 'el'));\r\n        }\r\n      },\r\n\r\n      // Set attributes from a hash on this view's element.  Exposed for\r\n      // subclasses using an alternative DOM manipulation API.\r\n      _setAttributes: function(attributes) {\r\n        this.$el.attr(attributes);\r\n      },\r\n      \r\n    });\r\n\r\n  // Initial Setup\r\n  // -------------\r\n\r\n  // Save the previous value of the `Backbone` variable, so that it can be\r\n  // restored later on, if `noConflict` is used.\r\n  var previousBackbone = root.Backbone;\r\n\r\n  // Create a local reference to a common array method we'll want to use later.\r\n  var slice = Array.prototype.slice;\r\n\r\n  // Current version of the library. Keep in sync with `package.json`.\r\n  Backbone.VERSION = '1.2.3';\r\n\r\n  // For Backbone's purposes, jQuery, Zepto, Ender, or My Library (kidding) owns\r\n  // the `$` variable.\r\n  Backbone.$ = $;\r\n\r\n  // Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable\r\n  // to its previous owner. Returns a reference to this Backbone object.\r\n  Backbone.noConflict = function() {\r\n    root.Backbone = previousBackbone;\r\n    return this;\r\n  };\r\n\r\n  // Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option\r\n  // will fake `\"PATCH\"`, `\"PUT\"` and `\"DELETE\"` requests via the `_method` parameter and\r\n  // set a `X-Http-Method-Override` header.\r\n  Backbone.emulateHTTP = models.emulateHTTP;\r\n\r\n  // Turn on `emulateJSON` to support legacy servers that can't deal with direct\r\n  // `application/json` requests ... this will encode the body as\r\n  // `application/x-www-form-urlencoded` instead and will send the model in a\r\n  // form param named `model`.\r\n  Backbone.emulateJSON = models.emulateJSON;\r\n\r\n  // Proxy Backbone class methods to Underscore functions, wrapping the model's\r\n  // `attributes` object or collection's `models` array behind the scenes.\r\n  //\r\n  // collection.filter(function(model) { return model.get('age') > 10 });\r\n  // collection.each(this.addView);\r\n  //\r\n  // `Function#apply` can be slow so we use the method's arg count, if we know it.\r\n  var addMethod = function(length, method, attribute) {\r\n    switch (length) {\r\n      case 1: return function() {\r\n        return _[method](this[attribute]);\r\n      };\r\n      case 2: return function(value) {\r\n        return _[method](this[attribute], value);\r\n      };\r\n      case 3: return function(iteratee, context) {\r\n        return _[method](this[attribute], cb(iteratee, this), context);\r\n      };\r\n      case 4: return function(iteratee, defaultVal, context) {\r\n        return _[method](this[attribute], cb(iteratee, this), defaultVal, context);\r\n      };\r\n      default: return function() {\r\n        var args = slice.call(arguments);\r\n        args.unshift(this[attribute]);\r\n        return _[method].apply(_, args);\r\n      };\r\n    }\r\n  };\r\n  var addUnderscoreMethods = function(Class, methods, attribute) {\r\n    _.each(methods, function(length, method) {\r\n      if (_[method]) Class.prototype[method] = addMethod(length, method, attribute);\r\n    });\r\n  };\r\n\r\n  // Support `collection.sortBy('attr')` and `collection.findWhere({id: 1})`.\r\n  var cb = function(iteratee, instance) {\r\n    if (_.isFunction(iteratee)) return iteratee;\r\n    if (_.isObject(iteratee) && !instance._isModel(iteratee)) return modelMatcher(iteratee);\r\n    if (_.isString(iteratee)) return function(model) { return model.get(iteratee); };\r\n    return iteratee;\r\n  };\r\n  var modelMatcher = function(attrs) {\r\n    var matcher = _.matches(attrs);\r\n    return function(model) {\r\n      return matcher(model.attributes);\r\n    };\r\n  };\r\n\r\n  // Backbone.Events\r\n\r\n  var EventExtends = {\r\n      on  : function(name, callback, context){\r\n          var fn =  function() {\r\n            var args = slice.call(arguments,1);\r\n            if (name==\"all\") {\r\n              args.unshift(arguments[0].type);\r\n            }\r\n            callback.apply(this, args);\r\n          };\r\n          fn._ = callback\r\n          \r\n          return this.overrided(name,fn,context);\r\n      },\r\n        \r\n      once : function(name, callback, context) {\r\n        return this.one(name,callback,context);\r\n      },\r\n      bind : function(name, callback, context) {\r\n          return this.on(name,callback,context);\r\n      },\r\n      \r\n      unbind : function(name, callback, context){\r\n          return this.off(name,callback,context);\r\n      },\r\n    \r\n      stopListening : function(obj, name, callback){\r\n        return this.unlistenTo(obj,name,callback);\r\n      }\r\n   },\r\n\r\n  BackboneEvented = Evented.inherit(EventExtends),\r\n\r\n  EventedProto = BackboneEvented.prototype;\r\n  \r\n  var Events = Backbone.Events = {\r\n     bind: EventedProto.bind,\r\n     listenTo: EventedProto.listenTo,\r\n     listenToOnce: EventedProto.listenToOnce,\r\n     off: EventedProto.off,\r\n     on : EventedProto.on,\r\n     once: EventedProto.once,\r\n     stopListening: EventedProto.stopListening,\r\n     trigger: EventedProto.trigger,\r\n     unbind: EventedProto.unbind,\r\n     unlistenTo: EventedProto.unlistenTo\r\n  };\r\n\r\n  // Allow the `Backbone` object to serve as a global event bus, for folks who\r\n  // want global \"pubsub\" in a convenient place.\r\n  _.extend(Backbone, Events);\r\n\r\n  // Backbone.Model\r\n  // --------------\r\n\r\n  // Backbone **Models** are the basic data object in the framework --\r\n  // frequently representing a row in a table in a database on your server.\r\n  // A discrete chunk of data and a bunch of useful, related methods for\r\n  // performing computations and transformations on that data.\r\n\r\n  // Create a new model with the specified attributes. A client id (`cid`)\r\n  // is automatically generated and assigned for you.\r\n  var Model = Backbone.Model = models.Entity.inherit(mixin({\r\n      _construct : function(attributes, options) {\r\n        Stateful.prototype.init.apply(this,arguments);\r\n        this.initialize.apply(this, arguments);\r\n      }\r\n  },EventExtends));\r\n\r\n\r\n  // Attach all inheritable methods to the Model prototype.\r\n  Model.partial({\r\n    // Initialize is an empty function by default. Override it with your own\r\n    // initialization logic.\r\n    initialize: function(){},\r\n\r\n    init: function(){},\r\n\r\n    // Get the HTML-escaped value of an attribute.\r\n    escape: function(attr) {\r\n      return _.escape(this.get(attr));\r\n    },\r\n\r\n    // Special-cased proxy to underscore's `_.matches` method.\r\n    matches: function(attrs) {\r\n      return !!_.iteratee(attrs, this)(this.attributes);\r\n    },\r\n\r\n  });\r\n\r\n  // Underscore methods that we want to implement on the Model, mapped to the\r\n  // number of arguments they take.\r\n  var modelMethods = {keys: 1, values: 1, pairs: 1, invert: 1, pick: 0,\r\n      omit: 0, chain: 1, isEmpty: 1};\r\n\r\n  // Mix in each Underscore method as a proxy to `Model#attributes`.\r\n  addUnderscoreMethods(Model, modelMethods, 'attributes');\r\n\r\n  // Backbone.Collection\r\n  // -------------------\r\n\r\n  // If models tend to represent a single row of data, a Backbone Collection is\r\n  // more analogous to a table full of data ... or a small slice or page of that\r\n  // table, or a collection of rows that belong together for a particular reason\r\n  // -- all of the messages in this particular folder, all of the documents\r\n  // belonging to this particular author, and so on. Collections maintain\r\n  // indexes of their models, both in order, and for lookup by `id`.\r\n\r\n  // Create a new **Collection**, perhaps to contain a specific type of `model`.\r\n  // If a `comparator` is specified, the Collection will maintain\r\n  // its models in sort order, as they're added and removed.\r\n\r\n  var Collection = Backbone.Collection = models.Collection.inherit(mixin({\r\n      constructor : function(attributes, options) {\r\n        models.Collection.prototype.init.apply(this,arguments);\r\n        this.initialize.apply(this, arguments);\r\n      }\r\n  },EventExtends));\r\n\r\n\r\n  Collection._constructor = function(models, options) {\r\n      options || (options = {});\r\n      if (options.model) this.model = options.model;\r\n      if (options.comparator !== void 0) this.comparator = options.comparator;\r\n      this._reset();\r\n      this.initialize.apply(this, arguments);\r\n      if (models) this.reset(models, _.extend({silent: true}, options));\r\n  };\r\n\r\n  // Define the Collection's inheritable methods.\r\n  Collection.partial({\r\n\r\n      init: function(){},\r\n\r\n      // Initialize is an empty function by default. Override it with your own\r\n      // initialization logic.\r\n      initialize: function(){},\r\n  });\r\n\r\n  Object.defineProperty(Collection.prototype, \"model\",{\r\n    get() { return this.entity; },\r\n    set(newValue) { this.entity = newValue; }\r\n  });\r\n\r\n  Object.defineProperty(Collection.prototype, \"models\",{\r\n    get() { return this.entities; },\r\n    set(newValue) { this.entities = newValue; }\r\n  });\r\n\r\n  Collection.prototype.modelId = Collection.prototype.entityId;\r\n  Collection.prototype._isModel = Collection.prototype._isEntity;\r\n\r\n\r\n  // Underscore methods that we want to implement on the Collection.\r\n  // 90% of the core usefulness of Backbone Collections is actually implemented\r\n  // right here:\r\n  var collectionMethods = {forEach: 3, each: 3, map: 3, collect: 3, reduce: 0,\r\n      foldl: 0, inject: 0, reduceRight: 0, foldr: 0, find: 3, detect: 3, filter: 3,\r\n      select: 3, reject: 3, every: 3, all: 3, some: 3, any: 3, include: 3, includes: 3,\r\n      contains: 3, invoke: 0, max: 3, min: 3, toArray: 1, size: 1, first: 3,\r\n      head: 3, take: 3, initial: 3, rest: 3, tail: 3, drop: 3, last: 3,\r\n      without: 0, difference: 0, indexOf: 3, shuffle: 1, lastIndexOf: 3,\r\n      isEmpty: 1, chain: 1, sample: 3, partition: 3, groupBy: 3, countBy: 3,\r\n      sortBy: 3, indexBy: 3, findIndex: 3, findLastIndex: 3};\r\n\r\n  // Mix in each Underscore method as a proxy to `Collection#models`.\r\n  addUnderscoreMethods(Collection, collectionMethods, 'models');\r\n\r\n  // Backbone.View\r\n  // -------------\r\n\r\n  // Backbone Views are almost more convention than they are actual code. A View\r\n  // is simply a JavaScript object that represents a logical chunk of UI in the\r\n  // DOM. This might be a single item, an entire list, a sidebar or panel, or\r\n  // even the surrounding frame which wraps your whole app. Defining a chunk of\r\n  // UI as a **View** allows you to define your DOM events declaratively, without\r\n  // having to worry about render order ... and makes it easy for the view to\r\n  // react to specific changes in the state of your models.\r\n\r\n  // Creating a Backbone.View creates its initial element outside of the DOM,\r\n  // if an existing element is not provided...\r\n  var View = Backbone.View = Widget.inherit(mixin({\r\n    constructor : function(options) {\r\n        Widget.prototype.init.apply(this,arguments);\r\n        this.initialize.apply(this, arguments);\r\n    }\r\n  },EventExtends));\r\n\r\n\r\n  // Cached regex to split keys for `delegate`.\r\n  var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\r\n\r\n  // List of view options to be set as properties.\r\n  var viewOptions = ['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName', 'events'];\r\n\r\n  // Set up all inheritable **Backbone.View** properties and methods.\r\n  View.partial({\r\n\r\n    // Initialize is an empty function by default. Override it with your own\r\n    // initialization logic.\r\n    initialize: function(){}\r\n\r\n  });\r\n\r\n  Object.defineProperty(Backbone, \"sync\",{\r\n    get() { return models.sync; },\r\n    set(newValue) { models.sync = newValue; }\r\n  });\r\n\r\n  // Set the default implementation of `Backbone.ajax` to proxy through to `$`.\r\n  // Override this if you'd like to use a different library.\r\n  Backbone.ajax = function() {\r\n    return Backbone.$.ajax.apply(Backbone.$, arguments);\r\n  };\r\n\r\n  // Set up inheritance for the model, collection, router, view and history.\r\n  Model.extend = Collection.extend =  View.extend  = Backbone.extend = function(protoProps, staticProps){\r\n    protoProps.constructor = this._constructor;\r\n    var child = this.inherit(protoProps);\r\n    _.extend(child,staticProps);\r\n  \r\n    return child;\r\n  };\r\n\r\n  // Throw an error when a URL is needed, and none is supplied.\r\n  var urlError = function() {\r\n    throw new Error('A \"url\" property or function must be specified');\r\n  };\r\n\r\n  // Wrap an optional error callback with a fallback error event.\r\n  var wrapError = function(model, options) {\r\n    var error = options.error;\r\n    options.error = function(resp) {\r\n      if (error) error.call(options.context, model, resp, options);\r\n      model.trigger('error', model, resp, options);\r\n    };\r\n  };\r\n\r\n  return Backbone;\r\n});"]}