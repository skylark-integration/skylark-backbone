{"version":3,"sources":["skylark-backbone-all.js"],"names":["define","class2type","type","split","forEach","name","toLowerCase","obj","String","toString","call","isFunction","value","isHtmlNode","Node","isObject","isString","isWindow","window","isArray","object","constructor","Array","isArrayLike","length","isBoolean","isDefined","isDocument","nodeType","DOCUMENT_NODE","isEmptyObject","isNumber","isPlainObject","Object","getPrototypeOf","prototype","isSameOrigin","href","origin","location","protocol","hostname","port","startsWith","types","eq","deepEq","hasOwnProperty","slice","keysFunc","defaults","SymbolProto","Symbol","allKeys","keys","key","push","has","path","i","_mixin","target","source","deep","safe","undefined","_parseMixinArgs","args","params","arguments","shift","pop","sources","mixin","apply","this","a","b","aStack","bStack","className","valueOf","areArrays","aCtor","bCtor","clone","src","checkCloneMethod","copy","index","l","each","callback","undef","extend","arg","isEqual","isMatch","attrs","removeItem","items","item","idx","indexOf","splice","result","fallback","prop","safeMixin","values","_","objects","filter","flatten","array","j","compact","first","n","inArray","makeArray","offset","startWith","concat","map","elements","uniq","arrays","createClass","_constructor","_construct","init","props","parent","mixins","options","innerParent","ctor","Error","clss","unshift","superclass","cls","clsMixines","serialMixins","newCtor","xtor","Function","create","__proto__","__mixin__","mergeMixins","klassName","__mixins__","partial","proto","_super","noOverrided","overrides","fn","superFn","tmp","overrided","ret","defineProperty","extendClass","inherit","f1","klass","QueryResults","results","isPromise","then","addIterativeMethod","method","Deferred","when","delegate","total","ArrayStore","queryEngine","query","queryObject","required","test","execute","arr","thisObject","out","cache","buildFn","sortSet","sort","aValue","attribute","bValue","descending","start","count","Infinity","matches","idProperty","get","id","data","getIdentity","put","Math","random","overwrite","add","remove","setData","identifier","nextId","aspect","methodName","advice","receiveArguments","dispatcher","existing","executionId","before","next","around","after","newResults","signal","previous","advised","advise","TMP","debounce","wait","timeout","context","clearTimeout","setTimeout","defer","requestAnimationFrame","setTimeoutout","noop","proxy","TypeError","returnTrue","returnFalse","funcs","PGLISTENERS","Promise","always","handler","done","fail","catch","self","p","promise","resolve","reject","_resolve","_reject","wrapPromise","d","added","state","isResolved","isRejected","onResolved","onRejected","onProgress","progress","__ctx__","pipe","resolveWith","_resolved","listener","error","reason","rejectWith","_rejected","errback","progback","all","race","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","err","immediate","async","parallel","ctx","rets","func","series","waterful","parseMilliSeconds","str","strs","number","parseInt","isNaN","trim","replace","Evented","on","events","selector","one","_hub","trigger","e","CustomEvent","eventName","listeners","len","reCompact","listened","event","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","unlistenTo","camelCase","toUpperCase","dasherize","deserializeValue","JSON","parse","lowerFirst","charAt","serializeValue","stringify","substitute","template","transform","getObject","match","retVal","getValue","_k","reverse","v","format","upperFirst","getAbsoluteUrl","url","document","createElement","Xhr","jsonpID","rscript","scriptTypeRE","xmlTypeRE","jsonType","htmlType","blankRE","XhrDefaultOptions","beforeSend","success","complete","global","accepts","script","json","xml","html","text","crossDomain","processData","xhrFields","withCredentials","mimeToDataType","mime","appendQuery","serializeData","param","traditional","serialize","scope","t","hash","escape","join","_request","xhr","XMLHttpRequest","dataType","handleAs","mimeType","headers","isFormData","FormData","basicAuthorizationToken","user","password","contentType","overrideMimeType","finish","onloadend","onabort","onprogress","ontimeout","status","getResponseHeader","responseText","eval","responseXML","Blob","xhrObj","response","reponse","statusText","evt","open","hdr","setRequestHeader","send","abort","request","post","patch","del","defaultOptions","strings","Restful","idAttribute","getBaseUrl","baseEndpoint","baseUrl","server","basePath","_head","_get","_post","verb","_put","_delete","_patch","retrieve","update","delete","Stateful","attributes","cid","uniqueId","cidPrefix","collection","set","changed","validationError","toJSON","attr","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","skylark","datetimes","_uid","idCounter","langx","createEvent","funcArg","payload","getQueryParams","segs","queryParam","nv","toPixel","parseFloat","uid","prefix","URL","webkitURL","dom","vendorPrefix","vendorPrefixRE","transEndEventNames","WebkitTransition","MozTransition","OTransition","transition","transEndEventName","css3PropPrefix","css3EventPrefix","cssStyles","cssProps","vendorPrefixesRE","testEl","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","requestFullScreen","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","testStyle","exitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","style","matched","RegExp","cssPropName","browser","isIE","exec","navigator","userAgent","normalizeStyleProperty","normalizeCssProperty","normalizeCssEvent","support","end","every","maybeAddPx","cssNumber","column-count","columns","font-weight","line-height","opacity","z-index","zoom","classReCache","classRE","node","svg","baseVal","elementDisplay","styler","autocssfix","cssHooks","addClass","elm","names","re","css","property","computedStyle","getComputedStyle","getPropertyValue","removeProperty","cssText","disabled","hasClass","hide","isInvisible","removeClass","show","nodeName","element","display","body","appendChild","parentNode","removeChild","defaultDisplay","toggleClass","fragmentRE","singleTagRE","div","table","tableBody","tableRow","containers","tr","tbody","thead","tfoot","td","th","*","rootNodeRE","ensureNodes","nodes","copyByClone","cloneNode","append","placing","tag","setAttribute","rxhtmlTag","isChildOf","directly","documentElement","contains","ownerDoc","ownerDocument","noder","active","doc","el","activeElement","blur","getAttribs","setAttrib","getAttrib","contents","chkName","contentDocument","childNodes","createFragment","$1","container","innerHTML","child","createTextNode","empty","hasChildNodes","firstChild","fullScreen","exitFullScreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","focusable","hasTabindex","mapName","img","focusableIfVisible","fieldset","$","is","closest","visible","isDoc","offsetParent","ownerWindow","defaultView","parentWindow","refNode","nextSibling","insertBefore","prepend","console","warn","children","oldNode","replaceChild","throb","timer","time","throbber","overlayDiv","position","top","left","width","height","zIndex","overlay","textNode","nodeValue","traverse","wrapper","wrapperNode","wrapperInner","unwrap","velm","local","nativeMatchesSelector","parsed","separatorIndex","combinatorIndex","reversed","from","reverseCache","reUnescape","expression","isReversed","Slick","currentCache","expressions","raw","regexp","parser","reverseCombinator","combinator","exp","last","parts","cexp","escapeRegExp","string","rawMatch","separator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","currentSeparator","currentParsed","classList","classes","pseudos","operator","rinputs","rheader","parseSelector","button","elem","checked","enabled","even","focus","tabindex","gt","sel","find","header","hidden","input","lt","not","odd","selected","tabbable","tabIndex","offsetWidth","createInputPseudo","createButtonPseudo","isArrayFilter","radio","checkbox","file","image","submit","reset","ancestors","root","rootIsSelector","descendants","querySelectorAll","matchError","descendant","querySelector","lastChild","previousSibling","check","adjacent","nextSiblings","previousSiblings","siblings","divide","cond","nativeSelector","customPseudos","part","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","combine","bit","node1","op","divided","single","currentBit","founds","found","currentItems","finder","ancestor","byId","getElementById","findAll","capitalRE","propMap","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","attrName","_store","confirm","store","_attributeData","_setData","dataAttrName","camelName","_getData","pluck","datax","dataName","aria","cleanData","removeAttr","removeAttribute","removeData","removeProp","txt","textContent","multiple","selectedOptions","option","ignoreProperties","eventMethods","preventDefault","stopImmediatePropagation","stopPropagation","readyRE","compatible","isDefaultPrevented","predicate","sourceMethod","ns","EventCtors","NativeEvents","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","change","selectionchange","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","bubbles","cancelable","namespace","getEventCtor","createProxy","originalEvent","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","_target","_event","_bindings","bindings","binding","_listener","domEvt","_args","isImmediatePropagationStopped","currentTarget","liveFired","related","relatedTarget","addEventListener","matcher","removing","removeEventListener","EventsHandler","_handler","register","specialEvent","bindingEvent","bindType","bindEventName","unregister","findHandler","ready","readyState","keyCodeLookup","backspace","comma","down","enter","home","page_down","page_up","period","right","space","tab","up","eventer","transitionEnd","delegateType","shortcuts","registry","run","shortcut","metaKey","ctrlKey","ctrl","alt","altKey","shiftKey","keyCode","charCode","pattern","shortcutKey","setting","charCodeAt","regKey","special","stop","evented","Event","dispatchEvent","cachedScrollbarWidth","px","scrollbarWidth","w1","w2","innerDiv","clientWidth","borderExtents","bottom","s","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientSize","dimension","clientHeight","isBorderBox","bex","pex","paddingExtents","getDocumentSize","max","scrollWidth","scrollHeight","offsetHeight","marginLeft","marginTop","marginRight","marginBottom","marginSize","me","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","relativeRect","scrollLeft","hasScrollLeft","scrollTo","scrollY","scrollTop","hasScrollTop","scrollX","innerWidth","innerHeight","geom","contentRect","cs","marginRect","pageRect","round","scrollIntoView","align","x","y","parentWidth","parentHeight","parentElm","pos","rootElm","offsetLeft","offsetTop","getOffset","abs","rhorizontal","rvertical","roffset","rposition","rpercent","getOffsets","offsets","parseCss","positions","fit","newOverRight","within","withinOffset","outerWidth","collisionPosLeft","collisionPosition","overLeft","overRight","collisionWidth","newOverBottom","outerHeight","collisionPosTop","overTop","overBottom","collisionHeight","flip","newOverLeft","myOffset","my","elemWidth","atOffset","at","targetWidth","newOverTop","elemHeight","targetHeight","flipfit","posit","targetOffset","basePosition","dimensions","of","withinElement","hasOffset","msize","scrollInfo","overflowX","overflowY","hasOverflowX","getScrollInfo","collision","pageY","pageX","horizontalOffset","verticalOffset","using","dir","feedback","horizontal","vertical","important","animationName","animationDuration","animationTiming","transitionProperty","transitionDuration","transitionTiming","transitionDelay","animationEnd","supportedTransforms","cssReset","animate","properties","duration","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","fx","speeds","normal","eace","clientLeft","scrollToTop","speed","scale","scrollFrom","freq","interval","setInterval","clearInterval","fadeTo","fadeIn","fadeOut","slideDown","visibility","overflow","slideUp","queue","fast","slow","emulateTransitionEnd","called","fadeToggle","ceasing","allback","slideToggle","toggle","isQ","some","rquickExpr","wrapper_map","wrapper_selector","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","arg1","wrapper_name_value","wrapper_value","newValue","NodeList","toArray","excludes","parents","parentsUntil","util","pushStack","elms","prevObject","replaceWith","newContent","wrap","structure","wrapAll","wrappingElement","wrapInner","prevAll","nextAll","wrapper_some_chk","detach","fnOver","fnOut","Dimension","m","margin","cb","mb","wrapper_node_operation","argType","appendTo","prependTo","insertAfter","replaceAll","original","elems","insert","toogle","scrollParent","includeHidden","excludeStaticParent","overflowRegex","andSelf","addBack","eventType","place","addContent","content","replaceClass","newClass","oldClass","disableSelection","enableSelection","plugin","returnValue","plugins","instantiate","jquery","grep","isNumeric","parseJSON","serializeArray","field","encodeURIComponent","bind","triggerHandler","undelegate","live","die","unbind","moveto","uuid","expr","filters","createPseudo","step","setOffset","curTop","curLeft","curElem","curOffset","curCSSTop","curCSSLeft","calculatePosition","curPosition","_data","propName","parseHTML","uniqueSort","unique","jQuery","parseArguments","ajaxJSONP","responseData","abortTimeout","_callbackName","jsonpCallback","callbackName","originalCallback","errorType","head","ajaxSettings","ajax","hasPlaceholder","jsonp","getJSON","originalLoad","addToPrefiltersOrTransports","dataTypeExpression","dataTypes","rnotwhite","ajaxPrefilter","ajaxTransport","ajaxSetup","settings","Callbacks","memory","firing","firingStart","firingLength","firingIndex","list","stack","once","fire","stopOnFalse","disable","lock","locked","fireWith","_p","originThen","expando","core_rnotwhite","core_push","Data","owner","descriptor","unlock","defineProperties","access","stored","camel","hasData","discard","data_priv","dequeue","startLength","hooks","_queueHooks","isArraylike","merge","second","setter","clearQueue","main","Backbone","backbone","methodMap","read","wrapError","model","resp","Entity","sync","models","fetch","entity","serverAttrs","save","destroy","stopListening","base","urlError","Collection","entities","comparator","_reset","setOptions","addOptions","min","tail","initialize","singular","removed","_removeEntitys","merged","_isEntity","toAdd","toMerge","toRemove","modelMap","sortable","sortAttr","_prepareEntity","_addReference","orderChanged","_removeReference","previousEntitys","_byId","entityId","where","findWhere","sortBy","callbackOpts","_onEntityEvent","prevId","emulateHTTP","emulateJSON","_method","textStatus","errorThrown","EventExtends","BackboneEvented","EventedProto","Events","previousUnderscore","ArrayProto","ObjProto","nativeIsArray","nativeKeys","nativeCreate","Ctor","_wrapped","exports","module","VERSION","builtinIteratee","optimizeCb","argCount","accumulator","iteratee","identity","restArguments","startIndex","rest","baseCreate","shallowProperty","deepGet","MAX_ARRAY_INDEX","pow","getLength","collect","currentKey","createReduce","memo","initial","reducer","reduce","foldl","inject","reduceRight","foldr","detect","keyFinder","findIndex","findKey","negate","any","includes","include","fromIndex","guard","invoke","contextPath","computed","lastComputed","shuffle","sample","rand","temp","criteria","group","behavior","partition","groupBy","indexBy","countBy","reStrSymbol","pass","take","Boolean","shallow","strict","output","isArguments","without","otherArrays","difference","isSorted","seen","union","intersection","argsLength","unzip","zip","createPredicateIndexFinder","findLastIndex","sortedIndex","low","high","mid","floor","createIndexFinder","predicateFind","lastIndexOf","range","ceil","chunk","executeBound","sourceFunc","boundFunc","callingContext","bound","callArgs","boundArgs","placeholder","bindAll","memoize","hasher","address","throttle","later","leading","now","throttled","remaining","trailing","debounced","callNow","compose","times","hasEnumBug","propertyIsEnumerable","nonEnumerableProps","collectNonEnumProps","nonEnumIdx","mapObject","pairs","invert","functions","methods","createAssigner","extendOwn","assign","keyInObj","pick","omit","tap","interceptor","isEmpty","isElement","nodelist","Int8Array","isFinite","isSymbol","isNull","isUndefined","noConflict","constant","propertyOf","accum","Date","getTime","escapeMap","&","<",">","\"","'","`","unescapeMap","createEscaper","escaper","testRegexp","replaceRegexp","unescape","templateSettings","evaluate","interpolate","noMatch","escapes","\\","\r","\n"," "," ","escapeChar","oldSettings","render","variable","argument","chain","instance","_chain","chainResult","underscore","_isModel","modelMatcher","protoProps","staticProps","addUnderscoreMethods","Class","defaultVal","addMethod","helper","[object Object]","modelId","Model","VisualElement","_elm","elmx","batch","action","HTMLElement","_delegator","pluginKlasses","pluginName","pluginInstance","pluginKlass","Plugin","_initOptions","ctors","_destroy","_delay","curOption","_setOptions","_setOption","domNode","shortcutName","extfn","shortcutter","View","preinitialize","viewOptions","_ensureElement","$el","_removeElement","setElement","undelegateEvents","_setElement","delegateEvents","delegateEventSplitter","_createElement","_setAttributes","S4","substring","LocalStorage","localStorage","getItem","records","setItem","jsonData","localSync","errorMessage","syncDfd","code","DOMException","QUOTA_EXCEEDED_ERR","ajaxSync","getSyncMethod"],"mappings":"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tC,SAAAkO,MAEAk/B,cAAAA,EAEAh6C,QAAA,SAAArJ,EAAA0J,GACA,IAAA3B,KAEAA,EAAA/H,GAAA0J,EAEA25C,EAAAh6C,QAAAtB,IAGA6C,SAAA,SAAAqY,EAAA3U,GACA,IAAAvG,KAEAkb,EAAAljB,QAAA,SAAAC,GACA+H,EAAA/H,GArDA,SAAA0J,EAAA4E,GACA,OAAA,WACA,IACAyf,EADAzpB,KACAg/C,KACAx5C,EAAAJ,EAAArF,MAAAiK,GAAAyf,GAAAzmB,OAAA3E,EAAAtC,KAAA2D,aAEA,GAAA8F,EAAA,CACA,GAAAA,IAAAwE,EACA,OANAhK,KAQAwF,aAAA45C,YACA55C,EAAA,IAAAu5C,EAAAv5C,GACAqU,EAAAjd,YAAA4I,KACAA,EAAAvC,EAAAlH,KAAAyJ,EAAA,SAAA4c,GACA,OAAAA,aAAAg9B,YACA,IAAAL,EAAA38B,GAEAA,KAMA,OAAA5c,GA8BA65C,CAAAr1C,EAAAtO,GAAAsO,KAGA+0C,EAAAh6C,QAAAtB,MAKAw7C,EAAA34C,UACA,OACA,OACA,OACA,aACA,aACA,OACA,OACAipB,GAGA0vB,EAAA34C,UACA,MACA,KACA,MACA,YACA,WACA4wB,GAGA+nB,EAAA34C,UACA,WACA,YACA,WACA,aACA,OACA,UACA,aACA,YACA,UACA,cACA,eACA,SACA,kBACA,mBACA,YACAqnB,GAMAsxB,EAAAh1B,KAAA,SAAAvb,GACA,MAAA,SAAAA,EACA1O,KAAAsrB,KAEAtrB,KAAAsrB,KAAAK,WAAAjd,IAKAuwC,EAAA34C,UACA,UACA,SACA,UACA,SACA,aACA,OACA,cACA,OACA,UACAu8B,GAIAoc,EAAA34C,UACA,gBACA,mBACA,eACA,eACA,aACA,cACA,cACA,SACA,gBACA,eACA,iBACA,eACA,WACA,mBACA,eACA,iBACA,aACA,YACA,OACA,SACAg2B,GAGA2iB,EAAA34C,UACA,QACA,SACA,SACA,QACA,WACA,WACA,QACA,OACA,YACA,WACA,UACA,SACA,cACA,UACA,UACA,QACA,WACA,UACA,eACA,UACA2b,GAGAg9B,EAAA34C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","file":"../skylark-backbone-all.js","sourcesContent":["define('skylark-langx/skylark',[], function() {\r\n    var skylark = {\r\n\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx/types',[\r\n],function(){\r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        \"Boolean Number String Function Array Date RegExp Object Error\".split(\" \").forEach(function(name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n    function isArray(object) {\r\n        return object && object.constructor === Array;\r\n    }\r\n\r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number' && !isFunction(obj);\r\n    }\r\n\r\n    function isBoolean(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && (obj instanceof Node);\r\n    }\r\n\r\n    function isInstanceOf( /*Object*/ value, /*Type*/ type) {\r\n        //Tests whether the value is an instance of a type.\r\n        if (value === undefined) {\r\n            return false;\r\n        } else if (value === null || type == Object) {\r\n            return true;\r\n        } else if (typeof value === \"number\") {\r\n            return type === Number;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else if (typeof value === \"boolean\") {\r\n            return type === Boolean;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else {\r\n            return (value instanceof type) || (value && value.isInstanceOf ? value.isInstanceOf(type) : false);\r\n        }\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n    return {\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: isDefined,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isWindow: isWindow,\r\n\r\n        type: type\r\n    };\r\n\r\n});\ndefine('skylark-langx/objects',[\r\n\t\"./types\"\r\n],function(types){\r\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty,\r\n        slice = Array.prototype.slice,\r\n        isBoolean = types.isBoolean,\r\n        isFunction = types.isFunction,\r\n\t\tisObject = types.isObject,\r\n\t\tisPlainObject = types.isPlainObject,\r\n\t\tisArray = types.isArray;\r\n\r\n     // An internal function for creating assigner functions.\r\n    function createAssigner(keysFunc, defaults) {\r\n        return function(obj) {\r\n          var length = arguments.length;\r\n          if (defaults) obj = Object(obj);  \r\n          if (length < 2 || obj == null) return obj;\r\n          for (var index = 1; index < length; index++) {\r\n            var source = arguments[index],\r\n                keys = keysFunc(source),\r\n                l = keys.length;\r\n            for (var i = 0; i < l; i++) {\r\n              var key = keys[i];\r\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n            }\r\n          }\r\n          return obj;\r\n       };\r\n    }\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    var eq, deepEq;\r\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n    eq = function(a, b, aStack, bStack) {\r\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n        // `null` or `undefined` only equal to itself (strict comparison).\r\n        if (a == null || b == null) return false;\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        if (a !== a) return b !== b;\r\n        // Exhaust primitive checks\r\n        var type = typeof a;\r\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n        return deepEq(a, b, aStack, bStack);\r\n    };\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    deepEq = function(a, b, aStack, bStack) {\r\n        // Unwrap any wrapped objects.\r\n        //if (a instanceof _) a = a._wrapped;\r\n        //if (b instanceof _) b = b._wrapped;\r\n        // Compare `[[Class]]` names.\r\n        var className = toString.call(a);\r\n        if (className !== toString.call(b)) return false;\r\n        switch (className) {\r\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n            case '[object RegExp]':\r\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n            case '[object String]':\r\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n                // equivalent to `new String(\"5\")`.\r\n                return '' + a === '' + b;\r\n            case '[object Number]':\r\n                // `NaN`s are equivalent, but non-reflexive.\r\n                // Object(NaN) is equivalent to NaN.\r\n                if (+a !== +a) return +b !== +b;\r\n                // An `egal` comparison is performed for other numeric values.\r\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n            case '[object Date]':\r\n            case '[object Boolean]':\r\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n                // millisecond representations. Note that invalid dates with millisecond representations\r\n                // of `NaN` are not equivalent.\r\n                return +a === +b;\r\n            case '[object Symbol]':\r\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n        }\r\n\r\n        var areArrays = className === '[object Array]';\r\n        if (!areArrays) {\r\n            if (typeof a != 'object' || typeof b != 'object') return false;\r\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n            // from different frames are.\r\n            var aCtor = a.constructor, bCtor = b.constructor;\r\n            if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n        // Initializing stack of traversed objects.\r\n        // It's done here since we only need them for objects and arrays comparison.\r\n        aStack = aStack || [];\r\n        bStack = bStack || [];\r\n        var length = aStack.length;\r\n        while (length--) {\r\n            // Linear search. Performance is inversely proportional to the number of\r\n            // unique nested structures.\r\n            if (aStack[length] === a) return bStack[length] === b;\r\n        }\r\n\r\n        // Add the first object to the stack of traversed objects.\r\n        aStack.push(a);\r\n        bStack.push(b);\r\n\r\n        // Recursively compare objects and arrays.\r\n        if (areArrays) {\r\n            // Compare array lengths to determine if a deep comparison is necessary.\r\n            length = a.length;\r\n            if (length !== b.length) return false;\r\n            // Deep compare the contents, ignoring non-numeric properties.\r\n            while (length--) {\r\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n            }\r\n        } else {\r\n            // Deep compare objects.\r\n            var keys = Object.keys(a), key;\r\n            length = keys.length;\r\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n            if (Object.keys(b).length !== length) return false;\r\n            while (length--) {\r\n                // Deep compare each member\r\n                key = keys[length];\r\n                if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n            }\r\n        }\r\n        // Remove the first object from the stack of traversed objects.\r\n        aStack.pop();\r\n        bStack.pop();\r\n        return true;\r\n    };\r\n\r\n    // Retrieve all the property names of an object.\r\n    function allKeys(obj) {\r\n        if (!isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function extend(target) {\r\n        var deep, args = slice.call(arguments, 1);\r\n        if (typeof target == 'boolean') {\r\n            deep = target\r\n            target = args.shift()\r\n        }\r\n        if (args.length == 0) {\r\n            args = [target];\r\n            target = this;\r\n        }\r\n        args.forEach(function(arg) {\r\n            mixin(target, arg, deep);\r\n        });\r\n        return target;\r\n    }\r\n\r\n    // Retrieve the names of an object's own properties.\r\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n    function keys(obj) {\r\n        if (isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) if (has(obj, key)) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function has(obj, path) {\r\n        if (!isArray(path)) {\r\n            return obj != null && hasOwnProperty.call(obj, path);\r\n        }\r\n        var length = path.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        return !!length;\r\n    }\r\n\r\n   // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    // Returns whether an object has a given set of `key:value` pairs.\r\n    function isMatch(object, attrs) {\r\n        var keys = keys(attrs), length = keys.length;\r\n        if (object == null) return !length;\r\n        var obj = Object(object);\r\n        for (var i = 0; i < length; i++) {\r\n          var key = keys[i];\r\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            //if (!source.hasOwnProperty(key)) {\r\n            //    continue;\r\n            //}\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0),\r\n            target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = [path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    // Retrieve the values of an object's properties.\r\n    function values(obj) {\r\n        var keys = _.keys(obj);\r\n        var length = keys.length;\r\n        var values = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            values[i] = obj[keys[i]];\r\n        }\r\n        return values;\r\n    }\r\n\r\n\r\n    \r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    return {\r\n        allKeys: allKeys,\r\n\r\n        clone: clone,\r\n\r\n        defaults : createAssigner(allKeys, true),\r\n\r\n        each : each,\r\n\r\n        extend : extend,\r\n\r\n        has: has,\r\n\r\n        isEqual: isEqual,\r\n\r\n        isMatch: isMatch,\r\n\r\n        keys: keys,\r\n\r\n        mixin: mixin,\r\n\r\n        removeItem: removeItem,\r\n\r\n        result : result,\r\n        \r\n        safeMixin: safeMixin,\r\n\r\n        values: values\r\n    };\r\n\r\n});\ndefine('skylark-langx/arrays',[\r\n\t\"./types\",\r\n    \"./objects\"\r\n],function(types,objects){\r\n\tvar filter = Array.prototype.filter,\r\n\t\tisArrayLike = types.isArrayLike;\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    return {\r\n        compact: compact,\r\n\r\n        first : function(items,n) {\r\n            if (n) {\r\n                return items.slice(0,n);\r\n            } else {\r\n                return items[0];\r\n            }\r\n        },\r\n\r\n\t    each: objects.each,\r\n\r\n        flatten: flatten,\r\n\r\n        inArray: inArray,\r\n\r\n        makeArray: makeArray,\r\n\r\n        map : map,\r\n        \r\n        uniq : uniq\r\n\r\n    }\r\n});\ndefine('skylark-langx/klass',[\r\n    \"./arrays\",\r\n    \"./objects\",\r\n    \"./types\"\r\n],function(arrays,objects,types){\r\n    var uniq = arrays.uniq,\r\n        has = objects.has,\r\n        mixin = objects.mixin,\r\n        isArray = types.isArray,\r\n        isDefined = types.isDefined;\r\n\r\n/* for reference \r\n function klass(props,parent) {\r\n    var ctor = function(){\r\n        this._construct();\r\n    };\r\n    ctor.prototype = props;\r\n    if (parent) {\r\n        ctor._proto_ = parent;\r\n        props.__proto__ = parent.prototype;\r\n    }\r\n    return ctor;\r\n}\r\n\r\n// Type some JavaScript code here.\r\nlet animal = klass({\r\n  _construct(){\r\n      this.name = this.name + \",hi\";\r\n  },\r\n    \r\n  name: \"Animal\",\r\n  eat() {         // [[HomeObject]] == animal\r\n    alert(`${this.name} eats.`);\r\n  }\r\n    \r\n    \r\n});\r\n\r\n\r\nlet rabbit = klass({\r\n  name: \"Rabbit\",\r\n  _construct(){\r\n      super._construct();\r\n  },\r\n  eat() {         // [[HomeObject]] == rabbit\r\n    super.eat();\r\n  }\r\n},animal);\r\n\r\nlet longEar = klass({\r\n  name: \"Long Ear\",\r\n  eat() {         // [[HomeObject]] == longEar\r\n    super.eat();\r\n  }\r\n},rabbit);\r\n*/\r\n    \r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    var f1 = function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided,\r\n                overrides = options.overrides || {};\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n                var prop = props[name];\r\n                if (typeof props[name] == \"function\") {\r\n                    proto[name] =  !prop._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                          (function(name, fn, superFn) {\r\n                            return function() {\r\n                                var tmp = this.overrided;\r\n\r\n                                // Add a new ._super() method that is the same method\r\n                                // but on the super-class\r\n                                this.overrided = superFn;\r\n\r\n                                // The method only need to be bound temporarily, so we\r\n                                // remove it when we're done executing\r\n                                var ret = fn.apply(this, arguments);\r\n\r\n                                this.overrided = tmp;\r\n\r\n                                return ret;\r\n                            };\r\n                        })(name, prop, _super[name]) :\r\n                        prop;\r\n                } else if (typeof prop == \"object\" && prop!==null && (prop.get)) {\r\n                    Object.defineProperty(proto,name,prop);\r\n                } else {\r\n                    proto[name] = prop;\r\n                }\r\n            }\r\n            return ctor;\r\n        }\r\n\r\n        function serialMixins(ctor,mixins) {\r\n            var result = [];\r\n\r\n            mixins.forEach(function(mixin){\r\n                if (has(mixin,\"__mixins__\")) {\r\n                     throw new Error(\"nested mixins\");\r\n                }\r\n                var clss = [];\r\n                while (mixin) {\r\n                    clss.unshift(mixin);\r\n                    mixin = mixin.superclass;\r\n                }\r\n                result = result.concat(clss);\r\n            });\r\n\r\n            result = uniq(result);\r\n\r\n            result = result.filter(function(mixin){\r\n                var cls = ctor;\r\n                while (cls) {\r\n                    if (mixin === cls) {\r\n                        return false;\r\n                    }\r\n                    if (has(cls,\"__mixins__\")) {\r\n                        var clsMixines = cls[\"__mixins__\"];\r\n                        for (var i=0; i<clsMixines.length;i++) {\r\n                            if (clsMixines[i]===mixin) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                    cls = cls.superclass;\r\n                }\r\n                return true;\r\n            });\r\n\r\n            if (result.length>0) {\r\n                return result;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        function mergeMixins(ctor,mixins) {\r\n            var newCtor =ctor;\r\n            for (var i=0;i<mixins.length;i++) {\r\n                var xtor = new Function();\r\n                xtor.prototype = Object.create(newCtor.prototype);\r\n                xtor.__proto__ = newCtor;\r\n                xtor.superclass = null;\r\n                mixin(xtor.prototype,mixins[i].prototype);\r\n                xtor.prototype.__mixin__ = mixins[i];\r\n                newCtor = xtor;\r\n            }\r\n\r\n            return newCtor;\r\n        }\r\n\r\n        function _constructor ()  {\r\n            if (this._construct) {\r\n                return this._construct.apply(this, arguments);\r\n            } else  if (this.init) {\r\n                return this.init.apply(this, arguments);\r\n            }\r\n        }\r\n\r\n        return function createClass(props, parent, mixins,options) {\r\n            if (isArray(parent)) {\r\n                options = mixins;\r\n                mixins = parent;\r\n                parent = null;\r\n            }\r\n            parent = parent || Object;\r\n\r\n            if (isDefined(mixins) && !isArray(mixins)) {\r\n                options = mixins;\r\n                mixins = false;\r\n            }\r\n\r\n            var innerParent = parent;\r\n\r\n            if (mixins) {\r\n                mixins = serialMixins(innerParent,mixins);\r\n            }\r\n\r\n            if (mixins) {\r\n                innerParent = mergeMixins(innerParent,mixins);\r\n            }\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"return ctor._constructor.apply(inst, arguments) || inst;\" + \r\n                    \"}\"\r\n                )();\r\n\r\n\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(innerParent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = innerParent;\r\n\r\n\r\n            if (!ctor._constructor) {\r\n                ctor._constructor = _constructor;\r\n            } \r\n\r\n            if (mixins) {\r\n                ctor.__mixins__ = mixins;\r\n            }\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, mixins,options) {\r\n                    return createClass(props, this, mixins,options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        };\r\n    }\r\n\r\n    var createClass = f1();\r\n\r\n    return createClass;\r\n});\ndefine('skylark-langx/ArrayStore',[\r\n    \"./klass\"\r\n],function(klass){\r\n    var SimpleQueryEngine = function(query, options){\r\n        // summary:\r\n        //      Simple query engine that matches using filter functions, named filter\r\n        //      functions or objects by name-value on a query object hash\r\n        //\r\n        // description:\r\n        //      The SimpleQueryEngine provides a way of getting a QueryResults through\r\n        //      the use of a simple object hash as a filter.  The hash will be used to\r\n        //      match properties on data objects with the corresponding value given. In\r\n        //      other words, only exact matches will be returned.\r\n        //\r\n        //      This function can be used as a template for more complex query engines;\r\n        //      for example, an engine can be created that accepts an object hash that\r\n        //      contains filtering functions, or a string that gets evaluated, etc.\r\n        //\r\n        //      When creating a new dojo.store, simply set the store's queryEngine\r\n        //      field as a reference to this function.\r\n        //\r\n        // query: Object\r\n        //      An object hash with fields that may match fields of items in the store.\r\n        //      Values in the hash will be compared by normal == operator, but regular expressions\r\n        //      or any object that provides a test() method are also supported and can be\r\n        //      used to match strings by more complex expressions\r\n        //      (and then the regex's or object's test() method will be used to match values).\r\n        //\r\n        // options: dojo/store/api/Store.QueryOptions?\r\n        //      An object that contains optional information such as sort, start, and count.\r\n        //\r\n        // returns: Function\r\n        //      A function that caches the passed query under the field \"matches\".  See any\r\n        //      of the \"query\" methods on dojo.stores.\r\n        //\r\n        // example:\r\n        //      Define a store with a reference to this engine, and set up a query method.\r\n        //\r\n        //  |   var myStore = function(options){\r\n        //  |       //  ...more properties here\r\n        //  |       this.queryEngine = SimpleQueryEngine;\r\n        //  |       //  define our query method\r\n        //  |       this.query = function(query, options){\r\n        //  |           return QueryResults(this.queryEngine(query, options)(this.data));\r\n        //  |       };\r\n        //  |   };\r\n\r\n        // create our matching query function\r\n        switch(typeof query){\r\n            default:\r\n                throw new Error(\"Can not query with a \" + typeof query);\r\n            case \"object\": case \"undefined\":\r\n                var queryObject = query;\r\n                query = function(object){\r\n                    for(var key in queryObject){\r\n                        var required = queryObject[key];\r\n                        if(required && required.test){\r\n                            // an object can provide a test method, which makes it work with regex\r\n                            if(!required.test(object[key], object)){\r\n                                return false;\r\n                            }\r\n                        }else if(required != object[key]){\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                };\r\n                break;\r\n            case \"string\":\r\n                // named query\r\n                if(!this[query]){\r\n                    throw new Error(\"No filter function \" + query + \" was found in store\");\r\n                }\r\n                query = this[query];\r\n                // fall through\r\n            case \"function\":\r\n                // fall through\r\n        }\r\n        \r\n        function filter(arr, callback, thisObject){\r\n            // summary:\r\n            //      Returns a new Array with those items from arr that match the\r\n            //      condition implemented by callback.\r\n            // arr: Array\r\n            //      the array to iterate over.\r\n            // callback: Function|String\r\n            //      a function that is invoked with three arguments (item,\r\n            //      index, array). The return of this function is expected to\r\n            //      be a boolean which determines whether the passed-in item\r\n            //      will be included in the returned array.\r\n            // thisObject: Object?\r\n            //      may be used to scope the call to callback\r\n            // returns: Array\r\n            // description:\r\n            //      This function corresponds to the JavaScript 1.6 Array.filter() method, with one difference: when\r\n            //      run over sparse arrays, this implementation passes the \"holes\" in the sparse array to\r\n            //      the callback function with a value of undefined. JavaScript 1.6's filter skips the holes in the sparse array.\r\n            //      For more details, see:\r\n            //      https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\r\n            // example:\r\n            //  | // returns [2, 3, 4]\r\n            //  | array.filter([1, 2, 3, 4], function(item){ return item>1; });\r\n\r\n            // TODO: do we need \"Ctr\" here like in map()?\r\n            var i = 0, l = arr && arr.length || 0, out = [], value;\r\n            if(l && typeof arr == \"string\") arr = arr.split(\"\");\r\n            if(typeof callback == \"string\") callback = cache[callback] || buildFn(callback);\r\n            if(thisObject){\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback.call(thisObject, value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }else{\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback(value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }\r\n            return out; // Array\r\n        }\r\n\r\n        function execute(array){\r\n            // execute the whole query, first we filter\r\n            var results = filter(array, query);\r\n            // next we sort\r\n            var sortSet = options && options.sort;\r\n            if(sortSet){\r\n                results.sort(typeof sortSet == \"function\" ? sortSet : function(a, b){\r\n                    for(var sort, i=0; sort = sortSet[i]; i++){\r\n                        var aValue = a[sort.attribute];\r\n                        var bValue = b[sort.attribute];\r\n                        // valueOf enables proper comparison of dates\r\n                        aValue = aValue != null ? aValue.valueOf() : aValue;\r\n                        bValue = bValue != null ? bValue.valueOf() : bValue;\r\n                        if (aValue != bValue){\r\n                            // modified by lwf 2016/07/09\r\n                            //return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                            return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                        }\r\n                    }\r\n                    return 0;\r\n                });\r\n            }\r\n            // now we paginate\r\n            if(options && (options.start || options.count)){\r\n                var total = results.length;\r\n                results = results.slice(options.start || 0, (options.start || 0) + (options.count || Infinity));\r\n                results.total = total;\r\n            }\r\n            return results;\r\n        }\r\n        execute.matches = query;\r\n        return execute;\r\n    };\r\n\r\n    var QueryResults = function(results){\r\n        // summary:\r\n        //      A function that wraps the results of a store query with additional\r\n        //      methods.\r\n        // description:\r\n        //      QueryResults is a basic wrapper that allows for array-like iteration\r\n        //      over any kind of returned data from a query.  While the simplest store\r\n        //      will return a plain array of data, other stores may return deferreds or\r\n        //      promises; this wrapper makes sure that *all* results can be treated\r\n        //      the same.\r\n        //\r\n        //      Additional methods include `forEach`, `filter` and `map`.\r\n        // results: Array|dojo/promise/Promise\r\n        //      The result set as an array, or a promise for an array.\r\n        // returns:\r\n        //      An array-like object that can be used for iterating over.\r\n        // example:\r\n        //      Query a store and iterate over the results.\r\n        //\r\n        //  |   store.query({ prime: true }).forEach(function(item){\r\n        //  |       //  do something\r\n        //  |   });\r\n\r\n        if(!results){\r\n            return results;\r\n        }\r\n\r\n        var isPromise = !!results.then;\r\n        // if it is a promise it may be frozen\r\n        if(isPromise){\r\n            results = Object.delegate(results);\r\n        }\r\n        function addIterativeMethod(method){\r\n            // Always add the iterative methods so a QueryResults is\r\n            // returned whether the environment is ES3 or ES5\r\n            results[method] = function(){\r\n                var args = arguments;\r\n                var result = Deferred.when(results, function(results){\r\n                    //Array.prototype.unshift.call(args, results);\r\n                    return QueryResults(Array.prototype[method].apply(results, args));\r\n                });\r\n                // forEach should only return the result of when()\r\n                // when we're wrapping a promise\r\n                if(method !== \"forEach\" || isPromise){\r\n                    return result;\r\n                }\r\n            };\r\n        }\r\n\r\n        addIterativeMethod(\"forEach\");\r\n        addIterativeMethod(\"filter\");\r\n        addIterativeMethod(\"map\");\r\n        if(results.total == null){\r\n            results.total = Deferred.when(results, function(results){\r\n                return results.length;\r\n            });\r\n        }\r\n        return results; // Object\r\n    };\r\n\r\n    var ArrayStore = klass({\r\n        \"klassName\": \"ArrayStore\",\r\n\r\n        \"queryEngine\": SimpleQueryEngine,\r\n        \r\n        \"idProperty\": \"id\",\r\n\r\n\r\n        get: function(id){\r\n            // summary:\r\n            //      Retrieves an object by its identity\r\n            // id: Number\r\n            //      The identity to use to lookup the object\r\n            // returns: Object\r\n            //      The object in the store that matches the given id.\r\n            return this.data[this.index[id]];\r\n        },\r\n\r\n        getIdentity: function(object){\r\n            return object[this.idProperty];\r\n        },\r\n\r\n        put: function(object, options){\r\n            var data = this.data,\r\n                index = this.index,\r\n                idProperty = this.idProperty;\r\n            var id = object[idProperty] = (options && \"id\" in options) ? options.id : idProperty in object ? object[idProperty] : Math.random();\r\n            if(id in index){\r\n                // object exists\r\n                if(options && options.overwrite === false){\r\n                    throw new Error(\"Object already exists\");\r\n                }\r\n                // replace the entry in data\r\n                data[index[id]] = object;\r\n            }else{\r\n                // add the new object\r\n                index[id] = data.push(object) - 1;\r\n            }\r\n            return id;\r\n        },\r\n\r\n        add: function(object, options){\r\n            (options = options || {}).overwrite = false;\r\n            // call put with overwrite being false\r\n            return this.put(object, options);\r\n        },\r\n\r\n        remove: function(id){\r\n            // summary:\r\n            //      Deletes an object by its identity\r\n            // id: Number\r\n            //      The identity to use to delete the object\r\n            // returns: Boolean\r\n            //      Returns true if an object was removed, falsy (undefined) if no object matched the id\r\n            var index = this.index;\r\n            var data = this.data;\r\n            if(id in index){\r\n                data.splice(index[id], 1);\r\n                // now we have to reindex\r\n                this.setData(data);\r\n                return true;\r\n            }\r\n        },\r\n        query: function(query, options){\r\n            // summary:\r\n            //      Queries the store for objects.\r\n            // query: Object\r\n            //      The query to use for retrieving objects from the store.\r\n            // options: dojo/store/api/Store.QueryOptions?\r\n            //      The optional arguments to apply to the resultset.\r\n            // returns: dojo/store/api/Store.QueryResults\r\n            //      The results of the query, extended with iterative methods.\r\n            //\r\n            // example:\r\n            //      Given the following store:\r\n            //\r\n            //  |   var store = new Memory({\r\n            //  |       data: [\r\n            //  |           {id: 1, name: \"one\", prime: false },\r\n            //  |           {id: 2, name: \"two\", even: true, prime: true},\r\n            //  |           {id: 3, name: \"three\", prime: true},\r\n            //  |           {id: 4, name: \"four\", even: true, prime: false},\r\n            //  |           {id: 5, name: \"five\", prime: true}\r\n            //  |       ]\r\n            //  |   });\r\n            //\r\n            //  ...find all items where \"prime\" is true:\r\n            //\r\n            //  |   var results = store.query({ prime: true });\r\n            //\r\n            //  ...or find all items where \"even\" is true:\r\n            //\r\n            //  |   var results = store.query({ even: true });\r\n            return QueryResults(this.queryEngine(query, options)(this.data));\r\n        },\r\n\r\n        setData: function(data){\r\n            // summary:\r\n            //      Sets the given data as the source for this store, and indexes it\r\n            // data: Object[]\r\n            //      An array of objects to use as the source of data.\r\n            if(data.items){\r\n                // just for convenience with the data format IFRS expects\r\n                this.idProperty = data.identifier || this.idProperty;\r\n                data = this.data = data.items;\r\n            }else{\r\n                this.data = data;\r\n            }\r\n            this.index = {};\r\n            for(var i = 0, l = data.length; i < l; i++){\r\n                this.index[data[i][this.idProperty]] = i;\r\n            }\r\n        },\r\n\r\n        init: function(options) {\r\n            for(var i in options){\r\n                this[i] = options[i];\r\n            }\r\n            this.setData(this.data || []);\r\n        }\r\n\r\n    });\r\n\r\n\treturn ArrayStore;\r\n});\ndefine('skylark-langx/aspect',[\r\n],function(){\r\n\r\n  var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n    return {\r\n        after: aspect(\"after\"),\r\n \r\n        around: aspect(\"around\"),\r\n        \r\n        before: aspect(\"before\")\r\n    };\r\n});\ndefine('skylark-langx/funcs',[\r\n    \"./objects\",\r\n\t\"./types\"\r\n],function(objects,types){\r\n\tvar mixin = objects.mixin,\r\n        slice = Array.prototype.slice,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString;\r\n\r\n    function defer(fn) {\r\n        if (requestAnimationFrame) {\r\n            requestAnimationFrame(fn);\r\n        } else {\r\n            setTimeoutout(fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function noop() {\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n    function debounce(fn, wait) {\r\n        var timeout;\r\n        return function () {\r\n            var context = this, args = arguments;\r\n            var later = function () {\r\n                timeout = null;\r\n                fn.apply(context, args);\r\n            };\r\n            if (timeout) clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n   \r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n\r\n    return {\r\n        debounce: debounce,\r\n\r\n        delegate: delegate,\r\n\r\n        defer: defer,\r\n\r\n        noop : noop,\r\n\r\n        proxy: proxy,\r\n\r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        }\r\n    };\r\n});\ndefine('skylark-langx/Deferred',[\r\n    \"./arrays\",\r\n\t\"./funcs\",\r\n    \"./objects\"\r\n],function(arrays,funcs,objects){\r\n    \"use strict\";\r\n    \r\n    var  PGLISTENERS = Symbol ? Symbol() : '__pglisteners';\r\n\r\n    var slice = Array.prototype.slice,\r\n        proxy = funcs.proxy,\r\n        makeArray = arrays.makeArray,\r\n        result = objects.result,\r\n        mixin = objects.mixin;\r\n\r\n    mixin(Promise.prototype,{\r\n        always: function(handler) {\r\n            //this.done(handler);\r\n            //this.fail(handler);\r\n            this.then(handler,handler);\r\n            return this;\r\n        },\r\n        done : function(handler) {\r\n            this.then(handler);\r\n            return this;\r\n        },\r\n        fail : function(handler) { \r\n            //return mixin(Promise.prototype.catch.call(this,handler),added);\r\n            //return this.then(null,handler);\r\n            this.catch(handler);\r\n            return this;\r\n        }\r\n    });\r\n\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            });\r\n\r\n        wrapPromise(p,self);\r\n\r\n        this[PGLISTENERS] = [];\r\n\r\n        //this.resolve = Deferred.prototype.resolve.bind(this);\r\n        //this.reject = Deferred.prototype.reject.bind(this);\r\n        //this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n    function wrapPromise(p,d) {\r\n        var   added = {\r\n                state : function() {\r\n                    if (d.isResolved()) {\r\n                        return 'resolved';\r\n                    }\r\n                    if (d.isRejected()) {\r\n                        return 'rejected';\r\n                    }\r\n                    return 'pending';\r\n                },\r\n                then : function(onResolved,onRejected,onProgress) {\r\n                    if (onProgress) {\r\n                        this.progress(onProgress);\r\n                    }\r\n                    return mixin(Promise.prototype.then.call(this,\r\n                            onResolved && function(args) {\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onResolved.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onResolved(args);\r\n                                }\r\n                            },\r\n                            onRejected && function(args){\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onRejected.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onRejected(args);\r\n                                }\r\n                            }),added);\r\n                },\r\n                progress : function(handler) {\r\n                    d[PGLISTENERS].push(handler);\r\n                    return this;\r\n                }\r\n\r\n            };\r\n\r\n        added.pipe = added.then;\r\n        return mixin(p,added);\r\n\r\n    }\r\n\r\n    Deferred.prototype.resolve = function(value) {\r\n        var args = slice.call(arguments);\r\n        return this.resolveWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.resolveWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._resolve(args);\r\n        this._resolved = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.progress = function(value) {\r\n        try {\r\n          return this[PGLISTENERS].forEach(function (listener) {\r\n            return listener(value);\r\n          });\r\n        } catch (error) {\r\n          this.reject(error);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        var args = slice.call(arguments);\r\n        return this.rejectWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.rejectWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._reject(args);\r\n        this._rejected = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.isResolved = function() {\r\n        return !!this._resolved;\r\n    };\r\n\r\n    Deferred.prototype.isRejected = function() {\r\n        return !!this._rejected;\r\n    };\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        var p = result(this,\"promise\");\r\n        return p.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.prototype.done  = Deferred.prototype.then;\r\n\r\n    Deferred.all = function(array) {\r\n        return wrapPromise(Promise.all(array));\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return wrapPromise(Promise.race(array));\r\n    };\r\n\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(proxy(deferred.resolve,deferred), proxy(deferred.reject,deferred), deferred.progress);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve.apply(d,arguments);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n    return Deferred;\r\n});\ndefine('skylark-langx/async',[\r\n    \"./Deferred\",\r\n    \"./arrays\"\r\n],function(Deferred,arrays){\r\n    var each = arrays.each;\r\n    \r\n    var async = {\r\n        parallel : function(arr,args,ctx) {\r\n            var rets = [];\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            each(arr,function(i,func){\r\n                rets.push(func.apply(ctx,args));\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        series : function(arr,args,ctx) {\r\n            var rets = [],\r\n                d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolve();\r\n            each(arr,function(i,func){\r\n                p = p.then(function(){\r\n                    return func.apply(ctx,args);\r\n                });\r\n                rets.push(p);\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        waterful : function(arr,args,ctx) {\r\n            var d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolveWith(ctx,args);\r\n\r\n            each(arr,function(i,func){\r\n                p = p.then(func);\r\n            });\r\n            return p;\r\n        }\r\n    };\r\n\r\n\treturn async;\t\r\n});\ndefine('skylark-langx/datetimes',[],function(){\r\n     function parseMilliSeconds(str) {\r\n\r\n        var strs = str.split(' ');\r\n        var number = parseInt(strs[0]);\r\n\r\n        if (isNaN(number)){\r\n            return 0;\r\n        }\r\n\r\n        var min = 60000 * 60;\r\n\r\n        switch (strs[1].trim().replace(/\\./g, '')) {\r\n            case 'minutes':\r\n            case 'minute':\r\n            case 'min':\r\n            case 'mm':\r\n            case 'm':\r\n                return 60000 * number;\r\n            case 'hours':\r\n            case 'hour':\r\n            case 'HH':\r\n            case 'hh':\r\n            case 'h':\r\n            case 'H':\r\n                return min * number;\r\n            case 'seconds':\r\n            case 'second':\r\n            case 'sec':\r\n            case 'ss':\r\n            case 's':\r\n                return 1000 * number;\r\n            case 'days':\r\n            case 'day':\r\n            case 'DD':\r\n            case 'dd':\r\n            case 'd':\r\n                return (min * 24) * number;\r\n            case 'months':\r\n            case 'month':\r\n            case 'MM':\r\n            case 'M':\r\n                return (min * 24 * 28) * number;\r\n            case 'weeks':\r\n            case 'week':\r\n            case 'W':\r\n            case 'w':\r\n                return (min * 24 * 7) * number;\r\n            case 'years':\r\n            case 'year':\r\n            case 'yyyy':\r\n            case 'yy':\r\n            case 'y':\r\n                return (min * 24 * 365) * number;\r\n            default:\r\n                return 0;\r\n        }\r\n    };\r\n\t\r\n\treturn {\r\n\t\tparseMilliSeconds\r\n\t};\r\n});\ndefine('skylark-langx/Evented',[\r\n    \"./klass\",\r\n    \"./objects\",\r\n\t\"./types\"\r\n],function(klass,objects,types){\r\n\tvar slice = Array.prototype.slice,\r\n        isDefined = types.isDefined,\r\n        isPlainObject = types.isPlainObject,\r\n\t\tisFunction = types.isFunction,\r\n\t\tisString = types.isString,\r\n\t\tisEmptyObject = types.isEmptyObject,\r\n\t\tmixin = objects.mixin;\r\n\r\n    var Evented = klass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        trigger: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var listeners = self._hub[eventName];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(name) {\r\n                var evts = _hub[name];\r\n                var liveEvents = [];\r\n\r\n                if (evts && callback) {\r\n                    for (var i = 0, len = evts.length; i < len; i++) {\r\n                        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\r\n                            liveEvents.push(evts[i]);\r\n                    }\r\n                }\r\n\r\n                if (liveEvents.length) {\r\n                    _hub[name] = liveEvents;\r\n                } else {\r\n                    delete _hub[name];\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    var listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n\treturn Evented;\r\n\r\n});\ndefine('skylark-langx/strings',[\r\n],function(){\r\n\r\n     /*\r\n     * Converts camel case into dashes.\r\n     * @param {String} str\r\n     * @return {String}\r\n     * @exapmle marginTop -> margin-top\r\n     */\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n\treturn {\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n\r\n\r\n        dasherize: dasherize,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n\r\n        substitute: substitute,\r\n\r\n        trim: trim,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        }\r\n\t} ; \r\n\r\n});\ndefine('skylark-langx/Xhr',[\r\n    \"./arrays\",\r\n    \"./Deferred\",\r\n    \"./Evented\",\r\n    \"./objects\",\r\n    \"./funcs\",\r\n    \"./types\"\r\n],function(arrays,Deferred,Evented,objects,funcs,types){\r\n    var each = arrays.each,\r\n        mixin = objects.mixin,\r\n        noop = funcs.noop,\r\n        isArray = types.isArray,\r\n        isFunction = types.isFunction,\r\n        isPlainObject = types.isPlainObject,\r\n        type = types.type;\r\n \r\n     var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n   \r\n    var Xhr = (function(){\r\n        var jsonpID = 0,\r\n            key,\r\n            name,\r\n            rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n            scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n            xmlTypeRE = /^(?:text|application)\\/xml/i,\r\n            jsonType = 'application/json',\r\n            htmlType = 'text/html',\r\n            blankRE = /^\\s*$/;\r\n\r\n        var XhrDefaultOptions = {\r\n            async: true,\r\n\r\n            // Default type of request\r\n            type: 'GET',\r\n            // Callback that is executed before request\r\n            beforeSend: noop,\r\n            // Callback that is executed if the request succeeds\r\n            success: noop,\r\n            // Callback that is executed the the server drops error\r\n            error: noop,\r\n            // Callback that is executed on request complete (both: error and success)\r\n            complete: noop,\r\n            // The context for the callbacks\r\n            context: null,\r\n            // Whether to trigger \"global\" Ajax events\r\n            global: true,\r\n\r\n            // MIME types mapping\r\n            // IIS returns Javascript as \"application/x-javascript\"\r\n            accepts: {\r\n                script: 'text/javascript, application/javascript, application/x-javascript',\r\n                json: 'application/json',\r\n                xml: 'application/xml, text/xml',\r\n                html: 'text/html',\r\n                text: 'text/plain'\r\n            },\r\n            // Whether the request is to another domain\r\n            crossDomain: false,\r\n            // Default timeout\r\n            timeout: 0,\r\n            // Whether data should be serialized to string\r\n            processData: true,\r\n            // Whether the browser should be allowed to cache GET responses\r\n            cache: true,\r\n\r\n            xhrFields : {\r\n                withCredentials : true\r\n            }\r\n        };\r\n\r\n        function mimeToDataType(mime) {\r\n            if (mime) {\r\n                mime = mime.split(';', 2)[0];\r\n            }\r\n            if (mime) {\r\n                if (mime == htmlType) {\r\n                    return \"html\";\r\n                } else if (mime == jsonType) {\r\n                    return \"json\";\r\n                } else if (scriptTypeRE.test(mime)) {\r\n                    return \"script\";\r\n                } else if (xmlTypeRE.test(mime)) {\r\n                    return \"xml\";\r\n                }\r\n            }\r\n            return \"text\";\r\n        }\r\n\r\n        function appendQuery(url, query) {\r\n            if (query == '') return url\r\n            return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n        }\r\n\r\n        // serialize payload and append it to the URL for GET requests\r\n        function serializeData(options) {\r\n            options.data = options.data || options.query;\r\n            if (options.processData && options.data && type(options.data) != \"string\") {\r\n                options.data = param(options.data, options.traditional);\r\n            }\r\n            if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) {\r\n                options.url = appendQuery(options.url, options.data);\r\n                options.data = undefined;\r\n            }\r\n        }\r\n\r\n        function serialize(params, obj, traditional, scope) {\r\n            var t, array = isArray(obj),\r\n                hash = isPlainObject(obj)\r\n            each(obj, function(key, value) {\r\n                t =type(value);\r\n                if (scope) key = traditional ? scope :\r\n                    scope + '[' + (hash || t == 'object' || t == 'array' ? key : '') + ']'\r\n                // handle data in serializeArray() format\r\n                if (!scope && array) params.add(value.name, value.value)\r\n                // recurse into nested objects\r\n                else if (t == \"array\" || (!traditional && t == \"object\"))\r\n                    serialize(params, value, traditional, key)\r\n                else params.add(key, value)\r\n            })\r\n        }\r\n\r\n        var param = function(obj, traditional) {\r\n            var params = []\r\n            params.add = function(key, value) {\r\n                if (isFunction(value)) value = value()\r\n                if (value == null) value = \"\"\r\n                this.push(escape(key) + '=' + escape(value))\r\n            }\r\n            serialize(params, obj, traditional)\r\n            return params.join('&').replace(/%20/g, '+')\r\n        };\r\n\r\n        var Xhr = Evented.inherit({\r\n            klassName : \"Xhr\",\r\n\r\n            _request  : function(args) {\r\n                var _ = this._,\r\n                    self = this,\r\n                    options = mixin({},XhrDefaultOptions,_.options,args),\r\n                    xhr = _.xhr = new XMLHttpRequest();\r\n\r\n                serializeData(options)\r\n\r\n                var dataType = options.dataType || options.handleAs,\r\n                    mime = options.mimeType || options.accepts[dataType],\r\n                    headers = options.headers,\r\n                    xhrFields = options.xhrFields,\r\n                    isFormData = options.data && options.data instanceof FormData,\r\n                    basicAuthorizationToken = options.basicAuthorizationToken,\r\n                    type = options.type,\r\n                    url = options.url,\r\n                    async = options.async,\r\n                    user = options.user , \r\n                    password = options.password,\r\n                    deferred = new Deferred(),\r\n                    contentType = isFormData ? false : 'application/x-www-form-urlencoded';\r\n\r\n                if (xhrFields) {\r\n                    for (name in xhrFields) {\r\n                        xhr[name] = xhrFields[name];\r\n                    }\r\n                }\r\n\r\n                if (mime && mime.indexOf(',') > -1) {\r\n                    mime = mime.split(',', 2)[0];\r\n                }\r\n                if (mime && xhr.overrideMimeType) {\r\n                    xhr.overrideMimeType(mime);\r\n                }\r\n\r\n                //if (dataType) {\r\n                //    xhr.responseType = dataType;\r\n                //}\r\n\r\n                var finish = function() {\r\n                    xhr.onloadend = noop;\r\n                    xhr.onabort = noop;\r\n                    xhr.onprogress = noop;\r\n                    xhr.ontimeout = noop;\r\n                    xhr = null;\r\n                }\r\n                var onloadend = function() {\r\n                    var result, error = false\r\n                    if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && getAbsoluteUrl(url).startsWith('file:'))) {\r\n                        dataType = dataType || mimeToDataType(options.mimeType || xhr.getResponseHeader('content-type'));\r\n\r\n                        result = xhr.responseText;\r\n                        try {\r\n                            if (dataType == 'script') {\r\n                                eval(result);\r\n                            } else if (dataType == 'xml') {\r\n                                result = xhr.responseXML;\r\n                            } else if (dataType == 'json') {\r\n                                result = blankRE.test(result) ? null : JSON.parse(result);\r\n                            } else if (dataType == \"blob\") {\r\n                                result = Blob([xhrObj.response]);\r\n                            } else if (dataType == \"arraybuffer\") {\r\n                                result = xhr.reponse;\r\n                            }\r\n                        } catch (e) { \r\n                            error = e;\r\n                        }\r\n\r\n                        if (error) {\r\n                            deferred.reject(error,xhr.status,xhr);\r\n                        } else {\r\n                            deferred.resolve(result,xhr.status,xhr);\r\n                        }\r\n                    } else {\r\n                        deferred.reject(new Error(xhr.statusText),xhr.status,xhr);\r\n                    }\r\n                    finish();\r\n                };\r\n\r\n                var onabort = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"abort\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n \r\n                var ontimeout = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"timeout\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n\r\n                var onprogress = function(evt) {\r\n                    if (deferred) {\r\n                        deferred.progress(evt,xhr.status,xhr);\r\n                    }\r\n                }\r\n\r\n                xhr.onloadend = onloadend;\r\n                xhr.onabort = onabort;\r\n                xhr.ontimeout = ontimeout;\r\n                xhr.onprogress = onprogress;\r\n\r\n                xhr.open(type, url, async, user, password);\r\n               \r\n                if (headers) {\r\n                    for ( var key in headers) {\r\n                        var value = headers[key];\r\n \r\n                        if(key.toLowerCase() === 'content-type'){\r\n                            contentType = headers[hdr];\r\n                        } else {\r\n                           xhr.setRequestHeader(key, value);\r\n                        }\r\n                    }\r\n                }   \r\n\r\n                if  (contentType && contentType !== false){\r\n                    xhr.setRequestHeader('Content-Type', contentType);\r\n                }\r\n\r\n                if(!headers || !('X-Requested-With' in headers)){\r\n                    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n                }\r\n\r\n\r\n                //If basicAuthorizationToken is defined set its value into \"Authorization\" header\r\n                if (basicAuthorizationToken) {\r\n                    xhr.setRequestHeader(\"Authorization\", basicAuthorizationToken);\r\n                }\r\n\r\n                xhr.send(options.data ? options.data : null);\r\n\r\n                return deferred.promise;\r\n\r\n            },\r\n\r\n            \"abort\": function() {\r\n                var _ = this._,\r\n                    xhr = _.xhr;\r\n\r\n                if (xhr) {\r\n                    xhr.abort();\r\n                }    \r\n            },\r\n\r\n\r\n            \"request\": function(args) {\r\n                return this._request(args);\r\n            },\r\n\r\n            get : function(args) {\r\n                args = args || {};\r\n                args.type = \"GET\";\r\n                return this._request(args);\r\n            },\r\n\r\n            post : function(args) {\r\n                args = args || {};\r\n                args.type = \"POST\";\r\n                return this._request(args);\r\n            },\r\n\r\n            patch : function(args) {\r\n                args = args || {};\r\n                args.type = \"PATCH\";\r\n                return this._request(args);\r\n            },\r\n\r\n            put : function(args) {\r\n                args = args || {};\r\n                args.type = \"PUT\";\r\n                return this._request(args);\r\n            },\r\n\r\n            del : function(args) {\r\n                args = args || {};\r\n                args.type = \"DELETE\";\r\n                return this._request(args);\r\n            },\r\n\r\n            \"init\": function(options) {\r\n                this._ = {\r\n                    options : options || {}\r\n                };\r\n            }\r\n        });\r\n\r\n        [\"request\",\"get\",\"post\",\"put\",\"del\",\"patch\"].forEach(function(name){\r\n            Xhr[name] = function(url,args) {\r\n                var xhr = new Xhr({\"url\" : url});\r\n                return xhr[name](args);\r\n            };\r\n        });\r\n\r\n        Xhr.defaultOptions = XhrDefaultOptions;\r\n        Xhr.param = param;\r\n\r\n        return Xhr;\r\n    })();\r\n\r\n\treturn Xhr;\t\r\n});\ndefine('skylark-langx/Restful',[\r\n    \"./Evented\",\r\n    \"./objects\",\r\n    \"./strings\",\r\n    \"./Xhr\"\r\n],function(Evented,objects,strings,Xhr){\r\n    var mixin = objects.mixin,\r\n        substitute = strings.substitute;\r\n\r\n    var Restful = Evented.inherit({\r\n        \"klassName\" : \"Restful\",\r\n\r\n        \"idAttribute\": \"id\",\r\n        \r\n        getBaseUrl : function(args) {\r\n            //$$baseEndpoint : \"/files/${fileId}/comments\",\r\n            var baseEndpoint = substitute(this.baseEndpoint,args),\r\n                baseUrl = this.server + this.basePath + baseEndpoint;\r\n            if (args[this.idAttribute]!==undefined) {\r\n                baseUrl = baseUrl + \"/\" + args[this.idAttribute]; \r\n            }\r\n            return baseUrl;\r\n        },\r\n        _head : function(args) {\r\n            //get resource metadata .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n        },\r\n        _get : function(args) {\r\n            //get resource ,one or list .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, null if list\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            return Xhr.get(this.getBaseUrl(args),args);\r\n        },\r\n        _post  : function(args,verb) {\r\n            //create or move resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.post(url, args);\r\n        },\r\n\r\n        _put  : function(args,verb) {\r\n            //update resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.put(url, args);\r\n        },\r\n\r\n        _delete : function(args) {\r\n            //delete resource . \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}         \r\n\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.del(url);\r\n        },\r\n\r\n        _patch : function(args){\r\n            //update resource metadata. \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.patch(url, args);\r\n        },\r\n        query: function(params) {\r\n            \r\n            return this._post(params);\r\n        },\r\n\r\n        retrieve: function(params) {\r\n            return this._get(params);\r\n        },\r\n\r\n        create: function(params) {\r\n            return this._post(params);\r\n        },\r\n\r\n        update: function(params) {\r\n            return this._put(params);\r\n        },\r\n\r\n        delete: function(params) {\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._delete(params);\r\n        },\r\n\r\n        patch: function(params) {\r\n           // HTTP request : PATCH http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._patch(params);\r\n        },\r\n        init: function(params) {\r\n            mixin(this,params);\r\n //           this._xhr = XHRx();\r\n       }\r\n    });\r\n\r\n    return Restful;\r\n});\ndefine('skylark-langx/Stateful',[\r\n\t\"./Evented\"\r\n],function(Evented){\r\n    var Stateful = Evented.inherit({\r\n        _constructor : function(attributes, options) {\r\n            var attrs = attributes || {};\r\n            options || (options = {});\r\n            this.cid = uniqueId(this.cidPrefix);\r\n            this.attributes = {};\r\n            if (options.collection) this.collection = options.collection;\r\n            if (options.parse) attrs = this.parse(attrs, options) || {};\r\n            var defaults = result(this, 'defaults');\r\n            attrs = mixin({}, defaults, attrs);\r\n            this.set(attrs, options);\r\n            this.changed = {};\r\n        },\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: 'id',\r\n\r\n        // The prefix is used to create the client id which is used to identify models locally.\r\n        // You may want to override this if you're experiencing name clashes with model ids.\r\n        cidPrefix: 'c',\r\n\r\n\r\n        // Return a copy of the model's `attributes` object.\r\n        toJSON: function(options) {\r\n          return clone(this.attributes);\r\n        },\r\n\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n          return this.attributes[attr];\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n          return this.get(attr) != null;\r\n        },\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n        // the core primitive operation of a model, updating the data and notifying\r\n        // anyone who needs to know about the change in state. The heart of the beast.\r\n        set: function(key, val, options) {\r\n          if (key == null) return this;\r\n\r\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n          var attrs;\r\n          if (typeof key === 'object') {\r\n            attrs = key;\r\n            options = val;\r\n          } else {\r\n            (attrs = {})[key] = val;\r\n          }\r\n\r\n          options || (options = {});\r\n\r\n          // Run validation.\r\n          if (!this._validate(attrs, options)) return false;\r\n\r\n          // Extract attributes and options.\r\n          var unset      = options.unset;\r\n          var silent     = options.silent;\r\n          var changes    = [];\r\n          var changing   = this._changing;\r\n          this._changing = true;\r\n\r\n          if (!changing) {\r\n            this._previousAttributes = clone(this.attributes);\r\n            this.changed = {};\r\n          }\r\n\r\n          var current = this.attributes;\r\n          var changed = this.changed;\r\n          var prev    = this._previousAttributes;\r\n\r\n          // For each `set` attribute, update or delete the current value.\r\n          for (var attr in attrs) {\r\n            val = attrs[attr];\r\n            if (!isEqual(current[attr], val)) changes.push(attr);\r\n            if (!isEqual(prev[attr], val)) {\r\n              changed[attr] = val;\r\n            } else {\r\n              delete changed[attr];\r\n            }\r\n            unset ? delete current[attr] : current[attr] = val;\r\n          }\r\n\r\n          // Update the `id`.\r\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\r\n\r\n          // Trigger all relevant attribute changes.\r\n          if (!silent) {\r\n            if (changes.length) this._pending = options;\r\n            for (var i = 0; i < changes.length; i++) {\r\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n            }\r\n          }\r\n\r\n          // You might be wondering why there's a `while` loop here. Changes can\r\n          // be recursively nested within `\"change\"` events.\r\n          if (changing) return this;\r\n          if (!silent) {\r\n            while (this._pending) {\r\n              options = this._pending;\r\n              this._pending = false;\r\n              this.trigger('change', this, options);\r\n            }\r\n          }\r\n          this._pending = false;\r\n          this._changing = false;\r\n          return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n        // if the attribute doesn't exist.\r\n        unset: function(attr, options) {\r\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"`.\r\n        clear: function(options) {\r\n          var attrs = {};\r\n          for (var key in this.attributes) attrs[key] = void 0;\r\n          return this.set(attrs, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n          if (attr == null) return !isEmptyObject(this.changed);\r\n          return this.changed[attr] !== undefined;\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n          var old = this._changing ? this._previousAttributes : this.attributes;\r\n          var changed = {};\r\n          for (var attr in diff) {\r\n            var val = diff[attr];\r\n            if (isEqual(old[attr], val)) continue;\r\n            changed[attr] = val;\r\n          }\r\n          return !isEmptyObject(changed) ? changed : false;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n          if (attr == null || !this._previousAttributes) return null;\r\n          return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n          return clone(this._previousAttributes);\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n          return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n          return !this.has(this.idAttribute);\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n          return this._validate({}, mixin({}, options, {validate: true}));\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n        _validate: function(attrs, options) {\r\n          if (!options.validate || !this.validate) return true;\r\n          attrs = mixin({}, this.attributes, attrs);\r\n          var error = this.validationError = this.validate(attrs, options) || null;\r\n          if (!error) return true;\r\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\r\n          return false;\r\n        }\r\n    });\r\n\r\n\treturn Stateful;\r\n});\ndefine('skylark-langx/langx',[\r\n    \"./skylark\",\r\n    \"./arrays\",\r\n    \"./ArrayStore\",\r\n    \"./aspect\",\r\n    \"./async\",\r\n    \"./datetimes\",\r\n    \"./Deferred\",\r\n    \"./Evented\",\r\n    \"./funcs\",\r\n    \"./klass\",\r\n    \"./objects\",\r\n    \"./Restful\",\r\n    \"./Stateful\",\r\n    \"./strings\",\r\n    \"./types\",\r\n    \"./Xhr\"\r\n], function(skylark,arrays,ArrayStore,aspect,async,datetimes,Deferred,Evented,funcs,klass,objects,Restful,Stateful,strings,types,Xhr) {\r\n    \"use strict\";\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter,\r\n        mixin = objects.mixin,\r\n        safeMixin = objects.safeMixin,\r\n        isFunction = types.isFunction;\r\n\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n\r\n        return safeMixin(e, props);\r\n    }\r\n    \r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        createEvent : createEvent,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        toPixel: toPixel,\r\n\r\n        uid: uid,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        URL: typeof window !== \"undefined\" ? window.URL || window.webkitURL : null\r\n\r\n    });\r\n\r\n\r\n    mixin(langx, arrays,aspect,datetimes,funcs,objects,strings,types,{\r\n        ArrayStore : ArrayStore,\r\n\r\n        async : async,\r\n        \r\n        Deferred: Deferred,\r\n\r\n        Evented: Evented,\r\n\r\n        klass : klass,\r\n\r\n        Restful: Restful,\r\n        \r\n        Stateful: Stateful,\r\n\r\n        Xhr: Xhr\r\n\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\ndefine('skylark-utils-dom/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils-dom/dom',[\"./skylark\"], function(skylark) {\r\n\treturn skylark.dom = {};\r\n});\r\n\ndefine('skylark-utils-dom/langx',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    return langx;\r\n});\r\n\ndefine('skylark-utils-dom/browser',[\r\n    \"./dom\",\r\n    \"./langx\"\r\n], function(dom,langx) {\r\n    \"use strict\";\r\n \r\n    var checkedCssProperties = {\r\n            \"transitionproperty\": \"TransitionProperty\",\r\n        },\r\n        transEndEventNames = {\r\n          WebkitTransition : 'webkitTransitionEnd',\r\n          MozTransition    : 'transitionend',\r\n          OTransition      : 'oTransitionEnd otransitionend',\r\n          transition       : 'transitionend'\r\n        },\r\n        transEndEventName = null;\r\n\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n                          testEl.mozMatchesSelector ||\r\n                          testEl.oMatchesSelector ||\r\n                          testEl.matchesSelector,\r\n\r\n        requestFullScreen = testEl.requestFullscreen || \r\n                            testEl.webkitRequestFullscreen || \r\n                            testEl.mozRequestFullScreen || \r\n                            testEl.msRequestFullscreen,\r\n\r\n        exitFullScreen =  document.exitFullscreen ||\r\n                          document.webkitCancelFullScreen ||\r\n                          document.mozCancelFullScreen ||\r\n                          document.msExitFullscreen,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n            if (transEndEventNames[name]) {\r\n              transEndEventName = transEndEventNames[name];\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!transEndEventName) {\r\n        if (testStyle[\"transition\"] !== undefined) {\r\n            transEndEventName = transEndEventNames[\"transition\"];\r\n        }\r\n    }\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    function browser() {\r\n        return browser;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        isIE : !!/msie/i.exec( window.navigator.userAgent ),\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        requestFullScreen : requestFullScreen,\r\n\r\n        exitFullscreen : requestFullScreen,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {\r\n\r\n        }\r\n\r\n    });\r\n\r\n    if  (transEndEventName) {\r\n        browser.support.transition = {\r\n            end : transEndEventName\r\n        };\r\n    }\r\n\r\n    testEl = null;\r\n\r\n    return dom.browser = browser;\r\n});\r\n\ndefine('skylark-utils-dom/styler',[\r\n    \"./dom\",\r\n    \"./langx\"\r\n], function(dom, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} value\r\n     */\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n    function disabled(elm, value ) {\r\n        if (arguments.length < 2) {\r\n            return !!this.dom.disabled;\r\n        }\r\n\r\n        elm.disabled = value;\r\n\r\n        return this;\r\n    }\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getComputedStyle(element, '').getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n    /*\r\n     * Display the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    /*\r\n     * Hide the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get the value of a computed style property for the first element in the set of matched elements or set one or more CSS properties for every matched element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} property\r\n     * @param {Any} value\r\n     */\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getComputedStyle(elm, '')\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(dasherize(property))\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(dasherize(prop)))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Determine whether any of the matched elements are assigned the given class.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    /*\r\n     * Remove a single class, multiple classes, or all classes from each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm, \"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Add or remove one or more classes from the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     * @param {} when\r\n     */\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: false,\r\n        cssHooks: {\r\n\r\n        },\r\n\r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        disabled : disabled,        \r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return dom.styler = styler;\r\n});\ndefine('skylark-utils-dom/noder',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./styler\"\r\n], function(dom, langx, browser, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n\r\n    function activeElement(doc) {\r\n        doc = doc || document;\r\n        var el;\r\n\r\n        // Support: IE 9 only\r\n        // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\r\n        try {\r\n            el = doc.activeElement;\r\n        } catch ( error ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 9 - 11 only\r\n        // IE may return null instead of an element\r\n        // Interestingly, this only seems to occur when NOT in an iframe\r\n        if ( !el ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 11 only\r\n        // IE11 returns a seemingly empty object in some cases when accessing\r\n        // document.activeElement from an <iframe>\r\n        if ( !el.nodeName ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        return el;\r\n    };\r\n\r\n    function after(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Get the children of the specified node, including text and comment nodes.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    /*   \r\n     * Create a element and set attributes on it.\r\n     * @param {HTMLElement} tag\r\n     * @param {props} props\r\n     * @param } parent\r\n     */\r\n    function createElement(tag, props, parent) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent, node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /*   \r\n     * Create a DocumentFragment from the HTML fragment.\r\n     * @param {String} html\r\n     */\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    /*   \r\n     * Create a deep copy of the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {Boolean} deep\r\n     */\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node .\r\n     * @param {String} node\r\n     * @param {Node} child\r\n     */\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    /*   \r\n     * Create a new Text node.\r\n     * @param {String} text\r\n     * @param {Node} child\r\n     */\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    /*   \r\n     * Get the current document object.\r\n     */\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    /*   \r\n     * Remove all child nodes of the set of matched elements from the DOM.\r\n     * @param {Object} node\r\n     */\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    var fulledEl = null;\r\n\r\n    function fullScreen(el) {\r\n        if (el === false) {\r\n            browser.exitFullScreen.apply(document);\r\n        } else if (el) {\r\n            browser.requestFullScreen.apply(el);\r\n            fulledEl = el;\r\n        } else {\r\n            return (\r\n                document.fullscreenElement ||\r\n                document.webkitFullscreenElement ||\r\n                document.mozFullScreenElement ||\r\n                document.msFullscreenElement\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    // Selectors\r\n    function focusable( element, hasTabindex ) {\r\n        var map, mapName, img, focusableIfVisible, fieldset,\r\n            nodeName = element.nodeName.toLowerCase();\r\n\r\n        if ( \"area\" === nodeName ) {\r\n            map = element.parentNode;\r\n            mapName = map.name;\r\n            if ( !element.href || !mapName || map.nodeName.toLowerCase() !== \"map\" ) {\r\n                return false;\r\n            }\r\n            img = $( \"img[usemap='#\" + mapName + \"']\" );\r\n            return img.length > 0 && img.is( \":visible\" );\r\n        }\r\n\r\n        if ( /^(input|select|textarea|button|object)$/.test( nodeName ) ) {\r\n            focusableIfVisible = !element.disabled;\r\n\r\n            if ( focusableIfVisible ) {\r\n\r\n                // Form controls within a disabled fieldset are disabled.\r\n                // However, controls within the fieldset's legend do not get disabled.\r\n                // Since controls generally aren't placed inside legends, we skip\r\n                // this portion of the check.\r\n                fieldset = $( element ).closest( \"fieldset\" )[ 0 ];\r\n                if ( fieldset ) {\r\n                    focusableIfVisible = !fieldset.disabled;\r\n                }\r\n            }\r\n        } else if ( \"a\" === nodeName ) {\r\n            focusableIfVisible = element.href || hasTabindex;\r\n        } else {\r\n            focusableIfVisible = hasTabindex;\r\n        }\r\n\r\n        return focusableIfVisible && $( element ).is( \":visible\" ) && visible( $( element ) );\r\n    };\r\n\r\n\r\n   var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi;\r\n \r\n    /*   \r\n     * Get the HTML contents of the first element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} html\r\n     */\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html)) {\r\n                html = html.replace( rxhtmlTag, \"<$1></$2>\" );\r\n            }\r\n            if (langx.isString(html) || langx.isNumber(html)) {               \r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isChildOf(node, parent, directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isDoc(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    /*   \r\n     * Get the owner document object for the specified element.\r\n     * @param {Node} elm\r\n     */\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return doc.defaultView || doc.parentWindow;\r\n    }\r\n\r\n    /*   \r\n     * insert one or more nodes as the first children of the specified node.\r\n     * @param {Node} node\r\n     * @param {Node or ArrayLike} placing\r\n     * @param {Boolean Optional} copyByClone\r\n     */\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     * @param {Node} params\r\n     */\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n    /*   \r\n     * Remove the set of matched elements from the DOM.\r\n     * @param {Node} node\r\n     */\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n                node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\", e);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function removeChild(node,children) {\r\n        if (!langx.isArrayLike(children)) {\r\n            children = [children];\r\n        }\r\n        for (var i=0;i<children.length;i++) {\r\n            node.removeChild(children[i]);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollParent( elm, includeHidden ) {\r\n        var position = styler.css(elm,\"position\" ),\r\n            excludeStaticParent = position === \"absolute\",\r\n            overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n            scrollParent = this.parents().filter( function() {\r\n                var parent = $( this );\r\n                if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                    return false;\r\n                }\r\n                return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                    parent.css( \"overflow-x\" ) );\r\n            } ).eq( 0 );\r\n\r\n        return position === \"fixed\" || !scrollParent.length ?\r\n            $( this[ 0 ].ownerDocument || document ) :\r\n            scrollParent;\r\n    };\r\n\r\n        /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {Node} node\r\n     * @param {Node} oldNode\r\n     */\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {HTMLElement} elm\r\n     * @param {Node} params\r\n     */\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n            throbber = this.createElement(\"div\", {\r\n                className: params.className || \"throbber\",\r\n                style: style\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                className: 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                className: \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n\r\n    /*   \r\n     * traverse the specified node and its descendants, perform the callback function on each\r\n     * @param {Node} node\r\n     * @param {Function} fn\r\n     */\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} node\r\n     */\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around each element in the set of matched elements.\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around the content of each element in the set of matched\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Remove the parents of the set of matched elements from the DOM, leaving the matched\r\n     * @param {Node} node\r\n     */\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        active  : activeElement,\r\n\r\n        blur : function(el) {\r\n            el.blur();\r\n        },\r\n\r\n        body: function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        fullScreen: fullScreen,\r\n\r\n        focusable: focusable,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDoc: isDoc,\r\n\r\n        isWindow: langx.isWindow,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow: ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        remove: remove,\r\n\r\n        removeChild : removeChild,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return dom.noder = noder;\r\n});\ndefine('skylark-utils-dom/finder',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./noder\"\r\n], function(dom, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'focusable': function( elm ) {\r\n            return noder.focusable(elm, elm.tabindex != null );\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function(elem) {\r\n            return rheader.test(elem.nodeName);\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function(elem) {\r\n            return rinputs.test(elem.nodeName);\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        /*   \r\n         * Get the parent of each element in the current set of matched elements.\r\n         * @param {Object} elm\r\n         */\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'tabbable': function(elm) {\r\n            var tabIndex = elm.tabindex,\r\n                hasTabindex = tabIndex != null;\r\n            return ( !hasTabindex || tabIndex >= 0 ) && noder.focusable( element, hasTabindex );\r\n        },\r\n\r\n        'text': function(elm) {\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    [\"first\", \"eq\", \"last\"].forEach(function(item) {\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for (i in {\r\n        radio: true,\r\n        checkbox: true,\r\n        file: true,\r\n        password: true,\r\n        image: true\r\n    }) {\r\n        pseudos[i] = createInputPseudo(i);\r\n    }\r\n    for (i in {\r\n        submit: true,\r\n        reset: true\r\n    }) {\r\n        pseudos[i] = createButtonPseudo(i);\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value) + \"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            if (tag !== \"*\") {\r\n                nativeSelector = tag.toUpperCase() + nativeSelector;\r\n            }\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes, arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;\r\n        }\r\n\r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node, exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp) {\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes, false);\r\n        });\r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs, true);\r\n        });\r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes, selector);\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes, exp);\r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n\r\n    };\r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, true)\r\n                        });\r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n    /*\r\n     * Get the nearest ancestor of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the ancestors of the specitied element , optionally filtered by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestors(node, selector, root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            ret.push(node);\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Returns a element by its ID.\r\n     * @param {string} id\r\n     */\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    /*\r\n     * Get the children of the specified element , optionally filtered by a selector.\r\n     * @param {string} node\r\n     * @param {String optionlly} selector\r\n     */\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    /*\r\n     * Get the decendant of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the nearest decendent of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the descendants of each element in the current set of matched elements, filtered by a selector, jQuery object, or element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function find(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm, selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the findAll of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function findAll(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the first child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String} first\r\n     */\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the last child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String } last\r\n     */\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Check the specified element against a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm, selector) > -1;\r\n        } else if (langx.isPlainObject(selector)) {\r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Get the nearest next sibing of the specitied element , optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional} adjacent\r\n     */\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the next siblings of the specified element , optional filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Get the parent element of the specified element. if a selector is provided, it retrieves the parent element only if it matches that selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get hte nearest previous sibling of the specified element ,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional } adjacent\r\n     */\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get all preceding siblings of each element in the set of matched elements, optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Selects all sibling elements that follow after the “prev” element, have the same parent, and match the filtering “siblings” selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling,\r\n\r\n        previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return dom.finder = finder;\r\n});\ndefine('skylark-utils-dom/datax',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./finder\"\r\n], function(dom, langx, finder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm, name, value) {\r\n        return this.attr(elm, \"aria-\" + name, value);\r\n    }\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute && elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /*\r\n     *  Read all \"data-*\" attributes from a node\r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    /*\r\n     * xxx\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    } \r\n    /*\r\n     * Remove from the element all items that have not yet been run. \r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Remove a previously-stored piece of data. \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function removeData(elm, names) {\r\n        if (langx.isString(names)) {\r\n            names = names.split(/\\s+/);\r\n        }\r\n        var store = _store(elm, true);\r\n        names.forEach(function(name) {\r\n            delete store[name];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * xxx \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    /*\r\n     * Get or set the value of an property for the specified element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * remove Attributes  \r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n\r\n    /*\r\n     * Remove the value of a property for the first element in the set of matched elements or set one or more properties for every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Get the combined text contents of each element in the set of matched elements, including their descendants, or set the text contents of the matched elements.  \r\n     * @param {Object} elm  \r\n     * @param {String} txt\r\n     */\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Get the current value of the first element in the set of matched elements or set the value of every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} value\r\n     */\r\n    function val(elm, value) {\r\n        if (value === undefined) {\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                return elm.value;\r\n            }\r\n        } else {\r\n            elm.value = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    finder.pseudos.data = function( elem, i, match,dataName ) {\r\n        return !!data( elem, dataName || match[3]);\r\n    };\r\n   \r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n\r\n        attr: attr,\r\n\r\n        cleanData: cleanData,\r\n\r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val\r\n    });\r\n\r\n    return dom.datax = datax;\r\n});\ndefine('skylark-utils-dom/eventer',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./finder\",\r\n    \"./noder\",\r\n    \"./datax\"\r\n], function(dom, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"], // 15\r\n                window[\"ClipboardEvent\"] // 16\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 16, // ClipboardEvent\r\n                \"beforecut\": 16, // ClipboardEvent\r\n                \"beforepaste\": 16, // ClipboardEvent\r\n                \"copy\": 16, // ClipboardEvent\r\n                \"cut\": 16, // ClipboardEvent\r\n                \"paste\": 16, // ClipboardEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            };\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src, props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy, props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings, function(idx, binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns) === -1) {\r\n                                return;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n                    /*\r\n                                        if (event in hover) {\r\n                                            var l = self._listener;\r\n                                            self._listener = function(e) {\r\n                                                var related = e.relatedTarget;\r\n                                                if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                                    return l.apply(this, arguments);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                    */\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    /*   \r\n     * Remove an event handler for one or more events from the specified element.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional } selector\r\n     * @param {Function} callback\r\n     */\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach an event handler function for one or more events to the selected elements.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     * @param {Boolean　Optional} one\r\n     */\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach a handler to an event for the elements. The handler is executed at most once per \r\n     * @param {HTMLElement} elm  \r\n     * @param {String} event\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     */\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Prevents propagation and clobbers the default action of the passed event. The same as calling event.preventDefault() and event.stopPropagation(). \r\n     * @param {String} event\r\n     */\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Execute all handlers and behaviors attached to the matched elements for the given event  \r\n     * @param {String} evented\r\n     * @param {String} type\r\n     * @param {Array or PlainObject } args\r\n     */\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n    /*   \r\n     * Specify a function to execute when the DOM is fully loaded.  \r\n     * @param {Function} callback\r\n     */\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"backspace\": 8,\r\n        \"comma\": 188,\r\n        \"delete\": 46,\r\n        \"down\": 40,\r\n        \"end\": 35,\r\n        \"enter\": 13,\r\n        \"escape\": 27,\r\n        \"home\": 36,\r\n        \"left\": 37,\r\n        \"page_down\": 34,\r\n        \"page_up\": 33,\r\n        \"period\": 190,\r\n        \"right\": 39,\r\n        \"space\": 32,\r\n        \"tab\": 9,\r\n        \"up\": 38\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    if (browser.support.transition) {\r\n        specialEvents.transitionEnd = {\r\n//          handle: function (e) {\r\n//            if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)\r\n//          },\r\n          bindType: browser.support.transition.end,\r\n          delegateType: browser.support.transition.end\r\n        }        \r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        keys: keyCodeLookup,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special: specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    return dom.eventer = eventer;\r\n});\ndefine('skylark-utils-dom/geom',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./styler\"\r\n], function(dom, langx, noder, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel,\r\n        offsetParent = noder.offsetParent,\r\n        cachedScrollbarWidth;\r\n\r\n    function scrollbarWidth() {\r\n        if (cachedScrollbarWidth !== undefined) {\r\n            return cachedScrollbarWidth;\r\n        }\r\n        var w1, w2,\r\n            div = noder.createFragment(\"<div style=\" +\r\n                \"'display:block;position:absolute;width:200px;height:200px;overflow:hidden;'>\" +\r\n                \"<div style='height:300px;width:auto;'></div></div>\")[0],\r\n            innerDiv = div.childNodes[0];\r\n\r\n        noder.append(document.body, div);\r\n\r\n        w1 = innerDiv.offsetWidth;\r\n\r\n        styler.css(div, \"overflow\", \"scroll\");\r\n\r\n        w2 = innerDiv.offsetWidth;\r\n\r\n        if (w1 === w2) {\r\n            w2 = div[0].clientWidth;\r\n        }\r\n\r\n        noder.remove(div);\r\n\r\n        return (cachedScrollbarWidth = w1 - w2);\r\n    }\r\n    /*\r\n     * Get the widths of each border of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function borderExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth, elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    /*\r\n     * Get or set the viewport position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the viewport rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the height of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the size of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get or set the width of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the rect of the specified element content box.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLDocument} doc\r\n     */\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each margin of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function marginExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n\r\n    function marginRect(elm) {\r\n        var obj = relativeRect(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            left: obj.left,\r\n            top: obj.top,\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n\r\n    function marginSize(elm) {\r\n        var obj = size(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each padding of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function paddingExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the position of the specified element border box , relative to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the rect of the specified element border box , relatived to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Scroll the specified element into view.\r\n     * @param {HTMLElement} elm\r\n     * @param {} align\r\n     */\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get or set the current horizontal position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollLeft(elm, value) {\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or the current vertical position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollTop(elm, value) {\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject}dimension\r\n     */\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect: marginRect,\r\n\r\n        marginSize: marginSize,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollbarWidth: scrollbarWidth,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    ( function() {\r\n        var max = Math.max,\r\n            abs = Math.abs,\r\n            rhorizontal = /left|center|right/,\r\n            rvertical = /top|center|bottom/,\r\n            roffset = /[\\+\\-]\\d+(\\.[\\d]+)?%?/,\r\n            rposition = /^\\w+/,\r\n            rpercent = /%$/;\r\n\r\n        function getOffsets( offsets, width, height ) {\r\n            return [\r\n                parseFloat( offsets[ 0 ] ) * ( rpercent.test( offsets[ 0 ] ) ? width / 100 : 1 ),\r\n                parseFloat( offsets[ 1 ] ) * ( rpercent.test( offsets[ 1 ] ) ? height / 100 : 1 )\r\n            ];\r\n        }\r\n\r\n        function parseCss( element, property ) {\r\n            return parseInt( styler.css( element, property ), 10 ) || 0;\r\n        }\r\n\r\n        function getDimensions( raw ) {\r\n            if ( raw.nodeType === 9 ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { top: 0, left: 0 }\r\n                };\r\n            }\r\n            if ( noder.isWindow( raw ) ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { \r\n                        top: scrollTop(raw), \r\n                        left: scrollLeft(raw) \r\n                    }\r\n                };\r\n            }\r\n            if ( raw.preventDefault ) {\r\n                return {\r\n                    size : {\r\n                        width: 0,\r\n                        height: 0\r\n                    },\r\n                    offset: { \r\n                        top: raw.pageY, \r\n                        left: raw.pageX \r\n                    }\r\n                };\r\n            }\r\n            return {\r\n                size: size(raw),\r\n                offset: pagePosition(raw)\r\n            };\r\n        }\r\n\r\n        function getScrollInfo( within ) {\r\n            var overflowX = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-x\" ),\r\n                overflowY = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-y\" ),\r\n                hasOverflowX = overflowX === \"scroll\" ||\r\n                    ( overflowX === \"auto\" && within.width < scrollWidth(within.element) ),\r\n                hasOverflowY = overflowY === \"scroll\" ||\r\n                    ( overflowY === \"auto\" && within.height < scrollHeight(within.element));\r\n            return {\r\n                width: hasOverflowY ? scrollbarWidth() : 0,\r\n                height: hasOverflowX ? scrollbarWidth() : 0\r\n            };\r\n        }\r\n\r\n        function getWithinInfo( element ) {\r\n            var withinElement = element || window,\r\n                isWindow = noder.isWindow( withinElement),\r\n                isDocument = !!withinElement && withinElement.nodeType === 9,\r\n                hasOffset = !isWindow && !isDocument,\r\n                msize = marginSize(withinElement);\r\n            return {\r\n                element: withinElement,\r\n                isWindow: isWindow,\r\n                isDocument: isDocument,\r\n                offset: hasOffset ? pagePosition(element) : { left: 0, top: 0 },\r\n                scrollLeft: scrollLeft(withinElement),\r\n                scrollTop: scrollTop(withinElement),\r\n                width: msize.width,\r\n                height: msize.height\r\n            };\r\n        }\r\n\r\n        function posit(elm,options ) {\r\n            // Make a copy, we don't want to modify arguments\r\n            options = langx.extend( {}, options );\r\n\r\n            var atOffset, targetWidth, targetHeight, targetOffset, basePosition, dimensions,\r\n                target = options.of,\r\n                within = getWithinInfo( options.within ),\r\n                scrollInfo = getScrollInfo( within ),\r\n                collision = ( options.collision || \"flip\" ).split( \" \" ),\r\n                offsets = {};\r\n\r\n            dimensions = getDimensions( target );\r\n            if ( target.preventDefault ) {\r\n\r\n                // Force left top to allow flipping\r\n                options.at = \"left top\";\r\n            }\r\n            targetWidth = dimensions.size.width;\r\n            targetHeight = dimensions.size.height;\r\n            targetOffset = dimensions.offset;\r\n\r\n            // Clone to reuse original targetOffset later\r\n            basePosition = langx.extend( {}, targetOffset );\r\n\r\n            // Force my and at to have valid horizontal and vertical positions\r\n            // if a value is missing or invalid, it will be converted to center\r\n            langx.each( [ \"my\", \"at\" ], function() {\r\n                var pos = ( options[ this ] || \"\" ).split( \" \" ),\r\n                    horizontalOffset,\r\n                    verticalOffset;\r\n\r\n                if ( pos.length === 1 ) {\r\n                    pos = rhorizontal.test( pos[ 0 ] ) ?\r\n                        pos.concat( [ \"center\" ] ) :\r\n                        rvertical.test( pos[ 0 ] ) ?\r\n                            [ \"center\" ].concat( pos ) :\r\n                            [ \"center\", \"center\" ];\r\n                }\r\n                pos[ 0 ] = rhorizontal.test( pos[ 0 ] ) ? pos[ 0 ] : \"center\";\r\n                pos[ 1 ] = rvertical.test( pos[ 1 ] ) ? pos[ 1 ] : \"center\";\r\n\r\n                // Calculate offsets\r\n                horizontalOffset = roffset.exec( pos[ 0 ] );\r\n                verticalOffset = roffset.exec( pos[ 1 ] );\r\n                offsets[ this ] = [\r\n                    horizontalOffset ? horizontalOffset[ 0 ] : 0,\r\n                    verticalOffset ? verticalOffset[ 0 ] : 0\r\n                ];\r\n\r\n                // Reduce to just the positions without the offsets\r\n                options[ this ] = [\r\n                    rposition.exec( pos[ 0 ] )[ 0 ],\r\n                    rposition.exec( pos[ 1 ] )[ 0 ]\r\n                ];\r\n            } );\r\n\r\n            // Normalize collision option\r\n            if ( collision.length === 1 ) {\r\n                collision[ 1 ] = collision[ 0 ];\r\n            }\r\n\r\n            if ( options.at[ 0 ] === \"right\" ) {\r\n                basePosition.left += targetWidth;\r\n            } else if ( options.at[ 0 ] === \"center\" ) {\r\n                basePosition.left += targetWidth / 2;\r\n            }\r\n\r\n            if ( options.at[ 1 ] === \"bottom\" ) {\r\n                basePosition.top += targetHeight;\r\n            } else if ( options.at[ 1 ] === \"center\" ) {\r\n                basePosition.top += targetHeight / 2;\r\n            }\r\n\r\n            atOffset = getOffsets( offsets.at, targetWidth, targetHeight );\r\n            basePosition.left += atOffset[ 0 ];\r\n            basePosition.top += atOffset[ 1 ];\r\n\r\n            return ( function(elem) {\r\n                var collisionPosition, using,\r\n                    msize = marginSize(elem),\r\n                    elemWidth = msize.width,\r\n                    elemHeight = msize.height,\r\n                    marginLeft = parseCss( elem, \"marginLeft\" ),\r\n                    marginTop = parseCss( elem, \"marginTop\" ),\r\n                    collisionWidth = elemWidth + marginLeft + parseCss( elem, \"marginRight\" ) +\r\n                        scrollInfo.width,\r\n                    collisionHeight = elemHeight + marginTop + parseCss( elem, \"marginBottom\" ) +\r\n                        scrollInfo.height,\r\n                    position = langx.extend( {}, basePosition ),\r\n                    myOffset = getOffsets( offsets.my, msize.width, msize.height);\r\n\r\n                if ( options.my[ 0 ] === \"right\" ) {\r\n                    position.left -= elemWidth;\r\n                } else if ( options.my[ 0 ] === \"center\" ) {\r\n                    position.left -= elemWidth / 2;\r\n                }\r\n\r\n                if ( options.my[ 1 ] === \"bottom\" ) {\r\n                    position.top -= elemHeight;\r\n                } else if ( options.my[ 1 ] === \"center\" ) {\r\n                    position.top -= elemHeight / 2;\r\n                }\r\n\r\n                position.left += myOffset[ 0 ];\r\n                position.top += myOffset[ 1 ];\r\n\r\n                collisionPosition = {\r\n                    marginLeft: marginLeft,\r\n                    marginTop: marginTop\r\n                };\r\n\r\n                langx.each( [ \"left\", \"top\" ], function( i, dir ) {\r\n                    if ( positions[ collision[ i ] ] ) {\r\n                        positions[ collision[ i ] ][ dir ]( position, {\r\n                            targetWidth: targetWidth,\r\n                            targetHeight: targetHeight,\r\n                            elemWidth: elemWidth,\r\n                            elemHeight: elemHeight,\r\n                            collisionPosition: collisionPosition,\r\n                            collisionWidth: collisionWidth,\r\n                            collisionHeight: collisionHeight,\r\n                            offset: [ atOffset[ 0 ] + myOffset[ 0 ], atOffset [ 1 ] + myOffset[ 1 ] ],\r\n                            my: options.my,\r\n                            at: options.at,\r\n                            within: within,\r\n                            elem: elem\r\n                        } );\r\n                    }\r\n                } );\r\n\r\n                if ( options.using ) {\r\n\r\n                    // Adds feedback as second argument to using callback, if present\r\n                    using = function( props ) {\r\n                        var left = targetOffset.left - position.left,\r\n                            right = left + targetWidth - elemWidth,\r\n                            top = targetOffset.top - position.top,\r\n                            bottom = top + targetHeight - elemHeight,\r\n                            feedback = {\r\n                                target: {\r\n                                    element: target,\r\n                                    left: targetOffset.left,\r\n                                    top: targetOffset.top,\r\n                                    width: targetWidth,\r\n                                    height: targetHeight\r\n                                },\r\n                                element: {\r\n                                    element: elem,\r\n                                    left: position.left,\r\n                                    top: position.top,\r\n                                    width: elemWidth,\r\n                                    height: elemHeight\r\n                                },\r\n                                horizontal: right < 0 ? \"left\" : left > 0 ? \"right\" : \"center\",\r\n                                vertical: bottom < 0 ? \"top\" : top > 0 ? \"bottom\" : \"middle\"\r\n                            };\r\n                        if ( targetWidth < elemWidth && abs( left + right ) < targetWidth ) {\r\n                            feedback.horizontal = \"center\";\r\n                        }\r\n                        if ( targetHeight < elemHeight && abs( top + bottom ) < targetHeight ) {\r\n                            feedback.vertical = \"middle\";\r\n                        }\r\n                        if ( max( abs( left ), abs( right ) ) > max( abs( top ), abs( bottom ) ) ) {\r\n                            feedback.important = \"horizontal\";\r\n                        } else {\r\n                            feedback.important = \"vertical\";\r\n                        }\r\n                        options.using.call( this, props, feedback );\r\n                    };\r\n                }\r\n\r\n                pagePosition(elem, langx.extend( position, { using: using } ));\r\n            })(elm);\r\n        }\r\n\r\n        var positions = {\r\n            fit: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        outerWidth = within.width,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = withinOffset - collisionPosLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - withinOffset,\r\n                        newOverRight;\r\n\r\n                    // Element is wider than within\r\n                    if ( data.collisionWidth > outerWidth ) {\r\n\r\n                        // Element is initially over the left side of within\r\n                        if ( overLeft > 0 && overRight <= 0 ) {\r\n                            newOverRight = position.left + overLeft + data.collisionWidth - outerWidth -\r\n                                withinOffset;\r\n                            position.left += overLeft - newOverRight;\r\n\r\n                        // Element is initially over right side of within\r\n                        } else if ( overRight > 0 && overLeft <= 0 ) {\r\n                            position.left = withinOffset;\r\n\r\n                        // Element is initially over both left and right sides of within\r\n                        } else {\r\n                            if ( overLeft > overRight ) {\r\n                                position.left = withinOffset + outerWidth - data.collisionWidth;\r\n                            } else {\r\n                                position.left = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far left -> align with left edge\r\n                    } else if ( overLeft > 0 ) {\r\n                        position.left += overLeft;\r\n\r\n                    // Too far right -> align with right edge\r\n                    } else if ( overRight > 0 ) {\r\n                        position.left -= overRight;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.left = max( position.left - collisionPosLeft, position.left );\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        outerHeight = data.within.height,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = withinOffset - collisionPosTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - withinOffset,\r\n                        newOverBottom;\r\n\r\n                    // Element is taller than within\r\n                    if ( data.collisionHeight > outerHeight ) {\r\n\r\n                        // Element is initially over the top of within\r\n                        if ( overTop > 0 && overBottom <= 0 ) {\r\n                            newOverBottom = position.top + overTop + data.collisionHeight - outerHeight -\r\n                                withinOffset;\r\n                            position.top += overTop - newOverBottom;\r\n\r\n                        // Element is initially over bottom of within\r\n                        } else if ( overBottom > 0 && overTop <= 0 ) {\r\n                            position.top = withinOffset;\r\n\r\n                        // Element is initially over both top and bottom of within\r\n                        } else {\r\n                            if ( overTop > overBottom ) {\r\n                                position.top = withinOffset + outerHeight - data.collisionHeight;\r\n                            } else {\r\n                                position.top = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far up -> align with top\r\n                    } else if ( overTop > 0 ) {\r\n                        position.top += overTop;\r\n\r\n                    // Too far down -> align with bottom edge\r\n                    } else if ( overBottom > 0 ) {\r\n                        position.top -= overBottom;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.top = max( position.top - collisionPosTop, position.top );\r\n                    }\r\n                }\r\n            },\r\n            flip: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.left + within.scrollLeft,\r\n                        outerWidth = within.width,\r\n                        offsetLeft = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = collisionPosLeft - offsetLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - offsetLeft,\r\n                        myOffset = data.my[ 0 ] === \"left\" ?\r\n                            -data.elemWidth :\r\n                            data.my[ 0 ] === \"right\" ?\r\n                                data.elemWidth :\r\n                                0,\r\n                        atOffset = data.at[ 0 ] === \"left\" ?\r\n                            data.targetWidth :\r\n                            data.at[ 0 ] === \"right\" ?\r\n                                -data.targetWidth :\r\n                                0,\r\n                        offset = -2 * data.offset[ 0 ],\r\n                        newOverRight,\r\n                        newOverLeft;\r\n\r\n                    if ( overLeft < 0 ) {\r\n                        newOverRight = position.left + myOffset + atOffset + offset + data.collisionWidth -\r\n                            outerWidth - withinOffset;\r\n                        if ( newOverRight < 0 || newOverRight < abs( overLeft ) ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overRight > 0 ) {\r\n                        newOverLeft = position.left - data.collisionPosition.marginLeft + myOffset +\r\n                            atOffset + offset - offsetLeft;\r\n                        if ( newOverLeft > 0 || abs( newOverLeft ) < overRight ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.top + within.scrollTop,\r\n                        outerHeight = within.height,\r\n                        offsetTop = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = collisionPosTop - offsetTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - offsetTop,\r\n                        top = data.my[ 1 ] === \"top\",\r\n                        myOffset = top ?\r\n                            -data.elemHeight :\r\n                            data.my[ 1 ] === \"bottom\" ?\r\n                                data.elemHeight :\r\n                                0,\r\n                        atOffset = data.at[ 1 ] === \"top\" ?\r\n                            data.targetHeight :\r\n                            data.at[ 1 ] === \"bottom\" ?\r\n                                -data.targetHeight :\r\n                                0,\r\n                        offset = -2 * data.offset[ 1 ],\r\n                        newOverTop,\r\n                        newOverBottom;\r\n                    if ( overTop < 0 ) {\r\n                        newOverBottom = position.top + myOffset + atOffset + offset + data.collisionHeight -\r\n                            outerHeight - withinOffset;\r\n                        if ( newOverBottom < 0 || newOverBottom < abs( overTop ) ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overBottom > 0 ) {\r\n                        newOverTop = position.top - data.collisionPosition.marginTop + myOffset + atOffset +\r\n                            offset - offsetTop;\r\n                        if ( newOverTop > 0 || abs( newOverTop ) < overBottom ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            flipfit: {\r\n                left: function() {\r\n                    positions.flip.left.apply( this, arguments );\r\n                    positions.fit.left.apply( this, arguments );\r\n                },\r\n                top: function() {\r\n                    positions.flip.top.apply( this, arguments );\r\n                    positions.fit.top.apply( this, arguments );\r\n                }\r\n            }\r\n        };\r\n\r\n        geom.posit = posit;\r\n    })();\r\n\r\n    return dom.geom = geom;\r\n});\ndefine('skylark-utils-dom/fx',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./browser\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./eventer\"\r\n], function(dom, langx, browser, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    /*   \r\n     * Perform a custom animation of a set of CSS properties.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} properties\r\n     * @param {String} ease\r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     * @param {Number or String} delay\r\n     */\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false,\r\n            resetClipAuto = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                var v = properties[key];\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + v + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    if (key == \"clip\" && langx.isPlainObject(v)) {\r\n                        cssValues[key] = \"rect(\" + v.top+\"px,\"+ v.right +\"px,\"+ v.bottom +\"px,\"+ v.left+\"px)\";\r\n                        if (styler.css(elm,\"clip\") == \"auto\") {\r\n                            var size = geom.size(elm);\r\n                            styler.css(elm,\"clip\",\"rect(\"+\"0px,\"+ size.width +\"px,\"+ size.height +\"px,\"+\"0px)\");  \r\n                            resetClipAuto = true;\r\n                        }\r\n\r\n                    } else {\r\n                        cssValues[key] = v;\r\n                    }\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            if (resetClipAuto) {\r\n //               styler.css(elm,\"clip\",\"auto\");\r\n            }\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Hide an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Set the vertical position of the scroll bar for an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} pos\r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Adjust the opacity of an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Number or String} opacity\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display an element by fading them to opaque.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element by fading them to transparent.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            opacity = styler.css(elm,\"opacity\"),\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.css(elm,\"opacity\",opacity);\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element by animating its opacity.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} ceasing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideDown(elm, duration, callback) {\r\n\r\n        // get the element position to restore it then\r\n        var position = styler.css(elm, 'position');\r\n\r\n        // show element if it is hidden\r\n        show(elm);\r\n\r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm, {\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n\r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm, 'margin-top');\r\n        var marginBottom = styler.css(elm, 'margin-bottom');\r\n        var paddingTop = styler.css(elm, 'padding-top');\r\n        var paddingBottom = styler.css(elm, 'padding-bottom');\r\n        var height = styler.css(elm, 'height');\r\n\r\n        // set initial css for animation\r\n        styler.css(elm, {\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n\r\n        // animate to gotten height, margin and padding\r\n        animate(elm, {\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration: duration,\r\n            complete: function() {\r\n                if (callback) {\r\n                    callback.apply(elm);\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideUp(elm, duration, callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n\r\n            // get the element position to restore it then\r\n            var position = styler.css(elm, 'position');\r\n\r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm, 'height');\r\n            var marginTop = styler.css(elm, 'margin-top');\r\n            var marginBottom = styler.css(elm, 'margin-bottom');\r\n            var paddingTop = styler.css(elm, 'padding-top');\r\n            var paddingBottom = styler.css(elm, 'padding-bottom');\r\n\r\n            // set initial css for animation\r\n            styler.css(elm, {\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n\r\n            // animate element height, margin and padding to zero\r\n            animate(elm, {\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, {\r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function() {\r\n                    hide(elm);\r\n                    styler.css(elm, {\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display or hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideToggle(elm, duration, callback) {\r\n\r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm, duration, callback);\r\n        }\r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm, duration, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function emulateTransitionEnd(elm,duration) {\r\n        var called = false;\r\n        eventer.one(elm,'transitionEnd', function () { \r\n            called = true;\r\n        })\r\n        var callback = function () { \r\n            if (!called) {\r\n                eventer.trigger(elm,'transitionEnd') \r\n            }\r\n        };\r\n        setTimeout(callback, duration);\r\n        \r\n        return this;\r\n    } \r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate,\r\n        emulateTransitionEnd,\r\n        fadeIn,\r\n        fadeOut,\r\n        fadeTo,\r\n        fadeToggle,\r\n        hide,\r\n        scrollToTop,\r\n\r\n        slideDown,\r\n        slideToggle,\r\n        slideUp,\r\n        show,\r\n        toggle\r\n    });\r\n\r\n    return dom.fx = fx;\r\n});\ndefine('skylark-utils-dom/query',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\"\r\n], function(dom, langx, noder, datax, eventer, finder, geom, styler, fx) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        indexOf = Array.prototype.indexOf,\r\n        sort = Array.prototype.sort,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = langx.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return query(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            if (selector === undefined) {\r\n                selector = util;\r\n                util = undefined;\r\n            }\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        if (langx.isString(context)) {\r\n                            context = finder.find(context);\r\n                        }\r\n\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (isArray(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    });\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n            length : 0,\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            forEach: function() {\r\n                return forEach.apply(this,arguments);\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            indexOf: function() {\r\n                return indexOf.apply(this,arguments);\r\n            },\r\n\r\n            sort : function() {\r\n                return sort.apply(this,arguments);\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            remove: wrapper_every_act(noder.remove, noder),\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                if (this.length > 0) {\r\n                    var self = this;\r\n                    if (langx.isString(selector)) {\r\n                        return some.call(self,function(elem) {\r\n                            return finder.matches(elem, selector);\r\n                        });\r\n                    } else if (langx.isArrayLike(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return langx.inArray(elem, selector) > -1;\r\n                        });\r\n                    } else if (langx.isHtmlNode(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return elem ==  selector;\r\n                        });\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            \r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx) {\r\n                        if (!selector.call(this, idx)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            \r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSibling, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            html: wrapper_value(noder.html, noder, noder.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pagePosition, geom, geom.pagePosition),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function(options) {\r\n                if (!this.length) return\r\n\r\n                if (options) {\r\n                    if (options.of && options.of.length) {\r\n                        options = langx.clone(options);\r\n                        options.of = options.of[0];\r\n                    }\r\n                    return this.each( function() {\r\n                        geom.posit(this,options);\r\n                    });\r\n                } else {\r\n                    var elem = this[0];\r\n\r\n                    return geom.relativePosition(elem);\r\n\r\n                }             \r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom)\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        $.fn.clientSize = wrapper_value(geom.clientSize, geom.clientSize);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.clientWidth, geom, geom.clientWidth);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.clientHeight, geom, geom.clientHeight);\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error transitionEnd').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n        $.fn.emulateTransitionEnd = wrapper_every_act(fx.emulateTransitionEnd, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n        $.fn.slideDown = wrapper_every_act(fx.slideDown, fx);\r\n        $.fn.slideToggle = wrapper_every_act(fx.slideToggle, fx);\r\n        $.fn.slideUp = wrapper_every_act(fx.slideUp, fx);\r\n\r\n        $.fn.scrollParent = function( includeHidden ) {\r\n            var position = this.css( \"position\" ),\r\n                excludeStaticParent = position === \"absolute\",\r\n                overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n                scrollParent = this.parents().filter( function() {\r\n                    var parent = $( this );\r\n                    if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                        return false;\r\n                    }\r\n                    return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                        parent.css( \"overflow-x\" ) );\r\n                } ).eq( 0 );\r\n\r\n            return position === \"fixed\" || !scrollParent.length ?\r\n                $( this[ 0 ].ownerDocument || document ) :\r\n                scrollParent;\r\n        };\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n        $.fn.disableSelection = ( function() {\r\n            var eventType = \"onselectstart\" in document.createElement( \"div\" ) ?\r\n                \"selectstart\" :\r\n                \"mousedown\";\r\n\r\n            return function() {\r\n                return this.on( eventType + \".ui-disableSelection\", function( event ) {\r\n                    event.preventDefault();\r\n                } );\r\n            };\r\n        } )();\r\n\r\n        $.fn.enableSelection = function() {\r\n            return this.off( \".ui-disableSelection\" );\r\n        };\r\n       \r\n\r\n    })(query);\r\n\r\n    query.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = plugins.instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n    return dom.query = query;\r\n\r\n});\ndefine('skylark-jquery/core',[\r\n\t\"skylark-langx/skylark\",\r\n\t\"skylark-langx/langx\",\r\n\t\"skylark-utils-dom/browser\",\r\n\t\"skylark-utils-dom/noder\",\r\n\t\"skylark-utils-dom/datax\",\r\n\t\"skylark-utils-dom/eventer\",\r\n\t\"skylark-utils-dom/finder\",\r\n\t\"skylark-utils-dom/fx\",\r\n\t\"skylark-utils-dom/styler\",\r\n\t\"skylark-utils-dom/query\"\r\n],function(skylark,langx,browser,noder,datax,eventer,finder,fx,styler,query){\r\n\tvar filter = Array.prototype.filter,\r\n\t\tslice = Array.prototype.slice;\r\n\r\n    (function($){\r\n\t    $.fn.jquery = '2.2.0';\r\n\r\n\t    $.camelCase = langx.camelCase;\r\n\r\n\t\t$.cleanData = function( elems ) {\r\n\t\t\tvar elem,\r\n\t\t\t\ti = 0;\r\n\r\n\t\t\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\r\n\t\t\t\tdatax.cleanData(elem);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t$.removeData = function(elm,name) {\r\n\t\t\tdatax.removeData(elm,name);\r\n\t\t}\r\n\t\r\n\t    $.each = langx.each;\r\n\r\n\t    $.extend = langx.extend;\r\n\r\n\t    $.grep = function(elements, callback) {\r\n\t        return filter.call(elements, callback)\r\n\t    };\r\n\r\n\t    $.attr = function(elm,name) {\r\n\t    \treturn datax.attr(elm,name);\r\n\t    };\r\n\r\n\t    $.isArray = langx.isArray;\r\n\t    $.isEmptyObject = langx.isEmptyObject;\r\n\t    $.isFunction = langx.isFunction;\r\n\t    $.isWindow = langx.isWindow;\r\n\t    $.isPlainObject = langx.isPlainObject;\r\n        $.isNumeric = langx.isNumber;\r\n\r\n\t    $.inArray = langx.inArray;\r\n\r\n\t    $.makeArray = langx.makeArray;\r\n\t    $.map = langx.map;  // The behavior is somewhat different from the original jquery.\r\n\r\n\t    $.noop = function() {\r\n\t    };\r\n\r\n\t    $.parseJSON = window.JSON.parse;\r\n\r\n\t    $.proxy = langx.proxy;\r\n\r\n\t    $.trim = langx.trim;\r\n\t    $.type = langx.type;\r\n\r\n\t    $.fn.extend = function(props) {\r\n\t        langx.mixin($.fn, props);\r\n\t    };\r\n\r\n\t    $.fn.serializeArray = function() {\r\n\t        var name, type, result = [],\r\n\t            add = function(value) {\r\n\t                if (value.forEach) return value.forEach(add)\r\n\t                result.push({ name: name, value: value })\r\n\t            }\r\n\t        if (this[0]) langx.each(this[0].elements, function(_, field) {\r\n\t            type = field.type, name = field.name\r\n\t            if (name && field.nodeName.toLowerCase() != 'fieldset' &&\r\n\t                !field.disabled && type != 'submit' && type != 'reset' && type != 'button' && type != 'file' &&\r\n\t                ((type != 'radio' && type != 'checkbox') || field.checked))\r\n\t                add($(field).val())\r\n\t        })\r\n\t        return result\r\n\t    };\r\n\r\n\t    $.fn.serialize = function() {\r\n\t        var result = []\r\n\t        this.serializeArray().forEach(function(elm) {\r\n\t            result.push(encodeURIComponent(elm.name) + '=' + encodeURIComponent(elm.value))\r\n\t        })\r\n\t        return result.join('&')\r\n\t    };\r\n    })(query);\r\n\r\n    (function($){\r\n        $.Event = function Event(src, props) {\r\n            if (langx.isString(src)) {\r\n            \tvar type = src;\r\n            \treturn eventer.create(type, props);\r\n\t        }\r\n            return eventer.proxy(src, props);\r\n        };\r\n\r\n        $.event = {};\r\n\r\n\t    $.event.special = eventer.special;\r\n\r\n\t    $.fn.submit = function(callback) {\r\n\t        if (0 in arguments) this.bind('submit', callback)\r\n\t        else if (this.length) {\r\n\t            var event = $.Event('submit')\r\n\t            this.eq(0).trigger(event)\r\n\t            if (!event.isDefaultPrevented()) this.get(0).submit()\r\n\t        }\r\n\t        return this\r\n\t    };\r\n\r\n\t    // event\r\n\t    $.fn.triggerHandler = $.fn.trigger;\r\n\r\n\t    $.fn.delegate = function(selector, event, callback) {\r\n\t        return this.on(event, selector, callback)\r\n\t    };\r\n\r\n\t    $.fn.undelegate = function(selector, event, callback) {\r\n\t        return this.off(event, selector, callback)\r\n\t    };\r\n\r\n\t    $.fn.live = function(event, callback) {\r\n\t        $(document.body).delegate(this.selector, event, callback)\r\n\t        return this\r\n\t    };\r\n\r\n\t    $.fn.die = function(event, callback) {\r\n\t        $(document.body).undelegate(this.selector, event, callback)\r\n\t        return this\r\n\t    };\r\n\r\n\t    $.fn.bind = function(event, selector, data, callback) {\r\n\t        return this.on(event, selector, data, callback)\r\n\t    };\r\n\r\n\t    $.fn.unbind = function(event, callback) {\r\n\t        return this.off(event, callback)\r\n\t    };\r\n\r\n\t    $.fn.ready = function(callback) {\r\n\t        eventer.ready(callback);\r\n\t        return this;\r\n\t    };\r\n\r\n\t    $.fn.stop = function() {\r\n\t        // todo\r\n\t        return this;\r\n\t    };\r\n\r\n\t    $.fn.moveto = function(x, y) {\r\n\t        return this.animate({\r\n\t            left: x + \"px\",\r\n\t            top: y + \"px\"\r\n\t        }, 0.4);\r\n\r\n\t    };\r\n\r\n\t    $.ready = eventer.ready;\r\n\r\n\t    $.on = eventer.on;\r\n\r\n\t    $.off = eventer.off;\r\n    })(query);\r\n\r\n    (function($){\r\n\t    // plugin compatibility\r\n\t    $.uuid = 0;\r\n\t    $.support = browser.support;\r\n\t    $.expr = {};\r\n\r\n\t    $.expr[\":\"] = $.expr.pseudos = $.expr.filters = finder.pseudos;\r\n\r\n\t    $.expr.createPseudo = function(fn) {\r\n\t    \treturn fn;\r\n\t    };\r\n\r\n\t    $.cssHooks = styler.cssHooks;\r\n\r\n\t    $.contains = noder.contains;\r\n\r\n\t    $.css = styler.css;\r\n\r\n\t    $.data = datax.data;\r\n\r\n\t    $.fx = fx;\r\n\t    $.fx.step = {\r\n\r\n        };\r\n\r\n        $.easing = {};\r\n\r\n\t    $.offset = {};\r\n\t    $.offset.setOffset = function(elem, options, i) {\r\n\t        var position = $.css(elem, \"position\");\r\n\r\n\t        // set position first, in-case top/left are set even on static elem\r\n\t        if (position === \"static\") {\r\n\t            elem.style.position = \"relative\";\r\n\t        }\r\n\r\n\t        var curElem = $(elem),\r\n\t            curOffset = curElem.offset(),\r\n\t            curCSSTop = $.css(elem, \"top\"),\r\n\t            curCSSLeft = $.css(elem, \"left\"),\r\n\t            calculatePosition = (position === \"absolute\" || position === \"fixed\") && $.inArray(\"auto\", [curCSSTop, curCSSLeft]) > -1,\r\n\t            props = {},\r\n\t            curPosition = {},\r\n\t            curTop, curLeft;\r\n\r\n\t        // need to be able to calculate position if either top or left is auto and position is either absolute or fixed\r\n\t        if (calculatePosition) {\r\n\t            curPosition = curElem.position();\r\n\t            curTop = curPosition.top;\r\n\t            curLeft = curPosition.left;\r\n\t        } else {\r\n\t            curTop = parseFloat(curCSSTop) || 0;\r\n\t            curLeft = parseFloat(curCSSLeft) || 0;\r\n\t        }\r\n\r\n\t        if ($.isFunction(options)) {\r\n\t            options = options.call(elem, i, curOffset);\r\n\t        }\r\n\r\n\t        if (options.top != null) {\r\n\t            props.top = (options.top - curOffset.top) + curTop;\r\n\t        }\r\n\t        if (options.left != null) {\r\n\t            props.left = (options.left - curOffset.left) + curLeft;\r\n\t        }\r\n\r\n\t        if (\"using\" in options) {\r\n\t            options.using.call(elem, props);\r\n\t        } else {\r\n\t            curElem.css(props);\r\n\t        }\r\n\t    };\r\n\r\n        $._data = function(elm,propName) {\r\n            if (elm.hasAttribute) {\r\n                return datax.data(elm,propName);\r\n            } else {\r\n                return {};\r\n            }\r\n        };\r\n        \t    \r\n    })(query);\r\n\r\n    query.parseHTML = function(html) {\r\n        return  noder.createFragment(html);\r\n    };\r\n\r\n    query.uniqueSort = query.unique = langx.uniq;\r\n\r\n    query.skylark = skylark;\r\n\r\n    return window.jQuery = window.$ = query;\r\n});\r\n\ndefine('skylark-jquery/ajax',[\r\n    \"./core\",\r\n    \"skylark-langx/langx\"\r\n], function($,langx) {\r\n    var jsonpID = 0;\r\n\r\n    function appendQuery(url, query) {\r\n        if (query == '') return url\r\n        return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n    }\r\n    \r\n    $.ajaxJSONP = function(options) {\r\n        var deferred = new langx.Deferred();\r\n        var _callbackName = options.jsonpCallback,\r\n            callbackName = ($.isFunction(_callbackName) ?\r\n                _callbackName() : _callbackName) || ('jsonp' + (++jsonpID)),\r\n            script = document.createElement('script'),\r\n            originalCallback = window[callbackName],\r\n            responseData,\r\n            abort = function(errorType) {\r\n                $(script).triggerHandler('error', errorType || 'abort')\r\n            },\r\n            xhr = { abort: abort },\r\n            abortTimeout;\r\n\r\n        for (var key in options.data) {\r\n            options.url = appendQuery(options.url, key + \"=\" + options.data[key]);\r\n        }\r\n         \r\n//        if (deferred) deferred.promise(xhr)\r\n\r\n        $(script).on('load error', function(e, errorType) {\r\n            clearTimeout(abortTimeout)\r\n            $(script).off().remove()\r\n\r\n            if (e.type == 'error' || !responseData) {\r\n                deferred.reject(e);\r\n            } else {\r\n                deferred.resolve(responseData[0],200,xhr);\r\n            }\r\n\r\n            window[callbackName] = originalCallback\r\n            if (responseData && $.isFunction(originalCallback))\r\n                originalCallback(responseData[0])\r\n\r\n            originalCallback = responseData = undefined\r\n        })\r\n\r\n        window[callbackName] = function() {\r\n            responseData = arguments\r\n        }\r\n\r\n        script.src = options.url.replace(/\\?(.+)=\\?/, '?$1=' + callbackName)\r\n        document.head.appendChild(script)\r\n\r\n        if (options.timeout > 0) abortTimeout = setTimeout(function() {\r\n            abort('timeout')\r\n        }, options.timeout)\r\n\r\n        return deferred;\r\n    }\r\n\r\n    $.ajaxSettings = langx.Xhr.defaultOptions;\r\n\r\n    $.ajaxSettings.xhr = function() {\r\n        return new window.XMLHttpRequest()\r\n    };\r\n\r\n    $.ajax = function(options) {\r\n        if (!options) {\r\n            options = {\r\n                url :  \"./\"\r\n            };\r\n        } else if (langx.isString(options)) {\r\n            options = {\r\n                url :  options\r\n            };\r\n        }\r\n\r\n        if ('jsonp' == options.dataType) {\r\n            var hasPlaceholder = /\\?.+=\\?/.test(options.url);\r\n\r\n            if (!hasPlaceholder)\r\n                options.url = appendQuery(options.url,\r\n                    options.jsonp ? (options.jsonp + '=?') : options.jsonp === false ? '' : 'callback=?')\r\n            return $.ajaxJSONP(options);\r\n        }\r\n\r\n        var p = langx.Xhr.request(options.url,options);\r\n        if (options.success) {\r\n            p = p.then(options.success,options.error);\r\n        }\r\n        return p;\r\n    };\r\n\r\n    // handle optional data/success arguments\r\n    function parseArguments(url, data, success, dataType) {\r\n        if ($.isFunction(url)) {\r\n            dataType = data, success = url, data = undefined,url = undefined;\r\n        } else if ($.isFunction(data)) {\r\n            dataType = success, success = data, data = undefined;\r\n        } \r\n        if (!$.isFunction(success)) dataType = success, success = undefined\r\n        return {\r\n            url: url,\r\n            data: data,\r\n            success: success,\r\n            dataType: dataType\r\n        }\r\n    }\r\n\r\n    $.get = function( /* url, data, success, dataType */ ) {\r\n        return $.ajax(parseArguments.apply(null, arguments))\r\n    }\r\n\r\n    $.post = function( /* url, data, success, dataType */ ) {\r\n        var options = parseArguments.apply(null, arguments)\r\n        options.type = 'POST'\r\n        return $.ajax(options)\r\n    }\r\n\r\n    $.getJSON = function( /* url, data, success */ ) {\r\n        var options = parseArguments.apply(null, arguments)\r\n        options.dataType = 'json'\r\n        return $.ajax(options)\r\n    }\r\n\r\n    var originalLoad = $.fn.load;\r\n\r\n    $.fn.load = function(url, data, success) {\r\n        if (\"string\" != typeof url && originalLoad) {\r\n            return originalLoad.apply(this, arguments);\r\n        }\r\n        if (!this.length) return this\r\n        var self = this,\r\n            options = parseArguments(url, data, success),\r\n            parts = options.url && options.url.split(/\\s/),\r\n            selector,\r\n            callback = options.success\r\n        if (parts && parts.length > 1) options.url = parts[0], selector = parts[1]\r\n        options.success = function(response) {\r\n            self.html(selector ?\r\n                $('<div>').html(response.replace(rscript, \"\")).find(selector) : response)\r\n            callback && callback.apply(self, arguments)\r\n        }\r\n        $.ajax(options)\r\n        return this\r\n    }\r\n\r\n    $.param = langx.Xhr.param;\r\n\r\n\r\n    // Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\r\n    function addToPrefiltersOrTransports(structure) {\r\n\r\n        // dataTypeExpression is optional and defaults to \"*\"\r\n        return function(dataTypeExpression, func) {\r\n\r\n            if (typeof dataTypeExpression !== \"string\") {\r\n                func = dataTypeExpression;\r\n                dataTypeExpression = \"*\";\r\n            }\r\n\r\n            var dataType,\r\n                i = 0,\r\n                dataTypes = dataTypeExpression.toLowerCase().match(rnotwhite) || [];\r\n\r\n            if (jQuery.isFunction(func)) {\r\n\r\n                // For each dataType in the dataTypeExpression\r\n                while ((dataType = dataTypes[i++])) {\r\n\r\n                    // Prepend if requested\r\n                    if (dataType[0] === \"+\") {\r\n                        dataType = dataType.slice(1) || \"*\";\r\n                        (structure[dataType] = structure[dataType] || []).unshift(func);\r\n\r\n                        // Otherwise append\r\n                    } else {\r\n                        (structure[dataType] = structure[dataType] || []).push(func);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    var\r\n        prefilters = {},\r\n        transports = {},\r\n        rnotwhite = (/\\S+/g);\r\n\r\n    $.ajaxPrefilter = addToPrefiltersOrTransports(prefilters);\r\n    $.ajaxTransport = addToPrefiltersOrTransports(transports);\r\n    $.ajaxSetup = function(target, settings) {\r\n        langx.mixin(langx.Xhr.defaultOptions,target,settings);\r\n    };\r\n\r\n    return $;\r\n\r\n});\r\n\ndefine('skylark-jquery/callbacks',[\r\n    \"./core\"\r\n], function($) {\r\n\r\n    //     This module is borrow from zepto.callback.js\r\n    //     (c) 2010-2014 Thomas Fuchs\r\n    //     Zepto.js may be freely distributed under the MIT license.\r\n\r\n    // Create a collection of callbacks to be fired in a sequence, with configurable behaviour\r\n    // Option flags:\r\n    //   - once: Callbacks fired at most one time.\r\n    //   - memory: Remember the most recent context and arguments\r\n    //   - stopOnFalse: Cease iterating over callback list\r\n    //   - unique: Permit adding at most one instance of the same callback\r\n    $.Callbacks = function(options) {\r\n        options = $.extend({}, options)\r\n\r\n        var memory, // Last fire value (for non-forgettable lists)\r\n            fired, // Flag to know if list was already fired\r\n            firing, // Flag to know if list is currently firing\r\n            firingStart, // First callback to fire (used internally by add and fireWith)\r\n            firingLength, // End of the loop when firing\r\n            firingIndex, // Index of currently firing callback (modified by remove if needed)\r\n            list = [], // Actual callback list\r\n            stack = !options.once && [], // Stack of fire calls for repeatable lists\r\n            fire = function(data) {\r\n                memory = options.memory && data\r\n                fired = true\r\n                firingIndex = firingStart || 0\r\n                firingStart = 0\r\n                firingLength = list.length\r\n                firing = true\r\n                for (; list && firingIndex < firingLength; ++firingIndex) {\r\n                    if (list[firingIndex].apply(data[0], data[1]) === false && options.stopOnFalse) {\r\n                        memory = false\r\n                        break\r\n                    }\r\n                }\r\n                firing = false\r\n                if (list) {\r\n                    if (stack) stack.length && fire(stack.shift())\r\n                    else if (memory) list.length = 0\r\n                    else Callbacks.disable()\r\n                }\r\n            },\r\n\r\n            Callbacks = {\r\n                add: function() {\r\n                    if (list) {\r\n                        var start = list.length,\r\n                            add = function(args) {\r\n                                $.each(args, function(_, arg) {\r\n                                    if (typeof arg === \"function\") {\r\n                                        if (!options.unique || !Callbacks.has(arg)) list.push(arg)\r\n                                    } else if (arg && arg.length && typeof arg !== 'string') add(arg)\r\n                                })\r\n                            }\r\n                        add(arguments)\r\n                        if (firing) firingLength = list.length\r\n                        else if (memory) {\r\n                            firingStart = start\r\n                            fire(memory)\r\n                        }\r\n                    }\r\n                    return this\r\n                },\r\n                remove: function() {\r\n                    if (list) {\r\n                        $.each(arguments, function(_, arg) {\r\n                            var index\r\n                            while ((index = $.inArray(arg, list, index)) > -1) {\r\n                                list.splice(index, 1)\r\n                                // Handle firing indexes\r\n                                if (firing) {\r\n                                    if (index <= firingLength) --firingLength\r\n                                    if (index <= firingIndex) --firingIndex\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                    return this\r\n                },\r\n                has: function(fn) {\r\n                    return !!(list && (fn ? $.inArray(fn, list) > -1 : list.length))\r\n                },\r\n                empty: function() {\r\n                    firingLength = list.length = 0\r\n                    return this\r\n                },\r\n                disable: function() {\r\n                    list = stack = memory = undefined\r\n                    return this\r\n                },\r\n                disabled: function() {\r\n                    return !list\r\n                },\r\n                lock: function() {\r\n                    stack = undefined;\r\n                    if (!memory) Callbacks.disable()\r\n                    return this\r\n                },\r\n                locked: function() {\r\n                    return !stack\r\n                },\r\n                fireWith: function(context, args) {\r\n                    if (list && (!fired || stack)) {\r\n                        args = args || []\r\n                        args = [context, args.slice ? args.slice() : args]\r\n                        if (firing) stack.push(args)\r\n                        else fire(args)\r\n                    }\r\n                    return this\r\n                },\r\n                fire: function() {\r\n                    return Callbacks.fireWith(this, arguments)\r\n                },\r\n                fired: function() {\r\n                    return !!fired\r\n                }\r\n            }\r\n\r\n        return Callbacks\r\n    };\r\n\r\n    return $;\r\n\r\n});\r\n\ndefine('skylark-jquery/deferred',[\r\n    \"./core\",\r\n    \"skylark-langx/langx\"\r\n], function($,langx) {\r\n\r\n    $.Deferred = function() {\r\n        var d = new langx.Deferred(),\r\n            _p = d.promise;\r\n        d.promise = function() {\r\n            return _p;\r\n        }\r\n        return d;\r\n    };\r\n\r\n    $.when = function(){\r\n        var p = langx.Deferred.all(langx.makeArray(arguments)),\r\n            originThen = p.then;\r\n        p.then = function(onResolved,onRejected) {\r\n            var handler = function(results) {\r\n                results = results.map(function(result){\r\n                    return [result];\r\n                });\r\n                return onResolved && onResolved.apply(null,results);\r\n            };\r\n            return originThen.call(p,handler,onRejected);\r\n        };\r\n        return p;\r\n    };\r\n\r\n    return $;\r\n\r\n});\r\n\ndefine('skylark-jquery/queue',[\r\n    \"skylark-langx/langx\",\r\n    \"./core\",\r\n    \"./callbacks\"\r\n], function(langx, $) {\r\n\r\n // jQuery Data object\r\n  var rbrace = /(?:\\{[\\s\\S]*\\}|\\[[\\s\\S]*\\])$/,\r\n      rmultiDash = /([A-Z])/g,\r\n      expando = \"Sky\" + ( '1.0' + Math.random() ).replace( /\\D/g, \"\"),\r\n      optionsCache = {},\r\n      core_rnotwhite = /\\S+/g,\r\n      core_deletedIds = [],\r\n      core_push = core_deletedIds.push;\r\n\r\n// Convert String-formatted options into Object-formatted ones and store in cache\r\n  function createOptions( options ) {\r\n    var object = optionsCache[ options ] = {};\r\n    $.each( options.match( core_rnotwhite ) || [], function( _, flag ) {\r\n      object[ flag ] = true;\r\n    });\r\n    return object;\r\n  }\r\n\r\n  function isArraylike( obj ) {\r\n    var length = obj.length,\r\n        type = $.type( obj );\r\n\r\n    if ( $.isWindow( obj ) ) {\r\n      return false;\r\n    }\r\n\r\n    if ( obj.nodeType === 1 && length ) {\r\n      return true;\r\n    }\r\n\r\n    return type === \"array\" || type !== \"function\" &&\r\n        ( length === 0 ||\r\n            typeof length === \"number\" && length > 0 && ( length - 1 ) in obj );\r\n  }\r\n\r\n  \r\n\r\n  function Data() {\r\n    // Support: Android < 4,\r\n    // Old WebKit does not have Object.preventExtensions/freeze method,\r\n    // return new empty object instead with no [[set]] accessor\r\n    Object.defineProperty( this.cache = {}, 0, {\r\n      get: function() {\r\n        return {};\r\n      }\r\n    });\r\n\r\n    this.expando = expando + Math.random();\r\n  }\r\n\r\n  Data.uid = 1;\r\n\r\n  Data.accepts = function( owner ) {\r\n    // Accepts only:\r\n    //  - Node\r\n    //    - Node.ELEMENT_NODE\r\n    //    - Node.DOCUMENT_NODE\r\n    //  - Object\r\n    //    - Any\r\n    return owner.nodeType ?\r\n        owner.nodeType === 1 || owner.nodeType === 9 : true;\r\n  };\r\n\r\n  Data.prototype = {\r\n    key: function( owner ) {\r\n      // We can accept data for non-element nodes in modern browsers,\r\n      // but we should not, see #8335.\r\n      // Always return the key for a frozen object.\r\n      if ( !Data.accepts( owner ) ) {\r\n        return 0;\r\n      }\r\n\r\n      var descriptor = {},\r\n      // Check if the owner object already has a cache key\r\n          unlock = owner[ this.expando ];\r\n\r\n      // If not, create one\r\n      if ( !unlock ) {\r\n        unlock = Data.uid++;\r\n\r\n        // Secure it in a non-enumerable, non-writable property\r\n        try {\r\n          descriptor[ this.expando ] = { value: unlock };\r\n          Object.defineProperties( owner, descriptor );\r\n\r\n          // Support: Android < 4\r\n          // Fallback to a less secure definition\r\n        } catch ( e ) {\r\n          descriptor[ this.expando ] = unlock;\r\n          $.extend( owner, descriptor );\r\n        }\r\n      }\r\n\r\n      // Ensure the cache object\r\n      if ( !this.cache[ unlock ] ) {\r\n        this.cache[ unlock ] = {};\r\n      }\r\n\r\n      return unlock;\r\n    },\r\n    set: function( owner, data, value ) {\r\n      var prop,\r\n      // There may be an unlock assigned to this node,\r\n      // if there is no entry for this \"owner\", create one inline\r\n      // and set the unlock as though an owner entry had always existed\r\n          unlock = this.key( owner ),\r\n          cache = this.cache[ unlock ];\r\n\r\n      // Handle: [ owner, key, value ] args\r\n      if ( typeof data === \"string\" ) {\r\n        cache[ data ] = value;\r\n\r\n        // Handle: [ owner, { properties } ] args\r\n      } else {\r\n        // Fresh assignments by object are shallow copied\r\n        if ( $.isEmptyObject( cache ) ) {\r\n          $.extend( this.cache[ unlock ], data );\r\n          // Otherwise, copy the properties one-by-one to the cache object\r\n        } else {\r\n          for ( prop in data ) {\r\n            cache[ prop ] = data[ prop ];\r\n          }\r\n        }\r\n      }\r\n      return cache;\r\n    },\r\n    get: function( owner, key ) {\r\n      // Either a valid cache is found, or will be created.\r\n      // New caches will be created and the unlock returned,\r\n      // allowing direct access to the newly created\r\n      // empty data object. A valid owner object must be provided.\r\n      var cache = this.cache[ this.key( owner ) ];\r\n\r\n      return key === undefined ?\r\n          cache : cache[ key ];\r\n    },\r\n    access: function( owner, key, value ) {\r\n      var stored;\r\n      // In cases where either:\r\n      //\r\n      //   1. No key was specified\r\n      //   2. A string key was specified, but no value provided\r\n      //\r\n      // Take the \"read\" path and allow the get method to determine\r\n      // which value to return, respectively either:\r\n      //\r\n      //   1. The entire cache object\r\n      //   2. The data stored at the key\r\n      //\r\n      if ( key === undefined ||\r\n          ((key && typeof key === \"string\") && value === undefined) ) {\r\n\r\n        stored = this.get( owner, key );\r\n\r\n        return stored !== undefined ?\r\n            stored : this.get( owner, $.camelCase(key) );\r\n      }\r\n\r\n      // [*]When the key is not a string, or both a key and value\r\n      // are specified, set or extend (existing objects) with either:\r\n      //\r\n      //   1. An object of properties\r\n      //   2. A key and value\r\n      //\r\n      this.set( owner, key, value );\r\n\r\n      // Since the \"set\" path can have two possible entry points\r\n      // return the expected data based on which path was taken[*]\r\n      return value !== undefined ? value : key;\r\n    },\r\n    remove: function( owner, key ) {\r\n      var i, name, camel,\r\n          unlock = this.key( owner ),\r\n          cache = this.cache[ unlock ];\r\n\r\n      if ( key === undefined ) {\r\n        this.cache[ unlock ] = {};\r\n\r\n      } else {\r\n        // Support array or space separated string of keys\r\n        if ( $.isArray( key ) ) {\r\n          // If \"name\" is an array of keys...\r\n          // When data is initially created, via (\"key\", \"val\") signature,\r\n          // keys will be converted to camelCase.\r\n          // Since there is no way to tell _how_ a key was added, remove\r\n          // both plain key and camelCase key. #12786\r\n          // This will only penalize the array argument path.\r\n          name = key.concat( key.map( $.camelCase ) );\r\n        } else {\r\n          camel = $.camelCase( key );\r\n          // Try the string as a key before any manipulation\r\n          if ( key in cache ) {\r\n            name = [ key, camel ];\r\n          } else {\r\n            // If a key with the spaces exists, use it.\r\n            // Otherwise, create an array by matching non-whitespace\r\n            name = camel;\r\n            name = name in cache ?\r\n                [ name ] : ( name.match( core_rnotwhite ) || [] );\r\n          }\r\n        }\r\n\r\n        i = name.length;\r\n        while ( i-- ) {\r\n          delete cache[ name[ i ] ];\r\n        }\r\n      }\r\n    },\r\n    hasData: function( owner ) {\r\n      return !$.isEmptyObject(\r\n          this.cache[ owner[ this.expando ] ] || {}\r\n      );\r\n    },\r\n    discard: function( owner ) {\r\n      if ( owner[ this.expando ] ) {\r\n        delete this.cache[ owner[ this.expando ] ];\r\n      }\r\n    }\r\n  };\r\n\r\n  var data_priv = new Data();\r\n\r\n  $.extend($, {\r\n    queue: function( elem, type, data ) {\r\n      var queue;\r\n\r\n      if ( elem ) {\r\n        type = ( type || \"fx\" ) + \"queue\";\r\n        queue = data_priv.get( elem, type );\r\n\r\n        // Speed up dequeue by getting out quickly if this is just a lookup\r\n        if ( data ) {\r\n          if ( !queue || $.isArray( data ) ) {\r\n            queue = data_priv.access( elem, type, $.makeArray(data) );\r\n          } else {\r\n            queue.push( data );\r\n          }\r\n        }\r\n        return queue || [];\r\n      }\r\n    },\r\n\r\n    dequeue: function( elem, type ) {\r\n      type = type || \"fx\";\r\n\r\n      var queue = $.queue( elem, type ),\r\n          startLength = queue.length,\r\n          fn = queue.shift(),\r\n          hooks = $._queueHooks( elem, type ),\r\n          next = function() {\r\n            $.dequeue( elem, type );\r\n          };\r\n\r\n      // If the fx queue is dequeued, always remove the progress sentinel\r\n      if ( fn === \"inprogress\" ) {\r\n        fn = queue.shift();\r\n        startLength--;\r\n      }\r\n\r\n      if ( fn ) {\r\n\r\n        // Add a progress sentinel to prevent the fx queue from being\r\n        // automatically dequeued\r\n        if ( type === \"fx\" ) {\r\n          queue.unshift( \"inprogress\" );\r\n        }\r\n\r\n        // clear up the last queue stop function\r\n        delete hooks.stop;\r\n        fn.call( elem, next, hooks );\r\n      }\r\n\r\n      if ( !startLength && hooks ) {\r\n        hooks.empty.fire();\r\n      }\r\n    },\r\n\r\n    // not intended for public consumption - generates a queueHooks object, or returns the current one\r\n    _queueHooks: function( elem, type ) {\r\n      var key = type + \"queueHooks\";\r\n      return data_priv.get( elem, key ) || data_priv.access( elem, key, {\r\n        empty: $.Callbacks(\"once memory\").add(function() {\r\n          data_priv.remove( elem, [ type + \"queue\", key ] );\r\n        })\r\n      });\r\n    },\r\n\r\n    // array operations\r\n    makeArray: function( arr, results ) {\r\n      var ret = results || [];\r\n\r\n      if ( arr != null ) {\r\n        if ( isArraylike( Object(arr) ) ) {\r\n          $.merge( ret,\r\n              typeof arr === \"string\" ?\r\n                  [ arr ] : arr\r\n          );\r\n        } else {\r\n          core_push.call( ret, arr );\r\n        }\r\n      }\r\n\r\n      return ret;\r\n    },\r\n    merge: function( first, second ) {\r\n      var l = second.length,\r\n          i = first.length,\r\n          j = 0;\r\n\r\n      if ( typeof l === \"number\" ) {\r\n        for ( ; j < l; j++ ) {\r\n          first[ i++ ] = second[ j ];\r\n        }\r\n      } else {\r\n        while ( second[j] !== undefined ) {\r\n          first[ i++ ] = second[ j++ ];\r\n        }\r\n      }\r\n\r\n      first.length = i;\r\n\r\n      return first;\r\n    }\r\n  });\r\n\r\n  $.extend($.fn, {\r\n    queue: function( type, data ) {\r\n      var setter = 2;\r\n\r\n      if ( typeof type !== \"string\" ) {\r\n        data = type;\r\n        type = \"fx\";\r\n        setter--;\r\n      }\r\n\r\n      if ( arguments.length < setter ) {\r\n        return $.queue( this[0], type );\r\n      }\r\n\r\n      return data === undefined ?\r\n          this :\r\n          this.each(function() {\r\n            var queue = $.queue( this, type, data );\r\n\r\n            // ensure a hooks for this queue\r\n            $._queueHooks( this, type );\r\n\r\n            if ( type === \"fx\" && queue[0] !== \"inprogress\" ) {\r\n              $.dequeue( this, type );\r\n            }\r\n          });\r\n    },\r\n    dequeue: function( type ) {\r\n      return this.each(function() {\r\n        $.dequeue( this, type );\r\n      });\r\n    },\r\n    // Based off of the plugin by Clint Helfers, with permission.\r\n    // http://blindsignals.com/index.php/2009/07/jquery-delay/\r\n    delay: function( time, type ) {\r\n      time = $.fx ? $.fx.speeds[ time ] || time : time;\r\n      type = type || \"fx\";\r\n\r\n      return this.queue( type, function( next, hooks ) {\r\n        var timeout = setTimeout( next, time );\r\n        hooks.stop = function() {\r\n          clearTimeout( timeout );\r\n        };\r\n      });\r\n    },\r\n    clearQueue: function( type ) {\r\n      return this.queue( type || \"fx\", [] );\r\n    },\r\n    // Get a promise resolved when queues of a certain type\r\n    // are emptied (fx is the type by default)\r\n    promise: function( type, obj ) {\r\n      var tmp,\r\n          count = 1,\r\n          defer = $.Deferred(),\r\n          elements = this,\r\n          i = this.length,\r\n          resolve = function() {\r\n            if ( !( --count ) ) {\r\n              defer.resolveWith( elements, [ elements ] );\r\n            }\r\n          };\r\n\r\n      if ( typeof type !== \"string\" ) {\r\n        obj = type;\r\n        type = undefined;\r\n      }\r\n      type = type || \"fx\";\r\n\r\n      while( i-- ) {\r\n        tmp = data_priv.get( elements[ i ], type + \"queueHooks\" );\r\n        if ( tmp && tmp.empty ) {\r\n          count++;\r\n          tmp.empty.add( resolve );\r\n        }\r\n      }\r\n      resolve();\r\n      return defer.promise( obj );\r\n    }\r\n  });\r\n\r\n  return $;\r\n\r\n});\r\n\ndefine('skylark-jquery/main',[\r\n    \"./core\",\r\n    \"./ajax\",\r\n    \"./callbacks\",\r\n    \"./deferred\",\r\n    \"./queue\"\r\n], function($) {\r\n    return $;\r\n});\r\n\ndefine('skylark-jquery', ['skylark-jquery/main'], function (main) { return main; });\n\ndefine('skylark-backbone/backbone',[\r\n\t\"skylark-langx/skylark\",\r\n\t\"skylark-jquery\"\r\n],function(skylark,$){\r\n//     from Backbone.js 1.2.3\r\n\r\n//     (c) 2010-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\r\n//     Backbone may be freely distributed under the MIT license.\r\n//     For all details and documentation:\r\n//     http://backbonejs.org\r\n\tvar Backbone = skylark.backbone = {}\r\n    Backbone.$ = $;\r\n\r\n\treturn Backbone ;\r\n});\ndefine('skylark-backbone/models',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n\r\n  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\r\n  var methodMap = {\r\n    'create': 'POST',\r\n    'update': 'PUT',\r\n    'patch': 'PATCH',\r\n    'delete': 'DELETE',\r\n    'read': 'GET'\r\n  };\r\n  \r\n  // Wrap an optional error callback with a fallback error event.\r\n  var wrapError = function(model, options) {\r\n    var error = options.error;\r\n    options.error = function(resp) {\r\n      if (error) error.call(options.context, model, resp, options);\r\n      model.trigger('error', model, resp, options);\r\n    };\r\n  };\r\n\r\n  var sync = function(method, entity, options) {\r\n    var type = methodMap[method];\r\n\r\n    // Default options, unless specified.\r\n    langx.defaults(options || (options = {}), {\r\n      emulateHTTP: models.emulateHTTP,\r\n      emulateJSON: models.emulateJSON\r\n    });\r\n\r\n    // Default JSON-request options.\r\n    var params = {type: type, dataType: 'json'};\r\n\r\n    // Ensure that we have a URL.\r\n    if (!options.url) {\r\n      params.url = langx.result(entity, 'url') || urlError();\r\n    }\r\n\r\n    // Ensure that we have the appropriate request data.\r\n    if (options.data == null && entity && (method === 'create' || method === 'update' || method === 'patch')) {\r\n      params.contentType = 'application/json';\r\n      params.data = JSON.stringify(options.attrs || entity.toJSON(options));\r\n    }\r\n\r\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\r\n    if (options.emulateJSON) {\r\n      params.contentType = 'application/x-www-form-urlencoded';\r\n      params.data = params.data ? {entity: params.data} : {};\r\n    }\r\n\r\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\r\n    // And an `X-HTTP-Method-Override` header.\r\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\r\n      params.type = 'POST';\r\n      if (options.emulateJSON) params.data._method = type;\r\n      var beforeSend = options.beforeSend;\r\n      options.beforeSend = function(xhr) {\r\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\r\n        if (beforeSend) return beforeSend.apply(this, arguments);\r\n      };\r\n    }\r\n\r\n    // Don't process data on a non-GET request.\r\n    if (params.type !== 'GET' && !options.emulateJSON) {\r\n      params.processData = false;\r\n    }\r\n\r\n    // Pass along `textStatus` and `errorThrown` from jQuery.\r\n    var error = options.error;\r\n    options.error = function(xhr, textStatus, errorThrown) {\r\n      options.textStatus = textStatus;\r\n      options.errorThrown = errorThrown;\r\n      if (error) error.call(options.context, xhr, textStatus, errorThrown);\r\n    };\r\n\r\n    // Make the request, allowing the user to override any Ajax options.\r\n    var xhr = options.xhr = langx.Xhr.request(langx.mixin(params, options));\r\n    entity.trigger('request', entity, xhr, options);\r\n    return xhr;\r\n  };\r\n\r\n\r\n  var Entity = langx.Stateful.inherit({\r\n    sync: function() {\r\n      return models.sync.apply(this, arguments);\r\n    },\r\n\r\n    // Get the HTML-escaped value of an attribute.\r\n    //escape: function(attr) {\r\n    //  return _.escape(this.get(attr));\r\n    //},\r\n\r\n    // Special-cased proxy to underscore's `_.matches` method.\r\n    matches: function(attrs) {\r\n      return langx.isMatch(this.attributes,attrs);\r\n    },\r\n\r\n    // Fetch the entity from the server, merging the response with the entity's\r\n    // local attributes. Any changed attributes will trigger a \"change\" event.\r\n    fetch: function(options) {\r\n      options = langx.mixin({parse: true}, options);\r\n      var entity = this;\r\n      var success = options.success;\r\n      options.success = function(resp) {\r\n        var serverAttrs = options.parse ? entity.parse(resp, options) : resp;\r\n        if (!entity.set(serverAttrs, options)) return false;\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        entity.trigger('sync', entity, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n      return this.sync('read', this, options);\r\n    },\r\n\r\n    // Set a hash of entity attributes, and sync the entity to the server.\r\n    // If the server returns an attributes hash that differs, the entity's\r\n    // state will be `set` again.\r\n    save: function(key, val, options) {\r\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n      var attrs;\r\n      if (key == null || typeof key === 'object') {\r\n        attrs = key;\r\n        options = val;\r\n      } else {\r\n        (attrs = {})[key] = val;\r\n      }\r\n\r\n      options = langx.mixin({validate: true, parse: true}, options);\r\n      var wait = options.wait;\r\n\r\n      // If we're not waiting and attributes exist, save acts as\r\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\r\n      // the entity will be valid when the attributes, if any, are set.\r\n      if (attrs && !wait) {\r\n        if (!this.set(attrs, options)) return false;\r\n      } else if (!this._validate(attrs, options)) {\r\n        return false;\r\n      }\r\n\r\n      // After a successful server-side save, the client is (optionally)\r\n      // updated with the server-side state.\r\n      var entity = this;\r\n      var success = options.success;\r\n      var attributes = this.attributes;\r\n      options.success = function(resp) {\r\n        // Ensure attributes are restored during synchronous saves.\r\n        entity.attributes = attributes;\r\n        var serverAttrs = options.parse ? entity.parse(resp, options) : resp;\r\n        if (wait) serverAttrs = langx.mixin({}, attrs, serverAttrs);\r\n        if (serverAttrs && !entity.set(serverAttrs, options)) return false;\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        entity.trigger('sync', entity, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n\r\n      // Set temporary attributes if `{wait: true}` to properly find new ids.\r\n      if (attrs && wait) this.attributes = langx.mixin({}, attributes, attrs);\r\n\r\n      var method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');\r\n      if (method === 'patch' && !options.attrs) options.attrs = attrs;\r\n      var xhr = this.sync(method, this, options);\r\n\r\n      // Restore attributes.\r\n      this.attributes = attributes;\r\n\r\n      return xhr;\r\n    },\r\n\r\n    // Destroy this entity on the server if it was already persisted.\r\n    // Optimistically removes the entity from its collection, if it has one.\r\n    // If `wait: true` is passed, waits for the server to respond before removal.\r\n    destroy: function(options) {\r\n      options = options ? langx.clone(options) : {};\r\n      var entity = this;\r\n      var success = options.success;\r\n      var wait = options.wait;\r\n\r\n      var destroy = function() {\r\n        entity.stopListening();\r\n        entity.trigger('destroy', entity, entity.collection, options);\r\n      };\r\n\r\n      options.success = function(resp) {\r\n        if (wait) destroy();\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        if (!entity.isNew()) entity.trigger('sync', entity, resp, options);\r\n      };\r\n\r\n      var xhr = false;\r\n      if (this.isNew()) {\r\n        langx.defer(options.success);\r\n      } else {\r\n        wrapError(this, options);\r\n        xhr = this.sync('delete', this, options);\r\n      }\r\n      if (!wait) destroy();\r\n      return xhr;\r\n    },\r\n\r\n    // Default URL for the entity's representation on the server -- if you're\r\n    // using Backbone's restful methods, override this to change the endpoint\r\n    // that will be called.\r\n    url: function() {\r\n      var base =\r\n        langx.result(this, 'urlRoot') ||\r\n        langx.result(this.collection, 'url') ||\r\n        urlError();\r\n      if (this.isNew()) return base;\r\n      var id = this.get(this.idAttribute);\r\n      return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\r\n    },\r\n\r\n    // **parse** converts a response into the hash of attributes to be `set` on\r\n    // the entity. The default implementation is just to pass the response along.\r\n    parse: function(resp, options) {\r\n      return resp;\r\n    }\r\n  });\r\n\r\n  var Collection  = langx.Evented.inherit({\r\n    \"_construct\" : function(entities, options) {\r\n      options || (options = {});\r\n      if (options.entity) this.entity = options.entity;\r\n      if (options.comparator !== void 0) this.comparator = options.comparator;\r\n      this._reset();\r\n      if (entities) this.reset(entities, langx.mixin({silent: true}, options));\r\n    }\r\n  }); \r\n\r\n  // Default options for `Collection#set`.\r\n  var setOptions = {add: true, remove: true, merge: true};\r\n  var addOptions = {add: true, remove: false};\r\n\r\n  // Splices `insert` into `array` at index `at`.\r\n  var splice = function(array, insert, at) {\r\n    at = Math.min(Math.max(at, 0), array.length);\r\n    var tail = Array(array.length - at);\r\n    var length = insert.length;\r\n    var i;\r\n    for (i = 0; i < tail.length; i++) tail[i] = array[i + at];\r\n    for (i = 0; i < length; i++) array[i + at] = insert[i];\r\n    for (i = 0; i < tail.length; i++) array[i + length + at] = tail[i];\r\n  };\r\n\r\n  // Define the Collection's inheritable methods.\r\n  Collection.partial({\r\n\r\n    // The default entity for a collection is just a **Entity**.\r\n    // This should be overridden in most cases.\r\n    entity: Entity,\r\n\r\n    // Initialize is an empty function by default. Override it with your own\r\n    // initialization logic.\r\n    initialize: function(){},\r\n\r\n    // The JSON representation of a Collection is an array of the\r\n    // entities' attributes.\r\n    toJSON: function(options) {\r\n      return this.map(function(entity) { return entity.toJSON(options); });\r\n    },\r\n\r\n    // Proxy `models.sync` by default.\r\n    sync: function() {\r\n      return models.sync.apply(this, arguments);\r\n    },\r\n\r\n    // Add a entity, or list of entities to the set. `entities` may be Backbone\r\n    // Entitys or raw JavaScript objects to be converted to Entitys, or any\r\n    // combination of the two.\r\n    add: function(entities, options) {\r\n      return this.set(entities, langx.mixin({merge: false}, options, addOptions));\r\n    },\r\n\r\n    // Remove a entity, or a list of entities from the set.\r\n    remove: function(entities, options) {\r\n      options = langx.mixin({}, options);\r\n      var singular = !langx.isArray(entities);\r\n      entities = singular ? [entities] : entities.slice();\r\n      var removed = this._removeEntitys(entities, options);\r\n      if (!options.silent && removed.length) {\r\n        options.changes = {added: [], merged: [], removed: removed};\r\n        this.trigger('update', this, options);\r\n      }\r\n      return singular ? removed[0] : removed;\r\n    },\r\n\r\n    // Update a collection by `set`-ing a new list of entities, adding new ones,\r\n    // removing entities that are no longer present, and merging entities that\r\n    // already exist in the collection, as necessary. Similar to **Entity#set**,\r\n    // the core operation for updating the data contained by the collection.\r\n    set: function(entities, options) {\r\n      if (entities == null) return;\r\n\r\n      options = langx.mixin({}, setOptions, options);\r\n      if (options.parse && !this._isEntity(entities)) {\r\n        entities = this.parse(entities, options) || [];\r\n      }\r\n\r\n      var singular = !langx.isArray(entities);\r\n      entities = singular ? [entities] : entities.slice();\r\n\r\n      var at = options.at;\r\n      if (at != null) at = +at;\r\n      if (at > this.length) at = this.length;\r\n      if (at < 0) at += this.length + 1;\r\n\r\n      var set = [];\r\n      var toAdd = [];\r\n      var toMerge = [];\r\n      var toRemove = [];\r\n      var modelMap = {};\r\n\r\n      var add = options.add;\r\n      var merge = options.merge;\r\n      var remove = options.remove;\r\n\r\n      var sort = false;\r\n      var sortable = this.comparator && at == null && options.sort !== false;\r\n      var sortAttr = langx.isString(this.comparator) ? this.comparator : null;\r\n\r\n      // Turn bare objects into entity references, and prevent invalid entities\r\n      // from being added.\r\n      var entity, i;\r\n      for (i = 0; i < entities.length; i++) {\r\n        entity = entities[i];\r\n\r\n        // If a duplicate is found, prevent it from being added and\r\n        // optionally merge it into the existing entity.\r\n        var existing = this.get(entity);\r\n        if (existing) {\r\n          if (merge && entity !== existing) {\r\n            var attrs = this._isEntity(entity) ? entity.attributes : entity;\r\n            if (options.parse) attrs = existing.parse(attrs, options);\r\n            existing.set(attrs, options);\r\n            toMerge.push(existing);\r\n            if (sortable && !sort) sort = existing.hasChanged(sortAttr);\r\n          }\r\n          if (!modelMap[existing.cid]) {\r\n            modelMap[existing.cid] = true;\r\n            set.push(existing);\r\n          }\r\n          entities[i] = existing;\r\n\r\n        // If this is a new, valid entity, push it to the `toAdd` list.\r\n        } else if (add) {\r\n          entity = entities[i] = this._prepareEntity(entity, options);\r\n          if (entity) {\r\n            toAdd.push(entity);\r\n            this._addReference(entity, options);\r\n            modelMap[entity.cid] = true;\r\n            set.push(entity);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove stale entities.\r\n      if (remove) {\r\n        for (i = 0; i < this.length; i++) {\r\n          entity = this.entities[i];\r\n          if (!modelMap[entity.cid]) toRemove.push(entity);\r\n        }\r\n        if (toRemove.length) this._removeEntitys(toRemove, options);\r\n      }\r\n\r\n      // See if sorting is needed, update `length` and splice in new entities.\r\n      var orderChanged = false;\r\n      var replace = !sortable && add && remove;\r\n      if (set.length && replace) {\r\n        orderChanged = this.length !== set.length || this.entities.some(function(m, index) {\r\n          return m !== set[index];\r\n        });\r\n        this.entities.length = 0;\r\n        splice(this.entities, set, 0);\r\n        this.length = this.entities.length;\r\n      } else if (toAdd.length) {\r\n        if (sortable) sort = true;\r\n        splice(this.entities, toAdd, at == null ? this.length : at);\r\n        this.length = this.entities.length;\r\n      }\r\n\r\n      // Silently sort the collection if appropriate.\r\n      if (sort) this.sort({silent: true});\r\n\r\n      // Unless silenced, it's time to fire all appropriate add/sort/update events.\r\n      if (!options.silent) {\r\n        for (i = 0; i < toAdd.length; i++) {\r\n          if (at != null) options.index = at + i;\r\n          entity = toAdd[i];\r\n          entity.trigger('add', entity, this, options);\r\n        }\r\n        if (sort || orderChanged) this.trigger('sort', this, options);\r\n        if (toAdd.length || toRemove.length || toMerge.length) {\r\n          options.changes = {\r\n            added: toAdd,\r\n            removed: toRemove,\r\n            merged: toMerge\r\n          };\r\n          this.trigger('update', this, options);\r\n        }\r\n      }\r\n\r\n      // Return the added (or merged) entity (or entities).\r\n      return singular ? entities[0] : entities;\r\n    },\r\n\r\n    // When you have more items than you want to add or remove individually,\r\n    // you can reset the entire set with a new list of entities, without firing\r\n    // any granular `add` or `remove` events. Fires `reset` when finished.\r\n    // Useful for bulk operations and optimizations.\r\n    reset: function(entities, options) {\r\n      options = options ? langx.clone(options) : {};\r\n      for (var i = 0; i < this.entities.length; i++) {\r\n        this._removeReference(this.entities[i], options);\r\n      }\r\n      options.previousEntitys = this.entities;\r\n      this._reset();\r\n      entities = this.add(entities, langx.mixin({silent: true}, options));\r\n      if (!options.silent) this.trigger('reset', this, options);\r\n      return entities;\r\n    },\r\n\r\n    // Add a entity to the end of the collection.\r\n    push: function(entity, options) {\r\n      return this.add(entity, langx.mixin({at: this.length}, options));\r\n    },\r\n\r\n    // Remove a entity from the end of the collection.\r\n    pop: function(options) {\r\n      var entity = this.at(this.length - 1);\r\n      return this.remove(entity, options);\r\n    },\r\n\r\n    // Add a entity to the beginning of the collection.\r\n    unshift: function(entity, options) {\r\n      return this.add(entity, langx.mixin({at: 0}, options));\r\n    },\r\n\r\n    // Remove a entity from the beginning of the collection.\r\n    shift: function(options) {\r\n      var entity = this.at(0);\r\n      return this.remove(entity, options);\r\n    },\r\n\r\n    // Slice out a sub-array of entities from the collection.\r\n    slice: function() {\r\n      return slice.apply(this.entities, arguments);\r\n    },\r\n\r\n    // Get a entity from the set by id, cid, entity object with id or cid\r\n    // properties, or an attributes object that is transformed through entityId.\r\n    get: function(obj) {\r\n      if (obj == null) return void 0;\r\n      return this._byId[obj] ||\r\n        this._byId[this.entityId(obj.attributes || obj)] ||\r\n        obj.cid && this._byId[obj.cid];\r\n    },\r\n\r\n    // Returns `true` if the entity is in the collection.\r\n    has: function(obj) {\r\n      return this.get(obj) != null;\r\n    },\r\n\r\n    // Get the entity at the given index.\r\n    at: function(index) {\r\n      if (index < 0) index += this.length;\r\n      return this.entities[index];\r\n    },\r\n\r\n    // Return entities with matching attributes. Useful for simple cases of\r\n    // `filter`.\r\n    where: function(attrs, first) {\r\n      return this[first ? 'find' : 'filter'](attrs);\r\n    },\r\n\r\n    // Return the first entity with matching attributes. Useful for simple cases\r\n    // of `find`.\r\n    findWhere: function(attrs) {\r\n      return this.where(attrs, true);\r\n    },\r\n\r\n    // Force the collection to re-sort itself. You don't need to call this under\r\n    // normal circumstances, as the set will maintain sort order as each item\r\n    // is added.\r\n    sort: function(options) {\r\n      var comparator = this.comparator;\r\n      if (!comparator) throw new Error('Cannot sort a set without a comparator');\r\n      options || (options = {});\r\n\r\n      var length = comparator.length;\r\n      if (langx.isFunction(comparator)) comparator = langx.proxy(comparator, this);\r\n\r\n      // Run sort based on type of `comparator`.\r\n      if (length === 1 || langx.isString(comparator)) {\r\n        this.entities = this.sortBy(comparator);\r\n      } else {\r\n        this.entities.sort(comparator);\r\n      }\r\n      if (!options.silent) this.trigger('sort', this, options);\r\n      return this;\r\n    },\r\n\r\n    // Pluck an attribute from each entity in the collection.\r\n    pluck: function(attr) {\r\n      return this.map(attr + '');\r\n    },\r\n\r\n    // Fetch the default set of entities for this collection, resetting the\r\n    // collection when they arrive. If `reset: true` is passed, the response\r\n    // data will be passed through the `reset` method instead of `set`.\r\n    fetch: function(options) {\r\n      options = langx.mixin({parse: true}, options);\r\n      var success = options.success;\r\n      var collection = this;\r\n      options.success = function(resp) {\r\n        var method = options.reset ? 'reset' : 'set';\r\n        collection[method](resp, options);\r\n        if (success) success.call(options.context, collection, resp, options);\r\n        collection.trigger('sync', collection, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n      return this.sync('read', this, options);\r\n    },\r\n\r\n    // Create a new instance of a entity in this collection. Add the entity to the\r\n    // collection immediately, unless `wait: true` is passed, in which case we\r\n    // wait for the server to agree.\r\n    create: function(entity, options) {\r\n      options = options ? langx.clone(options) : {};\r\n      var wait = options.wait;\r\n      entity = this._prepareEntity(entity, options);\r\n      if (!entity) return false;\r\n      if (!wait) this.add(entity, options);\r\n      var collection = this;\r\n      var success = options.success;\r\n      options.success = function(m, resp, callbackOpts) {\r\n        if (wait) collection.add(m, callbackOpts);\r\n        if (success) success.call(callbackOpts.context, m, resp, callbackOpts);\r\n      };\r\n      entity.save(null, options);\r\n      return entity;\r\n    },\r\n\r\n    // **parse** converts a response into a list of entities to be added to the\r\n    // collection. The default implementation is just to pass it through.\r\n    parse: function(resp, options) {\r\n      return resp;\r\n    },\r\n\r\n    // Create a new collection with an identical list of entities as this one.\r\n    clone: function() {\r\n      return new this.constructor(this.entities, {\r\n        entity: this.entity,\r\n        comparator: this.comparator\r\n      });\r\n    },\r\n\r\n    // Define how to uniquely identify entities in the collection.\r\n    entityId: function(attrs) {\r\n      return attrs[this.entity.prototype.idAttribute || 'id'];\r\n    },\r\n\r\n    // Private method to reset all internal state. Called when the collection\r\n    // is first initialized or reset.\r\n    _reset: function() {\r\n      this.length = 0;\r\n      this.entities = [];\r\n      this._byId  = {};\r\n    },\r\n\r\n    // Prepare a hash of attributes (or other entity) to be added to this\r\n    // collection.\r\n    _prepareEntity: function(attrs, options) {\r\n      if (this._isEntity(attrs)) {\r\n        if (!attrs.collection) attrs.collection = this;\r\n        return attrs;\r\n      }\r\n      options = options ? langx.clone(options) : {};\r\n      options.collection = this;\r\n      var entity = new this.entity(attrs, options);\r\n      if (!entity.validationError) return entity;\r\n      this.trigger('invalid', this, entity.validationError, options);\r\n      return false;\r\n    },\r\n\r\n    // Internal method called by both remove and set.\r\n    _removeEntitys: function(entities, options) {\r\n      var removed = [];\r\n      for (var i = 0; i < entities.length; i++) {\r\n        var entity = this.get(entities[i]);\r\n        if (!entity) continue;\r\n\r\n        var index = this.indexOf(entity);\r\n        this.entities.splice(index, 1);\r\n        this.length--;\r\n\r\n        // Remove references before triggering 'remove' event to prevent an\r\n        // infinite loop. #3693\r\n        delete this._byId[entity.cid];\r\n        var id = this.entityId(entity.attributes);\r\n        if (id != null) delete this._byId[id];\r\n\r\n        if (!options.silent) {\r\n          options.index = index;\r\n          entity.trigger('remove', entity, this, options);\r\n        }\r\n\r\n        removed.push(entity);\r\n        this._removeReference(entity, options);\r\n      }\r\n      return removed;\r\n    },\r\n\r\n    // Method for checking whether an object should be considered a entity for\r\n    // the purposes of adding to the collection.\r\n    _isEntity: function(entity) {\r\n      return entity instanceof Entity;\r\n    },\r\n\r\n    // Internal method to create a entity's ties to a collection.\r\n    _addReference: function(entity, options) {\r\n      this._byId[entity.cid] = entity;\r\n      var id = this.entityId(entity.attributes);\r\n      if (id != null) this._byId[id] = entity;\r\n      entity.on('all', this._onEntityEvent, this);\r\n    },\r\n\r\n    // Internal method to sever a entity's ties to a collection.\r\n    _removeReference: function(entity, options) {\r\n      delete this._byId[entity.cid];\r\n      var id = this.entityId(entity.attributes);\r\n      if (id != null) delete this._byId[id];\r\n      if (this === entity.collection) delete entity.collection;\r\n      entity.off('all', this._onEntityEvent, this);\r\n    },\r\n\r\n    // Internal method called every time a entity in the set fires an event.\r\n    // Sets need to update their indexes when entities change ids. All other\r\n    // events simply proxy through. \"add\" and \"remove\" events that originate\r\n    // in other collections are ignored.\r\n    _onEntityEvent: function(event, entity, collection, options) {\r\n      if (entity) {\r\n        if ((event === 'add' || event === 'remove') && collection !== this) return;\r\n        if (event === 'destroy') this.remove(entity, options);\r\n        if (event === 'change') {\r\n          var prevId = this.entityId(entity.previousAttributes());\r\n          var id = this.entityId(entity.attributes);\r\n          if (prevId !== id) {\r\n            if (prevId != null) delete this._byId[prevId];\r\n            if (id != null) this._byId[id] = entity;\r\n          }\r\n        }\r\n      }\r\n      this.trigger.apply(this, arguments);\r\n    }\r\n\r\n  });\r\n\r\n    function models() {\r\n        return models;\r\n    }\r\n\r\n    langx.mixin(models, {\r\n        // set a `X-Http-Method-Override` header.\r\n        emulateHTTP : false,\r\n\r\n        // Turn on `emulateJSON` to support legacy servers that can't deal with direct\r\n        // `application/json` requests ... this will encode the body as\r\n        // `application/x-www-form-urlencoded` instead and will send the model in a\r\n        // form param named `model`.\r\n        emulateJSON : false,\r\n\r\n        sync : sync,\r\n\r\n        Entity: Entity,\r\n        Collection : Collection\r\n    });\r\n\r\n\r\n    return models;\r\n});\r\n\ndefine('skylark-backbone/events',[\r\n  \"skylark-langx/langx\",\r\n  \"./backbone\"\r\n],function(langx,Backbone){\r\n  // Create a local reference to a common array method we'll want to use later.\r\n  var slice = Array.prototype.slice;\r\n\r\n  // Backbone.Events\r\n\r\n  var EventExtends = {\r\n      on  : function(name, callback, context){\r\n          var fn =  function() {\r\n            var args = slice.call(arguments,1);\r\n            if (name==\"all\") {\r\n              args.unshift(arguments[0].type);\r\n            }\r\n            callback.apply(this, args);\r\n          };\r\n          fn._ = callback\r\n          \r\n          return this.overrided(name,fn,context);\r\n      },\r\n        \r\n      once : function(name, callback, context) {\r\n        return this.one(name,callback,context);\r\n      },\r\n      bind : function(name, callback, context) {\r\n          return this.on(name,callback,context);\r\n      },\r\n      \r\n      unbind : function(name, callback, context){\r\n          return this.off(name,callback,context);\r\n      },\r\n    \r\n      stopListening : function(obj, name, callback){\r\n        return this.unlistenTo(obj,name,callback);\r\n      }\r\n   },\r\n\r\n  BackboneEvented = langx.Evented.inherit(EventExtends),\r\n\r\n  EventedProto = BackboneEvented.prototype;\r\n  \r\n  var Events = Backbone.Events = {\r\n     bind: EventedProto.bind,\r\n     listenTo: EventedProto.listenTo,\r\n     listenToOnce: EventedProto.listenToOnce,\r\n     off: EventedProto.off,\r\n     on : EventedProto.on,\r\n     once: EventedProto.once,\r\n     stopListening: EventedProto.stopListening,\r\n     trigger: EventedProto.trigger,\r\n     unbind: EventedProto.unbind,\r\n     unlistenTo: EventedProto.unlistenTo\r\n  };\r\n\r\n  // Allow the `Backbone` object to serve as a global event bus, for folks who\r\n  // want global \"pubsub\" in a convenient place.\r\n  langx.extend(Backbone, Events);\r\n\r\n  return {\r\n    EventExtends : EventExtends,\r\n    BackboneEvented : BackboneEvented\r\n  };\r\n\r\n});\ndefine('skylark-underscore/underscore',[\r\n\t\"skylark-langx/skylark\"\r\n],function(skylark){\r\n//     Underscore.js 1.9.1\r\n//     http://underscorejs.org\r\n//     (c) 2009-2018 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\r\n//     Underscore may be freely distributed under the MIT license.\r\n\r\n  // Baseline setup\r\n  // --------------\r\n\r\n  // Establish the root object, `window` (`self`) in the browser, `global`\r\n  // on the server, or `this` in some virtual machines. We use `self`\r\n  // instead of `window` for `WebWorker` support.\r\n  var root = typeof self == 'object' && self.self === self && self ||\r\n            typeof global == 'object' && global.global === global && global ||\r\n            this ||\r\n            {};\r\n\r\n  // Save the previous value of the `_` variable.\r\n  var previousUnderscore = root._;\r\n\r\n  // Save bytes in the minified (but not gzipped) version:\r\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype;\r\n  var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n  // Create quick reference variables for speed access to core prototypes.\r\n  var push = ArrayProto.push,\r\n      slice = ArrayProto.slice,\r\n      toString = ObjProto.toString,\r\n      hasOwnProperty = ObjProto.hasOwnProperty;\r\n\r\n  // All **ECMAScript 5** native function implementations that we hope to use\r\n  // are declared here.\r\n  var nativeIsArray = Array.isArray,\r\n      nativeKeys = Object.keys,\r\n      nativeCreate = Object.create;\r\n\r\n  // Naked function reference for surrogate-prototype-swapping.\r\n  var Ctor = function(){};\r\n\r\n  // Create a safe reference to the Underscore object for use below.\r\n  var _ = function(obj) {\r\n    if (obj instanceof _) return obj;\r\n    if (!(this instanceof _)) return new _(obj);\r\n    this._wrapped = obj;\r\n  };\r\n\r\n  // Export the Underscore object for **Node.js**, with\r\n  // backwards-compatibility for their old module API. If we're in\r\n  // the browser, add `_` as a global object.\r\n  // (`nodeType` is checked to ensure that `module`\r\n  // and `exports` are not HTML elements.)\r\n  if (typeof exports != 'undefined' && !exports.nodeType) {\r\n    if (typeof module != 'undefined' && !module.nodeType && module.exports) {\r\n      exports = module.exports = _;\r\n    }\r\n    exports._ = _;\r\n  } else {\r\n    root._ = _;\r\n  }\r\n\r\n  // Current version.\r\n  _.VERSION = '1.9.1';\r\n\r\n  // Internal function that returns an efficient (for current engines) version\r\n  // of the passed-in callback, to be repeatedly applied in other Underscore\r\n  // functions.\r\n  var optimizeCb = function(func, context, argCount) {\r\n    if (context === void 0) return func;\r\n    switch (argCount == null ? 3 : argCount) {\r\n      case 1: return function(value) {\r\n        return func.call(context, value);\r\n      };\r\n      // The 2-argument case is omitted because we’re not using it.\r\n      case 3: return function(value, index, collection) {\r\n        return func.call(context, value, index, collection);\r\n      };\r\n      case 4: return function(accumulator, value, index, collection) {\r\n        return func.call(context, accumulator, value, index, collection);\r\n      };\r\n    }\r\n    return function() {\r\n      return func.apply(context, arguments);\r\n    };\r\n  };\r\n\r\n  var builtinIteratee;\r\n\r\n  // An internal function to generate callbacks that can be applied to each\r\n  // element in a collection, returning the desired result — either `identity`,\r\n  // an arbitrary callback, a property matcher, or a property accessor.\r\n  var cb = function(value, context, argCount) {\r\n    if (_.iteratee !== builtinIteratee) return _.iteratee(value, context);\r\n    if (value == null) return _.identity;\r\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\r\n    if (_.isObject(value) && !_.isArray(value)) return _.matcher(value);\r\n    return _.property(value);\r\n  };\r\n\r\n  // External wrapper for our callback generator. Users may customize\r\n  // `_.iteratee` if they want additional predicate/iteratee shorthand styles.\r\n  // This abstraction hides the internal-only argCount argument.\r\n  _.iteratee = builtinIteratee = function(value, context) {\r\n    return cb(value, context, Infinity);\r\n  };\r\n\r\n  // Some functions take a variable number of arguments, or a few expected\r\n  // arguments at the beginning and then a variable number of values to operate\r\n  // on. This helper accumulates all remaining arguments past the function’s\r\n  // argument length (or an explicit `startIndex`), into an array that becomes\r\n  // the last argument. Similar to ES6’s \"rest parameter\".\r\n  var restArguments = function(func, startIndex) {\r\n    startIndex = startIndex == null ? func.length - 1 : +startIndex;\r\n    return function() {\r\n      var length = Math.max(arguments.length - startIndex, 0),\r\n          rest = Array(length),\r\n          index = 0;\r\n      for (; index < length; index++) {\r\n        rest[index] = arguments[index + startIndex];\r\n      }\r\n      switch (startIndex) {\r\n        case 0: return func.call(this, rest);\r\n        case 1: return func.call(this, arguments[0], rest);\r\n        case 2: return func.call(this, arguments[0], arguments[1], rest);\r\n      }\r\n      var args = Array(startIndex + 1);\r\n      for (index = 0; index < startIndex; index++) {\r\n        args[index] = arguments[index];\r\n      }\r\n      args[startIndex] = rest;\r\n      return func.apply(this, args);\r\n    };\r\n  };\r\n\r\n  // An internal function for creating a new object that inherits from another.\r\n  var baseCreate = function(prototype) {\r\n    if (!_.isObject(prototype)) return {};\r\n    if (nativeCreate) return nativeCreate(prototype);\r\n    Ctor.prototype = prototype;\r\n    var result = new Ctor;\r\n    Ctor.prototype = null;\r\n    return result;\r\n  };\r\n\r\n  var shallowProperty = function(key) {\r\n    return function(obj) {\r\n      return obj == null ? void 0 : obj[key];\r\n    };\r\n  };\r\n\r\n  var has = function(obj, path) {\r\n    return obj != null && hasOwnProperty.call(obj, path);\r\n  }\r\n\r\n  var deepGet = function(obj, path) {\r\n    var length = path.length;\r\n    for (var i = 0; i < length; i++) {\r\n      if (obj == null) return void 0;\r\n      obj = obj[path[i]];\r\n    }\r\n    return length ? obj : void 0;\r\n  };\r\n\r\n  // Helper for collection methods to determine whether a collection\r\n  // should be iterated as an array or as an object.\r\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\r\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\r\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\r\n  var getLength = shallowProperty('length');\r\n  var isArrayLike = function(collection) {\r\n    var length = getLength(collection);\r\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\r\n  };\r\n\r\n  // Collection Functions\r\n  // --------------------\r\n\r\n  // The cornerstone, an `each` implementation, aka `forEach`.\r\n  // Handles raw objects in addition to array-likes. Treats all\r\n  // sparse array-likes as if they were dense.\r\n  _.each = _.forEach = function(obj, iteratee, context) {\r\n    iteratee = optimizeCb(iteratee, context);\r\n    var i, length;\r\n    if (isArrayLike(obj)) {\r\n      for (i = 0, length = obj.length; i < length; i++) {\r\n        iteratee(obj[i], i, obj);\r\n      }\r\n    } else {\r\n      var keys = _.keys(obj);\r\n      for (i = 0, length = keys.length; i < length; i++) {\r\n        iteratee(obj[keys[i]], keys[i], obj);\r\n      }\r\n    }\r\n    return obj;\r\n  };\r\n\r\n  // Return the results of applying the iteratee to each element.\r\n  _.map = _.collect = function(obj, iteratee, context) {\r\n    iteratee = cb(iteratee, context);\r\n    var keys = !isArrayLike(obj) && _.keys(obj),\r\n        length = (keys || obj).length,\r\n        results = Array(length);\r\n    for (var index = 0; index < length; index++) {\r\n      var currentKey = keys ? keys[index] : index;\r\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\r\n    }\r\n    return results;\r\n  };\r\n\r\n  // Create a reducing function iterating left or right.\r\n  var createReduce = function(dir) {\r\n    // Wrap code that reassigns argument variables in a separate function than\r\n    // the one that accesses `arguments.length` to avoid a perf hit. (#1991)\r\n    var reducer = function(obj, iteratee, memo, initial) {\r\n      var keys = !isArrayLike(obj) && _.keys(obj),\r\n          length = (keys || obj).length,\r\n          index = dir > 0 ? 0 : length - 1;\r\n      if (!initial) {\r\n        memo = obj[keys ? keys[index] : index];\r\n        index += dir;\r\n      }\r\n      for (; index >= 0 && index < length; index += dir) {\r\n        var currentKey = keys ? keys[index] : index;\r\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\r\n      }\r\n      return memo;\r\n    };\r\n\r\n    return function(obj, iteratee, memo, context) {\r\n      var initial = arguments.length >= 3;\r\n      return reducer(obj, optimizeCb(iteratee, context, 4), memo, initial);\r\n    };\r\n  };\r\n\r\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\r\n  // or `foldl`.\r\n  _.reduce = _.foldl = _.inject = createReduce(1);\r\n\r\n  // The right-associative version of reduce, also known as `foldr`.\r\n  _.reduceRight = _.foldr = createReduce(-1);\r\n\r\n  // Return the first value which passes a truth test. Aliased as `detect`.\r\n  _.find = _.detect = function(obj, predicate, context) {\r\n    var keyFinder = isArrayLike(obj) ? _.findIndex : _.findKey;\r\n    var key = keyFinder(obj, predicate, context);\r\n    if (key !== void 0 && key !== -1) return obj[key];\r\n  };\r\n\r\n  // Return all the elements that pass a truth test.\r\n  // Aliased as `select`.\r\n  _.filter = _.select = function(obj, predicate, context) {\r\n    var results = [];\r\n    predicate = cb(predicate, context);\r\n    _.each(obj, function(value, index, list) {\r\n      if (predicate(value, index, list)) results.push(value);\r\n    });\r\n    return results;\r\n  };\r\n\r\n  // Return all the elements for which a truth test fails.\r\n  _.reject = function(obj, predicate, context) {\r\n    return _.filter(obj, _.negate(cb(predicate)), context);\r\n  };\r\n\r\n  // Determine whether all of the elements match a truth test.\r\n  // Aliased as `all`.\r\n  _.every = _.all = function(obj, predicate, context) {\r\n    predicate = cb(predicate, context);\r\n    var keys = !isArrayLike(obj) && _.keys(obj),\r\n        length = (keys || obj).length;\r\n    for (var index = 0; index < length; index++) {\r\n      var currentKey = keys ? keys[index] : index;\r\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  // Determine if at least one element in the object matches a truth test.\r\n  // Aliased as `any`.\r\n  _.some = _.any = function(obj, predicate, context) {\r\n    predicate = cb(predicate, context);\r\n    var keys = !isArrayLike(obj) && _.keys(obj),\r\n        length = (keys || obj).length;\r\n    for (var index = 0; index < length; index++) {\r\n      var currentKey = keys ? keys[index] : index;\r\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  // Determine if the array or object contains a given item (using `===`).\r\n  // Aliased as `includes` and `include`.\r\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\r\n    if (!isArrayLike(obj)) obj = _.values(obj);\r\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\r\n    return _.indexOf(obj, item, fromIndex) >= 0;\r\n  };\r\n\r\n  // Invoke a method (with arguments) on every item in a collection.\r\n  _.invoke = restArguments(function(obj, path, args) {\r\n    var contextPath, func;\r\n    if (_.isFunction(path)) {\r\n      func = path;\r\n    } else if (_.isArray(path)) {\r\n      contextPath = path.slice(0, -1);\r\n      path = path[path.length - 1];\r\n    }\r\n    return _.map(obj, function(context) {\r\n      var method = func;\r\n      if (!method) {\r\n        if (contextPath && contextPath.length) {\r\n          context = deepGet(context, contextPath);\r\n        }\r\n        if (context == null) return void 0;\r\n        method = context[path];\r\n      }\r\n      return method == null ? method : method.apply(context, args);\r\n    });\r\n  });\r\n\r\n  // Convenience version of a common use case of `map`: fetching a property.\r\n  _.pluck = function(obj, key) {\r\n    return _.map(obj, _.property(key));\r\n  };\r\n\r\n  // Convenience version of a common use case of `filter`: selecting only objects\r\n  // containing specific `key:value` pairs.\r\n  _.where = function(obj, attrs) {\r\n    return _.filter(obj, _.matcher(attrs));\r\n  };\r\n\r\n  // Convenience version of a common use case of `find`: getting the first object\r\n  // containing specific `key:value` pairs.\r\n  _.findWhere = function(obj, attrs) {\r\n    return _.find(obj, _.matcher(attrs));\r\n  };\r\n\r\n  // Return the maximum element (or element-based computation).\r\n  _.max = function(obj, iteratee, context) {\r\n    var result = -Infinity, lastComputed = -Infinity,\r\n        value, computed;\r\n    if (iteratee == null || typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null) {\r\n      obj = isArrayLike(obj) ? obj : _.values(obj);\r\n      for (var i = 0, length = obj.length; i < length; i++) {\r\n        value = obj[i];\r\n        if (value != null && value > result) {\r\n          result = value;\r\n        }\r\n      }\r\n    } else {\r\n      iteratee = cb(iteratee, context);\r\n      _.each(obj, function(v, index, list) {\r\n        computed = iteratee(v, index, list);\r\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\r\n          result = v;\r\n          lastComputed = computed;\r\n        }\r\n      });\r\n    }\r\n    return result;\r\n  };\r\n\r\n  // Return the minimum element (or element-based computation).\r\n  _.min = function(obj, iteratee, context) {\r\n    var result = Infinity, lastComputed = Infinity,\r\n        value, computed;\r\n    if (iteratee == null || typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null) {\r\n      obj = isArrayLike(obj) ? obj : _.values(obj);\r\n      for (var i = 0, length = obj.length; i < length; i++) {\r\n        value = obj[i];\r\n        if (value != null && value < result) {\r\n          result = value;\r\n        }\r\n      }\r\n    } else {\r\n      iteratee = cb(iteratee, context);\r\n      _.each(obj, function(v, index, list) {\r\n        computed = iteratee(v, index, list);\r\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\r\n          result = v;\r\n          lastComputed = computed;\r\n        }\r\n      });\r\n    }\r\n    return result;\r\n  };\r\n\r\n  // Shuffle a collection.\r\n  _.shuffle = function(obj) {\r\n    return _.sample(obj, Infinity);\r\n  };\r\n\r\n  // Sample **n** random values from a collection using the modern version of the\r\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\r\n  // If **n** is not specified, returns a single random element.\r\n  // The internal `guard` argument allows it to work with `map`.\r\n  _.sample = function(obj, n, guard) {\r\n    if (n == null || guard) {\r\n      if (!isArrayLike(obj)) obj = _.values(obj);\r\n      return obj[_.random(obj.length - 1)];\r\n    }\r\n    var sample = isArrayLike(obj) ? _.clone(obj) : _.values(obj);\r\n    var length = getLength(sample);\r\n    n = Math.max(Math.min(n, length), 0);\r\n    var last = length - 1;\r\n    for (var index = 0; index < n; index++) {\r\n      var rand = _.random(index, last);\r\n      var temp = sample[index];\r\n      sample[index] = sample[rand];\r\n      sample[rand] = temp;\r\n    }\r\n    return sample.slice(0, n);\r\n  };\r\n\r\n  // Sort the object's values by a criterion produced by an iteratee.\r\n  _.sortBy = function(obj, iteratee, context) {\r\n    var index = 0;\r\n    iteratee = cb(iteratee, context);\r\n    return _.pluck(_.map(obj, function(value, key, list) {\r\n      return {\r\n        value: value,\r\n        index: index++,\r\n        criteria: iteratee(value, key, list)\r\n      };\r\n    }).sort(function(left, right) {\r\n      var a = left.criteria;\r\n      var b = right.criteria;\r\n      if (a !== b) {\r\n        if (a > b || a === void 0) return 1;\r\n        if (a < b || b === void 0) return -1;\r\n      }\r\n      return left.index - right.index;\r\n    }), 'value');\r\n  };\r\n\r\n  // An internal function used for aggregate \"group by\" operations.\r\n  var group = function(behavior, partition) {\r\n    return function(obj, iteratee, context) {\r\n      var result = partition ? [[], []] : {};\r\n      iteratee = cb(iteratee, context);\r\n      _.each(obj, function(value, index) {\r\n        var key = iteratee(value, index, obj);\r\n        behavior(result, value, key);\r\n      });\r\n      return result;\r\n    };\r\n  };\r\n\r\n  // Groups the object's values by a criterion. Pass either a string attribute\r\n  // to group by, or a function that returns the criterion.\r\n  _.groupBy = group(function(result, value, key) {\r\n    if (has(result, key)) result[key].push(value); else result[key] = [value];\r\n  });\r\n\r\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\r\n  // when you know that your index values will be unique.\r\n  _.indexBy = group(function(result, value, key) {\r\n    result[key] = value;\r\n  });\r\n\r\n  // Counts instances of an object that group by a certain criterion. Pass\r\n  // either a string attribute to count by, or a function that returns the\r\n  // criterion.\r\n  _.countBy = group(function(result, value, key) {\r\n    if (has(result, key)) result[key]++; else result[key] = 1;\r\n  });\r\n\r\n  var reStrSymbol = /[^\\ud800-\\udfff]|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff]/g;\r\n  // Safely create a real, live array from anything iterable.\r\n  _.toArray = function(obj) {\r\n    if (!obj) return [];\r\n    if (_.isArray(obj)) return slice.call(obj);\r\n    if (_.isString(obj)) {\r\n      // Keep surrogate pair characters together\r\n      return obj.match(reStrSymbol);\r\n    }\r\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\r\n    return _.values(obj);\r\n  };\r\n\r\n  // Return the number of elements in an object.\r\n  _.size = function(obj) {\r\n    if (obj == null) return 0;\r\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\r\n  };\r\n\r\n  // Split a collection into two arrays: one whose elements all satisfy the given\r\n  // predicate, and one whose elements all do not satisfy the predicate.\r\n  _.partition = group(function(result, value, pass) {\r\n    result[pass ? 0 : 1].push(value);\r\n  }, true);\r\n\r\n  // Array Functions\r\n  // ---------------\r\n\r\n  // Get the first element of an array. Passing **n** will return the first N\r\n  // values in the array. Aliased as `head` and `take`. The **guard** check\r\n  // allows it to work with `_.map`.\r\n  _.first = _.head = _.take = function(array, n, guard) {\r\n    if (array == null || array.length < 1) return n == null ? void 0 : [];\r\n    if (n == null || guard) return array[0];\r\n    return _.initial(array, array.length - n);\r\n  };\r\n\r\n  // Returns everything but the last entry of the array. Especially useful on\r\n  // the arguments object. Passing **n** will return all the values in\r\n  // the array, excluding the last N.\r\n  _.initial = function(array, n, guard) {\r\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\r\n  };\r\n\r\n  // Get the last element of an array. Passing **n** will return the last N\r\n  // values in the array.\r\n  _.last = function(array, n, guard) {\r\n    if (array == null || array.length < 1) return n == null ? void 0 : [];\r\n    if (n == null || guard) return array[array.length - 1];\r\n    return _.rest(array, Math.max(0, array.length - n));\r\n  };\r\n\r\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\r\n  // Especially useful on the arguments object. Passing an **n** will return\r\n  // the rest N values in the array.\r\n  _.rest = _.tail = _.drop = function(array, n, guard) {\r\n    return slice.call(array, n == null || guard ? 1 : n);\r\n  };\r\n\r\n  // Trim out all falsy values from an array.\r\n  _.compact = function(array) {\r\n    return _.filter(array, Boolean);\r\n  };\r\n\r\n  // Internal implementation of a recursive `flatten` function.\r\n  var flatten = function(input, shallow, strict, output) {\r\n    output = output || [];\r\n    var idx = output.length;\r\n    for (var i = 0, length = getLength(input); i < length; i++) {\r\n      var value = input[i];\r\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\r\n        // Flatten current level of array or arguments object.\r\n        if (shallow) {\r\n          var j = 0, len = value.length;\r\n          while (j < len) output[idx++] = value[j++];\r\n        } else {\r\n          flatten(value, shallow, strict, output);\r\n          idx = output.length;\r\n        }\r\n      } else if (!strict) {\r\n        output[idx++] = value;\r\n      }\r\n    }\r\n    return output;\r\n  };\r\n\r\n  // Flatten out an array, either recursively (by default), or just one level.\r\n  _.flatten = function(array, shallow) {\r\n    return flatten(array, shallow, false);\r\n  };\r\n\r\n  // Return a version of the array that does not contain the specified value(s).\r\n  _.without = restArguments(function(array, otherArrays) {\r\n    return _.difference(array, otherArrays);\r\n  });\r\n\r\n  // Produce a duplicate-free version of the array. If the array has already\r\n  // been sorted, you have the option of using a faster algorithm.\r\n  // The faster algorithm will not work with an iteratee if the iteratee\r\n  // is not a one-to-one function, so providing an iteratee will disable\r\n  // the faster algorithm.\r\n  // Aliased as `unique`.\r\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\r\n    if (!_.isBoolean(isSorted)) {\r\n      context = iteratee;\r\n      iteratee = isSorted;\r\n      isSorted = false;\r\n    }\r\n    if (iteratee != null) iteratee = cb(iteratee, context);\r\n    var result = [];\r\n    var seen = [];\r\n    for (var i = 0, length = getLength(array); i < length; i++) {\r\n      var value = array[i],\r\n          computed = iteratee ? iteratee(value, i, array) : value;\r\n      if (isSorted && !iteratee) {\r\n        if (!i || seen !== computed) result.push(value);\r\n        seen = computed;\r\n      } else if (iteratee) {\r\n        if (!_.contains(seen, computed)) {\r\n          seen.push(computed);\r\n          result.push(value);\r\n        }\r\n      } else if (!_.contains(result, value)) {\r\n        result.push(value);\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n\r\n  // Produce an array that contains the union: each distinct element from all of\r\n  // the passed-in arrays.\r\n  _.union = restArguments(function(arrays) {\r\n    return _.uniq(flatten(arrays, true, true));\r\n  });\r\n\r\n  // Produce an array that contains every item shared between all the\r\n  // passed-in arrays.\r\n  _.intersection = function(array) {\r\n    var result = [];\r\n    var argsLength = arguments.length;\r\n    for (var i = 0, length = getLength(array); i < length; i++) {\r\n      var item = array[i];\r\n      if (_.contains(result, item)) continue;\r\n      var j;\r\n      for (j = 1; j < argsLength; j++) {\r\n        if (!_.contains(arguments[j], item)) break;\r\n      }\r\n      if (j === argsLength) result.push(item);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  // Take the difference between one array and a number of other arrays.\r\n  // Only the elements present in just the first array will remain.\r\n  _.difference = restArguments(function(array, rest) {\r\n    rest = flatten(rest, true, true);\r\n    return _.filter(array, function(value){\r\n      return !_.contains(rest, value);\r\n    });\r\n  });\r\n\r\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\r\n  // each array's elements on shared indices.\r\n  _.unzip = function(array) {\r\n    var length = array && _.max(array, getLength).length || 0;\r\n    var result = Array(length);\r\n\r\n    for (var index = 0; index < length; index++) {\r\n      result[index] = _.pluck(array, index);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  // Zip together multiple lists into a single array -- elements that share\r\n  // an index go together.\r\n  _.zip = restArguments(_.unzip);\r\n\r\n  // Converts lists into objects. Pass either a single array of `[key, value]`\r\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\r\n  // the corresponding values. Passing by pairs is the reverse of _.pairs.\r\n  _.object = function(list, values) {\r\n    var result = {};\r\n    for (var i = 0, length = getLength(list); i < length; i++) {\r\n      if (values) {\r\n        result[list[i]] = values[i];\r\n      } else {\r\n        result[list[i][0]] = list[i][1];\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n\r\n  // Generator function to create the findIndex and findLastIndex functions.\r\n  var createPredicateIndexFinder = function(dir) {\r\n    return function(array, predicate, context) {\r\n      predicate = cb(predicate, context);\r\n      var length = getLength(array);\r\n      var index = dir > 0 ? 0 : length - 1;\r\n      for (; index >= 0 && index < length; index += dir) {\r\n        if (predicate(array[index], index, array)) return index;\r\n      }\r\n      return -1;\r\n    };\r\n  };\r\n\r\n  // Returns the first index on an array-like that passes a predicate test.\r\n  _.findIndex = createPredicateIndexFinder(1);\r\n  _.findLastIndex = createPredicateIndexFinder(-1);\r\n\r\n  // Use a comparator function to figure out the smallest index at which\r\n  // an object should be inserted so as to maintain order. Uses binary search.\r\n  _.sortedIndex = function(array, obj, iteratee, context) {\r\n    iteratee = cb(iteratee, context, 1);\r\n    var value = iteratee(obj);\r\n    var low = 0, high = getLength(array);\r\n    while (low < high) {\r\n      var mid = Math.floor((low + high) / 2);\r\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\r\n    }\r\n    return low;\r\n  };\r\n\r\n  // Generator function to create the indexOf and lastIndexOf functions.\r\n  var createIndexFinder = function(dir, predicateFind, sortedIndex) {\r\n    return function(array, item, idx) {\r\n      var i = 0, length = getLength(array);\r\n      if (typeof idx == 'number') {\r\n        if (dir > 0) {\r\n          i = idx >= 0 ? idx : Math.max(idx + length, i);\r\n        } else {\r\n          length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\r\n        }\r\n      } else if (sortedIndex && idx && length) {\r\n        idx = sortedIndex(array, item);\r\n        return array[idx] === item ? idx : -1;\r\n      }\r\n      if (item !== item) {\r\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\r\n        return idx >= 0 ? idx + i : -1;\r\n      }\r\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\r\n        if (array[idx] === item) return idx;\r\n      }\r\n      return -1;\r\n    };\r\n  };\r\n\r\n  // Return the position of the first occurrence of an item in an array,\r\n  // or -1 if the item is not included in the array.\r\n  // If the array is large and already in sort order, pass `true`\r\n  // for **isSorted** to use binary search.\r\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\r\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\r\n\r\n  // Generate an integer Array containing an arithmetic progression. A port of\r\n  // the native Python `range()` function. See\r\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\r\n  _.range = function(start, stop, step) {\r\n    if (stop == null) {\r\n      stop = start || 0;\r\n      start = 0;\r\n    }\r\n    if (!step) {\r\n      step = stop < start ? -1 : 1;\r\n    }\r\n\r\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\r\n    var range = Array(length);\r\n\r\n    for (var idx = 0; idx < length; idx++, start += step) {\r\n      range[idx] = start;\r\n    }\r\n\r\n    return range;\r\n  };\r\n\r\n  // Chunk a single array into multiple arrays, each containing `count` or fewer\r\n  // items.\r\n  _.chunk = function(array, count) {\r\n    if (count == null || count < 1) return [];\r\n    var result = [];\r\n    var i = 0, length = array.length;\r\n    while (i < length) {\r\n      result.push(slice.call(array, i, i += count));\r\n    }\r\n    return result;\r\n  };\r\n\r\n  // Function (ahem) Functions\r\n  // ------------------\r\n\r\n  // Determines whether to execute a function as a constructor\r\n  // or a normal function with the provided arguments.\r\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\r\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\r\n    var self = baseCreate(sourceFunc.prototype);\r\n    var result = sourceFunc.apply(self, args);\r\n    if (_.isObject(result)) return result;\r\n    return self;\r\n  };\r\n\r\n  // Create a function bound to a given object (assigning `this`, and arguments,\r\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\r\n  // available.\r\n  _.bind = restArguments(function(func, context, args) {\r\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\r\n    var bound = restArguments(function(callArgs) {\r\n      return executeBound(func, bound, context, this, args.concat(callArgs));\r\n    });\r\n    return bound;\r\n  });\r\n\r\n  // Partially apply a function by creating a version that has had some of its\r\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\r\n  // as a placeholder by default, allowing any combination of arguments to be\r\n  // pre-filled. Set `_.partial.placeholder` for a custom placeholder argument.\r\n  _.partial = restArguments(function(func, boundArgs) {\r\n    var placeholder = _.partial.placeholder;\r\n    var bound = function() {\r\n      var position = 0, length = boundArgs.length;\r\n      var args = Array(length);\r\n      for (var i = 0; i < length; i++) {\r\n        args[i] = boundArgs[i] === placeholder ? arguments[position++] : boundArgs[i];\r\n      }\r\n      while (position < arguments.length) args.push(arguments[position++]);\r\n      return executeBound(func, bound, this, this, args);\r\n    };\r\n    return bound;\r\n  });\r\n\r\n  _.partial.placeholder = _;\r\n\r\n  // Bind a number of an object's methods to that object. Remaining arguments\r\n  // are the method names to be bound. Useful for ensuring that all callbacks\r\n  // defined on an object belong to it.\r\n  _.bindAll = restArguments(function(obj, keys) {\r\n    keys = flatten(keys, false, false);\r\n    var index = keys.length;\r\n    if (index < 1) throw new Error('bindAll must be passed function names');\r\n    while (index--) {\r\n      var key = keys[index];\r\n      obj[key] = _.bind(obj[key], obj);\r\n    }\r\n  });\r\n\r\n  // Memoize an expensive function by storing its results.\r\n  _.memoize = function(func, hasher) {\r\n    var memoize = function(key) {\r\n      var cache = memoize.cache;\r\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\r\n      if (!has(cache, address)) cache[address] = func.apply(this, arguments);\r\n      return cache[address];\r\n    };\r\n    memoize.cache = {};\r\n    return memoize;\r\n  };\r\n\r\n  // Delays a function for the given number of milliseconds, and then calls\r\n  // it with the arguments supplied.\r\n  _.delay = restArguments(function(func, wait, args) {\r\n    return setTimeout(function() {\r\n      return func.apply(null, args);\r\n    }, wait);\r\n  });\r\n\r\n  // Defers a function, scheduling it to run after the current call stack has\r\n  // cleared.\r\n  _.defer = _.partial(_.delay, _, 1);\r\n\r\n  // Returns a function, that, when invoked, will only be triggered at most once\r\n  // during a given window of time. Normally, the throttled function will run\r\n  // as much as it can, without ever going more than once per `wait` duration;\r\n  // but if you'd like to disable the execution on the leading edge, pass\r\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\r\n  _.throttle = function(func, wait, options) {\r\n    var timeout, context, args, result;\r\n    var previous = 0;\r\n    if (!options) options = {};\r\n\r\n    var later = function() {\r\n      previous = options.leading === false ? 0 : _.now();\r\n      timeout = null;\r\n      result = func.apply(context, args);\r\n      if (!timeout) context = args = null;\r\n    };\r\n\r\n    var throttled = function() {\r\n      var now = _.now();\r\n      if (!previous && options.leading === false) previous = now;\r\n      var remaining = wait - (now - previous);\r\n      context = this;\r\n      args = arguments;\r\n      if (remaining <= 0 || remaining > wait) {\r\n        if (timeout) {\r\n          clearTimeout(timeout);\r\n          timeout = null;\r\n        }\r\n        previous = now;\r\n        result = func.apply(context, args);\r\n        if (!timeout) context = args = null;\r\n      } else if (!timeout && options.trailing !== false) {\r\n        timeout = setTimeout(later, remaining);\r\n      }\r\n      return result;\r\n    };\r\n\r\n    throttled.cancel = function() {\r\n      clearTimeout(timeout);\r\n      previous = 0;\r\n      timeout = context = args = null;\r\n    };\r\n\r\n    return throttled;\r\n  };\r\n\r\n  // Returns a function, that, as long as it continues to be invoked, will not\r\n  // be triggered. The function will be called after it stops being called for\r\n  // N milliseconds. If `immediate` is passed, trigger the function on the\r\n  // leading edge, instead of the trailing.\r\n  _.debounce = function(func, wait, immediate) {\r\n    var timeout, result;\r\n\r\n    var later = function(context, args) {\r\n      timeout = null;\r\n      if (args) result = func.apply(context, args);\r\n    };\r\n\r\n    var debounced = restArguments(function(args) {\r\n      if (timeout) clearTimeout(timeout);\r\n      if (immediate) {\r\n        var callNow = !timeout;\r\n        timeout = setTimeout(later, wait);\r\n        if (callNow) result = func.apply(this, args);\r\n      } else {\r\n        timeout = _.delay(later, wait, this, args);\r\n      }\r\n\r\n      return result;\r\n    });\r\n\r\n    debounced.cancel = function() {\r\n      clearTimeout(timeout);\r\n      timeout = null;\r\n    };\r\n\r\n    return debounced;\r\n  };\r\n\r\n  // Returns the first function passed as an argument to the second,\r\n  // allowing you to adjust arguments, run code before and after, and\r\n  // conditionally execute the original function.\r\n  _.wrap = function(func, wrapper) {\r\n    return _.partial(wrapper, func);\r\n  };\r\n\r\n  // Returns a negated version of the passed-in predicate.\r\n  _.negate = function(predicate) {\r\n    return function() {\r\n      return !predicate.apply(this, arguments);\r\n    };\r\n  };\r\n\r\n  // Returns a function that is the composition of a list of functions, each\r\n  // consuming the return value of the function that follows.\r\n  _.compose = function() {\r\n    var args = arguments;\r\n    var start = args.length - 1;\r\n    return function() {\r\n      var i = start;\r\n      var result = args[start].apply(this, arguments);\r\n      while (i--) result = args[i].call(this, result);\r\n      return result;\r\n    };\r\n  };\r\n\r\n  // Returns a function that will only be executed on and after the Nth call.\r\n  _.after = function(times, func) {\r\n    return function() {\r\n      if (--times < 1) {\r\n        return func.apply(this, arguments);\r\n      }\r\n    };\r\n  };\r\n\r\n  // Returns a function that will only be executed up to (but not including) the Nth call.\r\n  _.before = function(times, func) {\r\n    var memo;\r\n    return function() {\r\n      if (--times > 0) {\r\n        memo = func.apply(this, arguments);\r\n      }\r\n      if (times <= 1) func = null;\r\n      return memo;\r\n    };\r\n  };\r\n\r\n  // Returns a function that will be executed at most one time, no matter how\r\n  // often you call it. Useful for lazy initialization.\r\n  _.once = _.partial(_.before, 2);\r\n\r\n  _.restArguments = restArguments;\r\n\r\n  // Object Functions\r\n  // ----------------\r\n\r\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\r\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\r\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\r\n    'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\r\n\r\n  var collectNonEnumProps = function(obj, keys) {\r\n    var nonEnumIdx = nonEnumerableProps.length;\r\n    var constructor = obj.constructor;\r\n    var proto = _.isFunction(constructor) && constructor.prototype || ObjProto;\r\n\r\n    // Constructor is a special case.\r\n    var prop = 'constructor';\r\n    if (has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\r\n\r\n    while (nonEnumIdx--) {\r\n      prop = nonEnumerableProps[nonEnumIdx];\r\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\r\n        keys.push(prop);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Retrieve the names of an object's own properties.\r\n  // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n  _.keys = function(obj) {\r\n    if (!_.isObject(obj)) return [];\r\n    if (nativeKeys) return nativeKeys(obj);\r\n    var keys = [];\r\n    for (var key in obj) if (has(obj, key)) keys.push(key);\r\n    // Ahem, IE < 9.\r\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\r\n    return keys;\r\n  };\r\n\r\n  // Retrieve all the property names of an object.\r\n  _.allKeys = function(obj) {\r\n    if (!_.isObject(obj)) return [];\r\n    var keys = [];\r\n    for (var key in obj) keys.push(key);\r\n    // Ahem, IE < 9.\r\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\r\n    return keys;\r\n  };\r\n\r\n  // Retrieve the values of an object's properties.\r\n  _.values = function(obj) {\r\n    var keys = _.keys(obj);\r\n    var length = keys.length;\r\n    var values = Array(length);\r\n    for (var i = 0; i < length; i++) {\r\n      values[i] = obj[keys[i]];\r\n    }\r\n    return values;\r\n  };\r\n\r\n  // Returns the results of applying the iteratee to each element of the object.\r\n  // In contrast to _.map it returns an object.\r\n  _.mapObject = function(obj, iteratee, context) {\r\n    iteratee = cb(iteratee, context);\r\n    var keys = _.keys(obj),\r\n        length = keys.length,\r\n        results = {};\r\n    for (var index = 0; index < length; index++) {\r\n      var currentKey = keys[index];\r\n      results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\r\n    }\r\n    return results;\r\n  };\r\n\r\n  // Convert an object into a list of `[key, value]` pairs.\r\n  // The opposite of _.object.\r\n  _.pairs = function(obj) {\r\n    var keys = _.keys(obj);\r\n    var length = keys.length;\r\n    var pairs = Array(length);\r\n    for (var i = 0; i < length; i++) {\r\n      pairs[i] = [keys[i], obj[keys[i]]];\r\n    }\r\n    return pairs;\r\n  };\r\n\r\n  // Invert the keys and values of an object. The values must be serializable.\r\n  _.invert = function(obj) {\r\n    var result = {};\r\n    var keys = _.keys(obj);\r\n    for (var i = 0, length = keys.length; i < length; i++) {\r\n      result[obj[keys[i]]] = keys[i];\r\n    }\r\n    return result;\r\n  };\r\n\r\n  // Return a sorted list of the function names available on the object.\r\n  // Aliased as `methods`.\r\n  _.functions = _.methods = function(obj) {\r\n    var names = [];\r\n    for (var key in obj) {\r\n      if (_.isFunction(obj[key])) names.push(key);\r\n    }\r\n    return names.sort();\r\n  };\r\n\r\n  // An internal function for creating assigner functions.\r\n  var createAssigner = function(keysFunc, defaults) {\r\n    return function(obj) {\r\n      var length = arguments.length;\r\n      if (defaults) obj = Object(obj);\r\n      if (length < 2 || obj == null) return obj;\r\n      for (var index = 1; index < length; index++) {\r\n        var source = arguments[index],\r\n            keys = keysFunc(source),\r\n            l = keys.length;\r\n        for (var i = 0; i < l; i++) {\r\n          var key = keys[i];\r\n          if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n        }\r\n      }\r\n      return obj;\r\n    };\r\n  };\r\n\r\n  // Extend a given object with all the properties in passed-in object(s).\r\n  _.extend = createAssigner(_.allKeys);\r\n\r\n  // Assigns a given object with all the own properties in the passed-in object(s).\r\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\r\n  _.extendOwn = _.assign = createAssigner(_.keys);\r\n\r\n  // Returns the first key on an object that passes a predicate test.\r\n  _.findKey = function(obj, predicate, context) {\r\n    predicate = cb(predicate, context);\r\n    var keys = _.keys(obj), key;\r\n    for (var i = 0, length = keys.length; i < length; i++) {\r\n      key = keys[i];\r\n      if (predicate(obj[key], key, obj)) return key;\r\n    }\r\n  };\r\n\r\n  // Internal pick helper function to determine if `obj` has key `key`.\r\n  var keyInObj = function(value, key, obj) {\r\n    return key in obj;\r\n  };\r\n\r\n  // Return a copy of the object only containing the whitelisted properties.\r\n  _.pick = restArguments(function(obj, keys) {\r\n    var result = {}, iteratee = keys[0];\r\n    if (obj == null) return result;\r\n    if (_.isFunction(iteratee)) {\r\n      if (keys.length > 1) iteratee = optimizeCb(iteratee, keys[1]);\r\n      keys = _.allKeys(obj);\r\n    } else {\r\n      iteratee = keyInObj;\r\n      keys = flatten(keys, false, false);\r\n      obj = Object(obj);\r\n    }\r\n    for (var i = 0, length = keys.length; i < length; i++) {\r\n      var key = keys[i];\r\n      var value = obj[key];\r\n      if (iteratee(value, key, obj)) result[key] = value;\r\n    }\r\n    return result;\r\n  });\r\n\r\n  // Return a copy of the object without the blacklisted properties.\r\n  _.omit = restArguments(function(obj, keys) {\r\n    var iteratee = keys[0], context;\r\n    if (_.isFunction(iteratee)) {\r\n      iteratee = _.negate(iteratee);\r\n      if (keys.length > 1) context = keys[1];\r\n    } else {\r\n      keys = _.map(flatten(keys, false, false), String);\r\n      iteratee = function(value, key) {\r\n        return !_.contains(keys, key);\r\n      };\r\n    }\r\n    return _.pick(obj, iteratee, context);\r\n  });\r\n\r\n  // Fill in a given object with default properties.\r\n  _.defaults = createAssigner(_.allKeys, true);\r\n\r\n  // Creates an object that inherits from the given prototype object.\r\n  // If additional properties are provided then they will be added to the\r\n  // created object.\r\n  _.create = function(prototype, props) {\r\n    var result = baseCreate(prototype);\r\n    if (props) _.extendOwn(result, props);\r\n    return result;\r\n  };\r\n\r\n  // Create a (shallow-cloned) duplicate of an object.\r\n  _.clone = function(obj) {\r\n    if (!_.isObject(obj)) return obj;\r\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\r\n  };\r\n\r\n  // Invokes interceptor with the obj, and then returns obj.\r\n  // The primary purpose of this method is to \"tap into\" a method chain, in\r\n  // order to perform operations on intermediate results within the chain.\r\n  _.tap = function(obj, interceptor) {\r\n    interceptor(obj);\r\n    return obj;\r\n  };\r\n\r\n  // Returns whether an object has a given set of `key:value` pairs.\r\n  _.isMatch = function(object, attrs) {\r\n    var keys = _.keys(attrs), length = keys.length;\r\n    if (object == null) return !length;\r\n    var obj = Object(object);\r\n    for (var i = 0; i < length; i++) {\r\n      var key = keys[i];\r\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n\r\n  // Internal recursive comparison function for `isEqual`.\r\n  var eq, deepEq;\r\n  eq = function(a, b, aStack, bStack) {\r\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n    // `null` or `undefined` only equal to itself (strict comparison).\r\n    if (a == null || b == null) return false;\r\n    // `NaN`s are equivalent, but non-reflexive.\r\n    if (a !== a) return b !== b;\r\n    // Exhaust primitive checks\r\n    var type = typeof a;\r\n    if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n    return deepEq(a, b, aStack, bStack);\r\n  };\r\n\r\n  // Internal recursive comparison function for `isEqual`.\r\n  deepEq = function(a, b, aStack, bStack) {\r\n    // Unwrap any wrapped objects.\r\n    if (a instanceof _) a = a._wrapped;\r\n    if (b instanceof _) b = b._wrapped;\r\n    // Compare `[[Class]]` names.\r\n    var className = toString.call(a);\r\n    if (className !== toString.call(b)) return false;\r\n    switch (className) {\r\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n      case '[object RegExp]':\r\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n      case '[object String]':\r\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n        // equivalent to `new String(\"5\")`.\r\n        return '' + a === '' + b;\r\n      case '[object Number]':\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        // Object(NaN) is equivalent to NaN.\r\n        if (+a !== +a) return +b !== +b;\r\n        // An `egal` comparison is performed for other numeric values.\r\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n      case '[object Date]':\r\n      case '[object Boolean]':\r\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n        // millisecond representations. Note that invalid dates with millisecond representations\r\n        // of `NaN` are not equivalent.\r\n        return +a === +b;\r\n      case '[object Symbol]':\r\n        return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n    }\r\n\r\n    var areArrays = className === '[object Array]';\r\n    if (!areArrays) {\r\n      if (typeof a != 'object' || typeof b != 'object') return false;\r\n\r\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n      // from different frames are.\r\n      var aCtor = a.constructor, bCtor = b.constructor;\r\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n        return false;\r\n      }\r\n    }\r\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n    // Initializing stack of traversed objects.\r\n    // It's done here since we only need them for objects and arrays comparison.\r\n    aStack = aStack || [];\r\n    bStack = bStack || [];\r\n    var length = aStack.length;\r\n    while (length--) {\r\n      // Linear search. Performance is inversely proportional to the number of\r\n      // unique nested structures.\r\n      if (aStack[length] === a) return bStack[length] === b;\r\n    }\r\n\r\n    // Add the first object to the stack of traversed objects.\r\n    aStack.push(a);\r\n    bStack.push(b);\r\n\r\n    // Recursively compare objects and arrays.\r\n    if (areArrays) {\r\n      // Compare array lengths to determine if a deep comparison is necessary.\r\n      length = a.length;\r\n      if (length !== b.length) return false;\r\n      // Deep compare the contents, ignoring non-numeric properties.\r\n      while (length--) {\r\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n      }\r\n    } else {\r\n      // Deep compare objects.\r\n      var keys = _.keys(a), key;\r\n      length = keys.length;\r\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n      if (_.keys(b).length !== length) return false;\r\n      while (length--) {\r\n        // Deep compare each member\r\n        key = keys[length];\r\n        if (!(has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\r\n      }\r\n    }\r\n    // Remove the first object from the stack of traversed objects.\r\n    aStack.pop();\r\n    bStack.pop();\r\n    return true;\r\n  };\r\n\r\n  // Perform a deep comparison to check if two objects are equal.\r\n  _.isEqual = function(a, b) {\r\n    return eq(a, b);\r\n  };\r\n\r\n  // Is a given array, string, or object empty?\r\n  // An \"empty\" object has no enumerable own-properties.\r\n  _.isEmpty = function(obj) {\r\n    if (obj == null) return true;\r\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\r\n    return _.keys(obj).length === 0;\r\n  };\r\n\r\n  // Is a given value a DOM element?\r\n  _.isElement = function(obj) {\r\n    return !!(obj && obj.nodeType === 1);\r\n  };\r\n\r\n  // Is a given value an array?\r\n  // Delegates to ECMA5's native Array.isArray\r\n  _.isArray = nativeIsArray || function(obj) {\r\n    return toString.call(obj) === '[object Array]';\r\n  };\r\n\r\n  // Is a given variable an object?\r\n  _.isObject = function(obj) {\r\n    var type = typeof obj;\r\n    return type === 'function' || type === 'object' && !!obj;\r\n  };\r\n\r\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError, isMap, isWeakMap, isSet, isWeakSet.\r\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error', 'Symbol', 'Map', 'WeakMap', 'Set', 'WeakSet'], function(name) {\r\n    _['is' + name] = function(obj) {\r\n      return toString.call(obj) === '[object ' + name + ']';\r\n    };\r\n  });\r\n\r\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\r\n  // there isn't any inspectable \"Arguments\" type.\r\n  if (!_.isArguments(arguments)) {\r\n    _.isArguments = function(obj) {\r\n      return has(obj, 'callee');\r\n    };\r\n  }\r\n\r\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\r\n  // IE 11 (#1621), Safari 8 (#1929), and PhantomJS (#2236).\r\n  var nodelist = root.document && root.document.childNodes;\r\n  if (typeof /./ != 'function' && typeof Int8Array != 'object' && typeof nodelist != 'function') {\r\n    _.isFunction = function(obj) {\r\n      return typeof obj == 'function' || false;\r\n    };\r\n  }\r\n\r\n  // Is a given object a finite number?\r\n  _.isFinite = function(obj) {\r\n    return !_.isSymbol(obj) && isFinite(obj) && !isNaN(parseFloat(obj));\r\n  };\r\n\r\n  // Is the given value `NaN`?\r\n  _.isNaN = function(obj) {\r\n    return _.isNumber(obj) && isNaN(obj);\r\n  };\r\n\r\n  // Is a given value a boolean?\r\n  _.isBoolean = function(obj) {\r\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\r\n  };\r\n\r\n  // Is a given value equal to null?\r\n  _.isNull = function(obj) {\r\n    return obj === null;\r\n  };\r\n\r\n  // Is a given variable undefined?\r\n  _.isUndefined = function(obj) {\r\n    return obj === void 0;\r\n  };\r\n\r\n  // Shortcut function for checking if an object has a given property directly\r\n  // on itself (in other words, not on a prototype).\r\n  _.has = function(obj, path) {\r\n    if (!_.isArray(path)) {\r\n      return has(obj, path);\r\n    }\r\n    var length = path.length;\r\n    for (var i = 0; i < length; i++) {\r\n      var key = path[i];\r\n      if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n        return false;\r\n      }\r\n      obj = obj[key];\r\n    }\r\n    return !!length;\r\n  };\r\n\r\n  // Utility Functions\r\n  // -----------------\r\n\r\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\r\n  // previous owner. Returns a reference to the Underscore object.\r\n  _.noConflict = function() {\r\n    root._ = previousUnderscore;\r\n    return this;\r\n  };\r\n\r\n  // Keep the identity function around for default iteratees.\r\n  _.identity = function(value) {\r\n    return value;\r\n  };\r\n\r\n  // Predicate-generating functions. Often useful outside of Underscore.\r\n  _.constant = function(value) {\r\n    return function() {\r\n      return value;\r\n    };\r\n  };\r\n\r\n  _.noop = function(){};\r\n\r\n  // Creates a function that, when passed an object, will traverse that object’s\r\n  // properties down the given `path`, specified as an array of keys or indexes.\r\n  _.property = function(path) {\r\n    if (!_.isArray(path)) {\r\n      return shallowProperty(path);\r\n    }\r\n    return function(obj) {\r\n      return deepGet(obj, path);\r\n    };\r\n  };\r\n\r\n  // Generates a function for a given object that returns a given property.\r\n  _.propertyOf = function(obj) {\r\n    if (obj == null) {\r\n      return function(){};\r\n    }\r\n    return function(path) {\r\n      return !_.isArray(path) ? obj[path] : deepGet(obj, path);\r\n    };\r\n  };\r\n\r\n  // Returns a predicate for checking whether an object has a given set of\r\n  // `key:value` pairs.\r\n  _.matcher = _.matches = function(attrs) {\r\n    attrs = _.extendOwn({}, attrs);\r\n    return function(obj) {\r\n      return _.isMatch(obj, attrs);\r\n    };\r\n  };\r\n\r\n  // Run a function **n** times.\r\n  _.times = function(n, iteratee, context) {\r\n    var accum = Array(Math.max(0, n));\r\n    iteratee = optimizeCb(iteratee, context, 1);\r\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\r\n    return accum;\r\n  };\r\n\r\n  // Return a random integer between min and max (inclusive).\r\n  _.random = function(min, max) {\r\n    if (max == null) {\r\n      max = min;\r\n      min = 0;\r\n    }\r\n    return min + Math.floor(Math.random() * (max - min + 1));\r\n  };\r\n\r\n  // A (possibly faster) way to get the current timestamp as an integer.\r\n  _.now = Date.now || function() {\r\n    return new Date().getTime();\r\n  };\r\n\r\n  // List of HTML entities for escaping.\r\n  var escapeMap = {\r\n    '&': '&amp;',\r\n    '<': '&lt;',\r\n    '>': '&gt;',\r\n    '\"': '&quot;',\r\n    \"'\": '&#x27;',\r\n    '`': '&#x60;'\r\n  };\r\n  var unescapeMap = _.invert(escapeMap);\r\n\r\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\r\n  var createEscaper = function(map) {\r\n    var escaper = function(match) {\r\n      return map[match];\r\n    };\r\n    // Regexes for identifying a key that needs to be escaped.\r\n    var source = '(?:' + _.keys(map).join('|') + ')';\r\n    var testRegexp = RegExp(source);\r\n    var replaceRegexp = RegExp(source, 'g');\r\n    return function(string) {\r\n      string = string == null ? '' : '' + string;\r\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\r\n    };\r\n  };\r\n  _.escape = createEscaper(escapeMap);\r\n  _.unescape = createEscaper(unescapeMap);\r\n\r\n  // Traverses the children of `obj` along `path`. If a child is a function, it\r\n  // is invoked with its parent as context. Returns the value of the final\r\n  // child, or `fallback` if any child is undefined.\r\n  _.result = function(obj, path, fallback) {\r\n    if (!_.isArray(path)) path = [path];\r\n    var length = path.length;\r\n    if (!length) {\r\n      return _.isFunction(fallback) ? fallback.call(obj) : fallback;\r\n    }\r\n    for (var i = 0; i < length; i++) {\r\n      var prop = obj == null ? void 0 : obj[path[i]];\r\n      if (prop === void 0) {\r\n        prop = fallback;\r\n        i = length; // Ensure we don't continue iterating.\r\n      }\r\n      obj = _.isFunction(prop) ? prop.call(obj) : prop;\r\n    }\r\n    return obj;\r\n  };\r\n\r\n  // Generate a unique integer id (unique within the entire client session).\r\n  // Useful for temporary DOM ids.\r\n  var idCounter = 0;\r\n  _.uniqueId = function(prefix) {\r\n    var id = ++idCounter + '';\r\n    return prefix ? prefix + id : id;\r\n  };\r\n\r\n  // By default, Underscore uses ERB-style template delimiters, change the\r\n  // following template settings to use alternative delimiters.\r\n  _.templateSettings = {\r\n    evaluate: /<%([\\s\\S]+?)%>/g,\r\n    interpolate: /<%=([\\s\\S]+?)%>/g,\r\n    escape: /<%-([\\s\\S]+?)%>/g\r\n  };\r\n\r\n  // When customizing `templateSettings`, if you don't want to define an\r\n  // interpolation, evaluation or escaping regex, we need one that is\r\n  // guaranteed not to match.\r\n  var noMatch = /(.)^/;\r\n\r\n  // Certain characters need to be escaped so that they can be put into a\r\n  // string literal.\r\n  var escapes = {\r\n    \"'\": \"'\",\r\n    '\\\\': '\\\\',\r\n    '\\r': 'r',\r\n    '\\n': 'n',\r\n    '\\u2028': 'u2028',\r\n    '\\u2029': 'u2029'\r\n  };\r\n\r\n  var escapeRegExp = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\r\n\r\n  var escapeChar = function(match) {\r\n    return '\\\\' + escapes[match];\r\n  };\r\n\r\n  // JavaScript micro-templating, similar to John Resig's implementation.\r\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\r\n  // and correctly escapes quotes within interpolated code.\r\n  // NB: `oldSettings` only exists for backwards compatibility.\r\n  _.template = function(text, settings, oldSettings) {\r\n    if (!settings && oldSettings) settings = oldSettings;\r\n    settings = _.defaults({}, settings, _.templateSettings);\r\n\r\n    // Combine delimiters into one regular expression via alternation.\r\n    var matcher = RegExp([\r\n      (settings.escape || noMatch).source,\r\n      (settings.interpolate || noMatch).source,\r\n      (settings.evaluate || noMatch).source\r\n    ].join('|') + '|$', 'g');\r\n\r\n    // Compile the template source, escaping string literals appropriately.\r\n    var index = 0;\r\n    var source = \"__p+='\";\r\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\r\n      source += text.slice(index, offset).replace(escapeRegExp, escapeChar);\r\n      index = offset + match.length;\r\n\r\n      if (escape) {\r\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\r\n      } else if (interpolate) {\r\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\r\n      } else if (evaluate) {\r\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\r\n      }\r\n\r\n      // Adobe VMs need the match returned to produce the correct offset.\r\n      return match;\r\n    });\r\n    source += \"';\\n\";\r\n\r\n    // If a variable is not specified, place data values in local scope.\r\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\r\n\r\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\r\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\r\n      source + 'return __p;\\n';\r\n\r\n    var render;\r\n    try {\r\n      render = new Function(settings.variable || 'obj', '_', source);\r\n    } catch (e) {\r\n      e.source = source;\r\n      throw e;\r\n    }\r\n\r\n    var template = function(data) {\r\n      return render.call(this, data, _);\r\n    };\r\n\r\n    // Provide the compiled source as a convenience for precompilation.\r\n    var argument = settings.variable || 'obj';\r\n    template.source = 'function(' + argument + '){\\n' + source + '}';\r\n\r\n    return template;\r\n  };\r\n\r\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\r\n  _.chain = function(obj) {\r\n    var instance = _(obj);\r\n    instance._chain = true;\r\n    return instance;\r\n  };\r\n\r\n  // OOP\r\n  // ---------------\r\n  // If Underscore is called as a function, it returns a wrapped object that\r\n  // can be used OO-style. This wrapper holds altered versions of all the\r\n  // underscore functions. Wrapped objects may be chained.\r\n\r\n  // Helper function to continue chaining intermediate results.\r\n  var chainResult = function(instance, obj) {\r\n    return instance._chain ? _(obj).chain() : obj;\r\n  };\r\n\r\n  // Add your own custom functions to the Underscore object.\r\n  _.mixin = function(obj) {\r\n    _.each(_.functions(obj), function(name) {\r\n      var func = _[name] = obj[name];\r\n      _.prototype[name] = function() {\r\n        var args = [this._wrapped];\r\n        push.apply(args, arguments);\r\n        return chainResult(this, func.apply(_, args));\r\n      };\r\n    });\r\n    return _;\r\n  };\r\n\r\n  // Add all of the Underscore functions to the wrapper object.\r\n  _.mixin(_);\r\n\r\n  // Add all mutator Array functions to the wrapper.\r\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\r\n    var method = ArrayProto[name];\r\n    _.prototype[name] = function() {\r\n      var obj = this._wrapped;\r\n      method.apply(obj, arguments);\r\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\r\n      return chainResult(this, obj);\r\n    };\r\n  });\r\n\r\n  // Add all accessor Array functions to the wrapper.\r\n  _.each(['concat', 'join', 'slice'], function(name) {\r\n    var method = ArrayProto[name];\r\n    _.prototype[name] = function() {\r\n      return chainResult(this, method.apply(this._wrapped, arguments));\r\n    };\r\n  });\r\n\r\n  // Extracts the result from a wrapped and chained object.\r\n  _.prototype.value = function() {\r\n    return this._wrapped;\r\n  };\r\n\r\n  // Provide unwrapping proxy for some methods used in engine operations\r\n  // such as arithmetic and JSON stringification.\r\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\r\n\r\n  _.prototype.toString = function() {\r\n    return String(this._wrapped);\r\n  };\r\n\r\n  return skylark.underscore = _;\r\n});\ndefine('skylark-backbone/helper',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-underscore/underscore\",\r\n  \"./backbone\"\r\n],function(langx,_,Backbone){\r\n\r\n  // Proxy Backbone class methods to Underscore functions, wrapping the model's\r\n  // `attributes` object or collection's `models` array behind the scenes.\r\n  //\r\n  // collection.filter(function(model) { return model.get('age') > 10 });\r\n  // collection.each(this.addView);\r\n  //\r\n  // `Function#apply` can be slow so we use the method's arg count, if we know it.\r\n  var addMethod = function(length, method, attribute) {\r\n    switch (length) {\r\n      case 1: return function() {\r\n        return _[method](this[attribute]);\r\n      };\r\n      case 2: return function(value) {\r\n        return _[method](this[attribute], value);\r\n      };\r\n      case 3: return function(iteratee, context) {\r\n        return _[method](this[attribute], cb(iteratee, this), context);\r\n      };\r\n      case 4: return function(iteratee, defaultVal, context) {\r\n        return _[method](this[attribute], cb(iteratee, this), defaultVal, context);\r\n      };\r\n      default: return function() {\r\n        var args = slice.call(arguments);\r\n        args.unshift(this[attribute]);\r\n        return _[method].apply(_, args);\r\n      };\r\n    }\r\n  };\r\n\r\n  var addUnderscoreMethods = function(Class, methods, attribute) {\r\n    _.each(methods, function(length, method) {\r\n      if (_[method]) Class.prototype[method] = addMethod(length, method, attribute);\r\n    });\r\n  };\r\n\r\n  // Support `collection.sortBy('attr')` and `collection.findWhere({id: 1})`.\r\n  var cb = function(iteratee, instance) {\r\n    if (_.isFunction(iteratee)) return iteratee;\r\n    if (_.isObject(iteratee) && !instance._isModel(iteratee)) return modelMatcher(iteratee);\r\n    if (_.isString(iteratee)) return function(model) { return model.get(iteratee); };\r\n    return iteratee;\r\n  };\r\n\r\n  var modelMatcher = function(attrs) {\r\n    var matcher = _.matches(attrs);\r\n    return function(model) {\r\n      return matcher(model.attributes);\r\n    };\r\n  };\r\n\r\n  var extend  = Backbone.extend = function(protoProps, staticProps){\r\n    protoProps.constructor = this._constructor;\r\n    var child = this.inherit(protoProps);\r\n    _.extend(child,staticProps);\r\n  \r\n    return child;\r\n  };\r\n\r\n  return {\r\n    addUnderscoreMethods : addUnderscoreMethods,\r\n    extend : extend\r\n  };\r\n});\ndefine('skylark-backbone/Collection',[\r\n  \"skylark-langx/langx\",\r\n  \"./models\",\r\n  \"./backbone\",\r\n  \"./events\",\r\n  \"./helper\"\r\n],function(langx,models,Backbone,events,helper){\r\n\r\n  // Backbone.Collection\r\n  // -------------------\r\n\r\n  // If models tend to represent a single row of data, a Backbone Collection is\r\n  // more analogous to a table full of data ... or a small slice or page of that\r\n  // table, or a collection of rows that belong together for a particular reason\r\n  // -- all of the messages in this particular folder, all of the documents\r\n  // belonging to this particular author, and so on. Collections maintain\r\n  // indexes of their models, both in order, and for lookup by `id`.\r\n\r\n  // Create a new **Collection**, perhaps to contain a specific type of `model`.\r\n  // If a `comparator` is specified, the Collection will maintain\r\n  // its models in sort order, as they're added and removed.\r\n\r\n  var Collection = Backbone.Collection = models.Collection.inherit({\r\n      _construct : function(models, options) {\r\n        options || (options = {});\r\n        if (options.model) this.model = options.model;\r\n        if (options.comparator !== void 0) this.comparator = options.comparator;\r\n        this._reset();\r\n        this.initialize.apply(this, arguments);\r\n        if (models) this.reset(models, _.extend({silent: true}, options));\r\n      },\r\n      // Initialize is an empty function by default. Override it with your own\r\n      // initialization logic.\r\n      initialize: function(){}\r\n\r\n  });\r\n\r\n\r\n  // Define the Collection's inheritable methods.\r\n  Collection.partial(events.EventExtends);\r\n\r\n  Object.defineProperty(Collection.prototype, \"model\",{\r\n    get() { return this.entity; },\r\n    set(newValue) { this.entity = newValue; }\r\n  });\r\n\r\n  Object.defineProperty(Collection.prototype, \"models\",{\r\n    get() { return this.entities; },\r\n    set(newValue) { this.entities = newValue; }\r\n  });\r\n\r\n  Collection.prototype.modelId = Collection.prototype.entityId;\r\n  Collection.prototype._isModel = Collection.prototype._isEntity;\r\n\r\n\r\n  // Underscore methods that we want to implement on the Collection.\r\n  // 90% of the core usefulness of Backbone Collections is actually implemented\r\n  // right here:\r\n  var collectionMethods = {forEach: 3, each: 3, map: 3, collect: 3, reduce: 0,\r\n      foldl: 0, inject: 0, reduceRight: 0, foldr: 0, find: 3, detect: 3, filter: 3,\r\n      select: 3, reject: 3, every: 3, all: 3, some: 3, any: 3, include: 3, includes: 3,\r\n      contains: 3, invoke: 0, max: 3, min: 3, toArray: 1, size: 1, first: 3,\r\n      head: 3, take: 3, initial: 3, rest: 3, tail: 3, drop: 3, last: 3,\r\n      without: 0, difference: 0, indexOf: 3, shuffle: 1, lastIndexOf: 3,\r\n      isEmpty: 1, chain: 1, sample: 3, partition: 3, groupBy: 3, countBy: 3,\r\n      sortBy: 3, indexBy: 3, findIndex: 3, findLastIndex: 3};\r\n\r\n  // Mix in each Underscore method as a proxy to `Collection#models`.\r\n  helper.addUnderscoreMethods(Collection, collectionMethods, 'models');\r\n\r\n  Collection.extend = helper.extend;\r\n\r\n  return Collection;\r\n\r\n});\ndefine('skylark-backbone/Model',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-underscore/underscore\",\r\n  \"./models\",\r\n  \"./backbone\",\r\n  \"./events\",\r\n  \"./helper\"\r\n],function(langx,_,models,Backbone,events,helper){\r\n\r\n  // Backbone.Model\r\n  // --------------\r\n\r\n  // Backbone **Models** are the basic data object in the framework --\r\n  // frequently representing a row in a table in a database on your server.\r\n  // A discrete chunk of data and a bunch of useful, related methods for\r\n  // performing computations and transformations on that data.\r\n\r\n  // Create a new model with the specified attributes. A client id (`cid`)\r\n  // is automatically generated and assigned for you.\r\n  var Model = Backbone.Model = models.Entity.inherit({\r\n      _construct : function(attributes, options) {\r\n        langx.Stateful.prototype._construct.apply(this,arguments);\r\n        this.initialize.apply(this, arguments);\r\n      },\r\n      // Initialize is an empty function by default. Override it with your own\r\n      // initialization logic.\r\n      initialize: function(){},\r\n\r\n      // Get the HTML-escaped value of an attribute.\r\n      escape: function(attr) {\r\n        return _.escape(this.get(attr));\r\n      },\r\n\r\n      // Special-cased proxy to underscore's `_.matches` method.\r\n      matches: function(attrs) {\r\n        return !!_.iteratee(attrs, this)(this.attributes);\r\n      }\r\n  });\r\n\r\n\r\n\r\n  // Attach all inheritable methods to the Model prototype.\r\n  Model.partial(events.EventExtends);\r\n\r\n  Model.extend = helper.extend;\r\n\r\n  return Model;\r\n});\ndefine('skylark-utils-dom/elmx',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./noder\",\r\n    \"./styler\",\r\n    \"./query\"\r\n], function(dom, langx, datax, eventer, finder, fx, geom, noder, styler,$) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n    /*\r\n     * VisualElement is a skylark class type wrapping a visule dom node,\r\n     * provides a number of prototype methods and supports chain calls.\r\n     */\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"init\": function(node) {\r\n            if (langx.isString(node)) {\r\n                node = document.getElementById(node);\r\n            }\r\n            this._elm = node;\r\n        }\r\n    });\r\n\r\n    VisualElement.prototype.$ = VisualElement.prototype.query = function(selector) {\r\n        return $(selector,this._elm);\r\n    };\r\n\r\n    /*\r\n     * the VisualElement object wrapping document.body\r\n     */\r\n    var root = new VisualElement(document.body),\r\n        elmx = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n    /*\r\n     * Extend VisualElement prototype with wrapping the specified methods.\r\n     * @param {ArrayLike} fn\r\n     * @param {Object} context\r\n     */\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self._elm,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(el);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(elmx, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : elmx(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial: function(name, fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./datax\r\n    elmx.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], datax);\r\n\r\n    // from ./eventer\r\n    elmx.delegate([\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"shortcuts\",\r\n        \"trigger\"\r\n    ], eventer);\r\n\r\n    // from ./finder\r\n    elmx.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    /*\r\n     * find a dom element matched by the specified selector.\r\n     * @param {String} selector\r\n     */\r\n    elmx.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n    // from ./fx\r\n    elmx.delegate([\r\n        \"animate\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n\r\n    // from ./geom\r\n    elmx.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    // from ./noder\r\n    elmx.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"removeChild\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n    // from ./styler\r\n    elmx.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n\r\n    // properties\r\n\r\n    var properties = [ 'position', 'left', 'top', 'right', 'bottom', 'width', 'height', 'border', 'borderLeft',\r\n    'borderTop', 'borderRight', 'borderBottom', 'borderColor', 'display', 'overflow', 'margin', 'marginLeft', 'marginTop', 'marginRight', 'marginBottom', 'padding', 'paddingLeft', 'paddingTop', 'paddingRight', 'paddingBottom', 'color',\r\n    'background', 'backgroundColor', 'opacity', 'fontSize', 'fontWeight', 'textAlign', 'textDecoration', 'textTransform', 'cursor', 'zIndex' ];\r\n\r\n    properties.forEach( function ( property ) {\r\n\r\n        var method = property;\r\n\r\n        VisualElement.prototype[method ] = function (value) {\r\n\r\n            this.css( property, value );\r\n\r\n            return this;\r\n\r\n        };\r\n\r\n    });\r\n\r\n    // events\r\n    var events = [ 'keyUp', 'keyDown', 'mouseOver', 'mouseOut', 'click', 'dblClick', 'change' ];\r\n\r\n    events.forEach( function ( event ) {\r\n\r\n        var method = event;\r\n\r\n        VisualElement.prototype[method ] = function ( callback ) {\r\n\r\n            this.on( event.toLowerCase(), callback);\r\n\r\n            return this;\r\n        };\r\n\r\n    });\r\n\r\n\r\n    return dom.elmx = elmx;\r\n});\ndefine('skylark-utils-dom/plugins',[\r\n    \"./dom\",\r\n    \"./langx\",\r\n    \"./noder\",\r\n    \"./datax\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./geom\",\r\n    \"./styler\",\r\n    \"./fx\",\r\n    \"./query\",\r\n    \"./elmx\"\r\n], function(dom, langx, noder, datax, eventer, finder, geom, styler, fx, $, elmx) {\r\n    \"use strict\";\r\n\r\n    var slice = Array.prototype.slice,\r\n        concat = Array.prototype.concat,\r\n        pluginKlasses = {},\r\n        shortcuts = {};\r\n\r\n    /*\r\n     * Create or get or destory a plugin instance assocated with the element.\r\n     */\r\n    function instantiate(elm,pluginName,options) {\r\n        var pluginInstance = datax.data( elm, pluginName );\r\n\r\n        if (options === \"instance\") {\r\n            return pluginInstance;\r\n        } else if (options === \"destroy\") {\r\n            if (!pluginInstance) {\r\n                throw new Error (\"The plugin instance is not existed\");\r\n            }\r\n            pluginInstance.destroy();\r\n            datax.removeData( elm, pluginName);\r\n            pluginInstance = undefined;\r\n        } else {\r\n            if (!pluginInstance) {\r\n                if (options !== undefined && typeof options !== \"object\") {\r\n                    throw new Error (\"The options must be a plain object\");\r\n                }\r\n                var pluginKlass = pluginKlasses[pluginName]; \r\n                pluginInstance = new pluginKlass(elm,options);\r\n                datax.data( elm, pluginName,pluginInstance );\r\n            } else if (options) {\r\n                pluginInstance.reset(options);\r\n            }\r\n        }\r\n\r\n        return pluginInstance;\r\n    }\r\n\r\n    function shortcutter(pluginName,extfn) {\r\n       /*\r\n        * Create or get or destory a plugin instance assocated with the element,\r\n        * and also you can execute the plugin method directory;\r\n        */\r\n        return function (elm,options) {\r\n            var  plugin = instantiate(elm, pluginName,\"instance\");\r\n            if ( options === \"instance\" ) {\r\n              return plugin || null;\r\n            }\r\n            if (!plugin) {\r\n                plugin = instantiate(elm, pluginName,typeof options == 'object' && options || {});\r\n            }\r\n\r\n            if (options) {\r\n                var args = slice.call(arguments,1);\r\n                if (extfn) {\r\n                    return extfn.apply(plugin,args);\r\n                } else {\r\n                    if (typeof options == 'string') {\r\n                        var methodName = options;\r\n\r\n                        if ( !plugin ) {\r\n                            throw new Error( \"cannot call methods on \" + pluginName +\r\n                                \" prior to initialization; \" +\r\n                                \"attempted to call method '\" + methodName + \"'\" );\r\n                        }\r\n\r\n                        if ( !langx.isFunction( plugin[ methodName ] ) || methodName.charAt( 0 ) === \"_\" ) {\r\n                            throw new Error( \"no such method '\" + methodName + \"' for \" + pluginName +\r\n                                \" plugin instance\" );\r\n                        }\r\n\r\n                        plugin[methodName].apply(plugin,args);\r\n                    }                \r\n                }                \r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Register a plugin type\r\n     */\r\n    function register( pluginKlass,shortcutName,extfn) {\r\n        var pluginName = pluginKlass.prototype.pluginName;\r\n        \r\n        pluginKlasses[pluginName] = pluginKlass;\r\n\r\n        if (shortcutName) {\r\n            var shortcut = shortcuts[shortcutName] = shortcutter(pluginName,extfn);\r\n                \r\n            $.fn[shortcutName] = function(options) {\r\n                var returnValue = this;\r\n\r\n                if ( !this.length && options === \"instance\" ) {\r\n                  returnValue = undefined;\r\n                } else {\r\n                  this.each(function () {\r\n                    var  ret  = shortcut(this,options);\r\n                    if (ret !== undefined) {\r\n                        returnValue = ret;\r\n                        return false;\r\n                    }\r\n                  });\r\n                }\r\n\r\n                return returnValue;\r\n            };\r\n\r\n            elmx.partial(shortcutName,function(options) {\r\n                var  ret  = shortcut(this._elm,options);\r\n                if (ret === undefined) {\r\n                    ret = this;\r\n                }\r\n                return ret;\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n \r\n    var Plugin =   langx.Evented.inherit({\r\n        klassName: \"Plugin\",\r\n\r\n        _construct : function(elm,options) {\r\n           this._elm = elm;\r\n           this._initOptions(options);\r\n        },\r\n\r\n        _initOptions : function(options) {\r\n          var ctor = this.constructor,\r\n              cache = ctor.cache = ctor.cache || {},\r\n              defaults = cache.defaults;\r\n          if (!defaults) {\r\n            var  ctors = [];\r\n            do {\r\n              ctors.unshift(ctor);\r\n              if (ctor === Plugin) {\r\n                break;\r\n              }\r\n              ctor = ctor.superclass;\r\n            } while (ctor);\r\n\r\n            defaults = cache.defaults = {};\r\n            for (var i=0;i<ctors.length;i++) {\r\n              ctor = ctors[i];\r\n              if (ctor.prototype.hasOwnProperty(\"options\")) {\r\n                langx.mixin(defaults,ctor.prototype.options);\r\n              }\r\n              if (ctor.hasOwnProperty(\"options\")) {\r\n                langx.mixin(defaults,ctor.options);\r\n              }\r\n            }\r\n          }\r\n          Object.defineProperty(this,\"options\",{\r\n            value :langx.mixin({},defaults,options)\r\n          });\r\n\r\n          //return this.options = langx.mixin({},defaults,options);\r\n          return this.options;\r\n        },\r\n\r\n\r\n        destroy: function() {\r\n            var that = this;\r\n\r\n            this._destroy();\r\n            // We can probably remove the unbind calls in 2.0\r\n            // all event bindings should go through this._on()\r\n            datax.removeData(this._elm,this.pluginName );\r\n        },\r\n\r\n        _destroy: langx.noop,\r\n\r\n        _delay: function( handler, delay ) {\r\n            function handlerProxy() {\r\n                return ( typeof handler === \"string\" ? instance[ handler ] : handler )\r\n                    .apply( instance, arguments );\r\n            }\r\n            var instance = this;\r\n            return setTimeout( handlerProxy, delay || 0 );\r\n        },\r\n\r\n        option: function( key, value ) {\r\n            var options = key;\r\n            var parts;\r\n            var curOption;\r\n            var i;\r\n\r\n            if ( arguments.length === 0 ) {\r\n\r\n                // Don't return a reference to the internal hash\r\n                return langx.mixin( {}, this.options );\r\n            }\r\n\r\n            if ( typeof key === \"string\" ) {\r\n\r\n                // Handle nested keys, e.g., \"foo.bar\" => { foo: { bar: ___ } }\r\n                options = {};\r\n                parts = key.split( \".\" );\r\n                key = parts.shift();\r\n                if ( parts.length ) {\r\n                    curOption = options[ key ] = langx.mixin( {}, this.options[ key ] );\r\n                    for ( i = 0; i < parts.length - 1; i++ ) {\r\n                        curOption[ parts[ i ] ] = curOption[ parts[ i ] ] || {};\r\n                        curOption = curOption[ parts[ i ] ];\r\n                    }\r\n                    key = parts.pop();\r\n                    if ( arguments.length === 1 ) {\r\n                        return curOption[ key ] === undefined ? null : curOption[ key ];\r\n                    }\r\n                    curOption[ key ] = value;\r\n                } else {\r\n                    if ( arguments.length === 1 ) {\r\n                        return this.options[ key ] === undefined ? null : this.options[ key ];\r\n                    }\r\n                    options[ key ] = value;\r\n                }\r\n            }\r\n\r\n            this._setOptions( options );\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOptions: function( options ) {\r\n            var key;\r\n\r\n            for ( key in options ) {\r\n                this._setOption( key, options[ key ] );\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOption: function( key, value ) {\r\n\r\n            this.options[ key ] = value;\r\n\r\n            return this;\r\n        }\r\n\r\n    });\r\n\r\n    $.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n    elmx.partial(\"plugin\",function(name,options) {\r\n        var args = slice.call( arguments, 1 );\r\n        return instantiate.apply(this,[this.domNode,name].concat(args));\r\n    }); \r\n\r\n\r\n    function plugins() {\r\n        return plugins;\r\n    }\r\n     \r\n    langx.mixin(plugins, {\r\n        instantiate,\r\n        Plugin,\r\n        register,\r\n        shortcuts\r\n    });\r\n\r\n    return plugins;\r\n});\ndefine('skylark-backbone/View',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/query\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/plugins\",\r\n  \"skylark-underscore/underscore\",\r\n  \"./backbone\",\r\n  \"./events\",\r\n  \"./helper\"\r\n],function(langx, $,noder,plugins,_,Backbone,events,helper){\r\n  // Backbone.View\r\n  // -------------\r\n\r\n  // Backbone Views are almost more convention than they are actual code. A View\r\n  // is simply a JavaScript object that represents a logical chunk of UI in the\r\n  // DOM. This might be a single item, an entire list, a sidebar or panel, or\r\n  // even the surrounding frame which wraps your whole app. Defining a chunk of\r\n  // UI as a **View** allows you to define your DOM events declaratively, without\r\n  // having to worry about render order ... and makes it easy for the view to\r\n  // react to specific changes in the state of your models.\r\n\r\n  // Creating a Backbone.View creates its initial element outside of the DOM,\r\n  // if an existing element is not provided...\r\n\r\n    var View = Backbone.View = plugins.Plugin.inherit({\r\n      _construct :function(options) {\r\n          this.cid = _.uniqueId('view');\r\n          this.preinitialize.apply(this, arguments);\r\n          _.extend(this, _.pick(options, viewOptions));\r\n          this._ensureElement();\r\n          this.initialize.apply(this, arguments);\r\n\r\n      },\r\n\r\n      // The default `tagName` of a View's element is `\"div\"`.\r\n      tagName: 'div',\r\n\r\n      // query delegate for element lookup, scoped to DOM elements within the\r\n      // current view. This should be preferred to global lookups where possible.\r\n      $: function(selector) {\r\n        return this.$el.find(selector);\r\n      },\r\n\r\n      // preinitialize is an empty function by default. You can override it with a function\r\n      // or object.  preinitialize will run before any instantiation logic is run in the View\r\n      preinitialize: function(){},\r\n\r\n      // Initialize is an empty function by default. Override it with your own\r\n      // initialization logic.\r\n      initialize: function(){},\r\n\r\n      // **render** is the core function that your view should override, in order\r\n      // to populate its element (`this.el`), with the appropriate HTML. The\r\n      // convention is for **render** to always return `this`.\r\n      render: function() {\r\n        return this;\r\n      },\r\n\r\n      // Remove this view by taking the element out of the DOM, and removing any\r\n      // applicable Backbone.Events listeners.\r\n      remove: function() {\r\n        this._removeElement();\r\n        this.unlistenTo();\r\n        return this;\r\n      },\r\n\r\n      // Remove this view's element from the document and all event listeners\r\n      // attached to it. Exposed for subclasses using an alternative DOM\r\n      // manipulation API.\r\n      _removeElement: function() {\r\n        this.$el.remove();\r\n      },\r\n\r\n      // Change the view's element (`this.el` property) and re-delegate the\r\n      // view's events on the new element.\r\n      setElement: function(element) {\r\n        this.undelegateEvents();\r\n        this._setElement(element);\r\n        this.delegateEvents();\r\n        return this;\r\n      },\r\n\r\n      // Creates the `this.el` and `this.$el` references for this view using the\r\n      // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\r\n      // context or an element. Subclasses can override this to utilize an\r\n      // alternative DOM manipulation API and are only required to set the\r\n      // `this.el` property.\r\n      _setElement: function(el) {\r\n        this.$el = $(el);\r\n        this.el = this.$el[0];\r\n      },\r\n\r\n      // Set callbacks, where `this.events` is a hash of\r\n      //\r\n      // *{\"event selector\": \"callback\"}*\r\n      //\r\n      //     {\r\n      //       'mousedown .title':  'edit',\r\n      //       'click .button':     'save',\r\n      //       'click .open':       function(e) { ... }\r\n      //     }\r\n      //\r\n      // pairs. Callbacks will be bound to the view, with `this` set properly.\r\n      // Uses event delegation for efficiency.\r\n      // Omitting the selector binds the event to `this.el`.\r\n      delegateEvents: function(events) {\r\n        events || (events = langx.result(this, 'events'));\r\n        if (!events) return this;\r\n        this.undelegateEvents();\r\n        for (var key in events) {\r\n          var method = events[key];\r\n          if (!langx.isFunction(method)) method = this[method];\r\n          if (!method) continue;\r\n          var match = key.match(delegateEventSplitter);\r\n          this.delegate(match[1], match[2], langx.proxy(method, this));\r\n        }\r\n        return this;\r\n      },\r\n\r\n      // Add a single event listener to the view's element (or a child element\r\n      // using `selector`). This only works for delegate-able events: not `focus`,\r\n      // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\r\n      delegate: function(eventName, selector, listener) {\r\n        this.$el.on(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n        return this;\r\n      },\r\n\r\n      // Clears all callbacks previously bound to the view by `delegateEvents`.\r\n      // You usually don't need to use this, but may wish to if you have multiple\r\n      // Backbone views attached to the same DOM element.\r\n      undelegateEvents: function() {\r\n        if (this.$el) this.$el.off('.delegateEvents' + this.uid);\r\n        return this;\r\n      },\r\n\r\n      // A finer-grained `undelegateEvents` for removing a single delegated event.\r\n      // `selector` and `listener` are both optional.\r\n      undelegate: function(eventName, selector, listener) {\r\n        this.$el.off(eventName + '.delegateEvents' + this.uid, selector, listener);\r\n        return this;\r\n      },\r\n\r\n      // Produces a DOM element to be assigned to your view. Exposed for\r\n      // subclasses using an alternative DOM manipulation API.\r\n      _createElement: function(tagName,attrs) {\r\n        return noder.createElement(tagName,attrs);\r\n      },\r\n\r\n      // Ensure that the View has a DOM element to render into.\r\n      // If `this.el` is a string, pass it through `$()`, take the first\r\n      // matching element, and re-assign it to `el`. Otherwise, create\r\n      // an element from the `id`, `className` and `tagName` properties.\r\n      _ensureElement: function() {\r\n        if (!this.el) {\r\n          var attrs = langx.mixin({}, langx.result(this, 'attributes'));\r\n          if (this.id) attrs.id = langx.result(this, 'id');\r\n          if (this.className) attrs['class'] = langx.result(this, 'className');\r\n          this.setElement(this._createElement(langx.result(this, 'tagName'),attrs));\r\n          this._setAttributes(attrs);\r\n        } else {\r\n          this.setElement(langx.result(this, 'el'));\r\n        }\r\n      },\r\n\r\n      // Set attributes from a hash on this view's element.  Exposed for\r\n      // subclasses using an alternative DOM manipulation API.\r\n      _setAttributes: function(attributes) {\r\n        this.$el.attr(attributes);\r\n      },\r\n      \r\n    });\r\n\r\n\r\n  View.partial(events.EventExtends);\r\n\r\n  // Cached regex to split keys for `delegate`.\r\n  var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\r\n\r\n  // List of view options to be set as properties.\r\n  var viewOptions = ['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName', 'events'];\r\n\r\n  View.extend = helper.extend;\r\n\r\n  return View;\r\n});\ndefine('skylark-underscore/main',[\r\n\t\"./underscore\"\r\n],function(_){\r\n\treturn _;\r\n});\ndefine('skylark-underscore', ['skylark-underscore/main'], function (main) { return main; });\n\ndefine('skylark-backbone/LocalStorage',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-underscore\",\r\n  \"./models\",\r\n  \"./backbone\"\r\n],function(langx,_,models,Backbone){\r\n\r\n// A simple module to replace `Backbone.sync` with *localStorage*-based\r\n// persistence. Models are given GUIDS, and saved into a JSON object. Simple\r\n// as that.\r\n\r\n// Hold reference to Underscore.js and Backbone.js in the closure in order\r\n// to make things work even if they are removed from the global namespace\r\n\r\n// Generate four random hex digits.\r\nfunction S4() {\r\n   return (((1+Math.random())*0x10000)|0).toString(16).substring(1);\r\n};\r\n\r\n// Generate a pseudo-GUID by concatenating random hexadecimal.\r\nfunction guid() {\r\n   return (S4()+S4()+\"-\"+S4()+\"-\"+S4()+\"-\"+S4()+\"-\"+S4()+S4()+S4());\r\n};\r\n\r\n// Our Store is represented by a single JS object in *localStorage*. Create it\r\n// with a meaningful name, like the name you'd give a table.\r\n// window.Store is deprecated, use Backbone.LocalStorage instead\r\nvar LocalStorage = langx.klass({\r\n  _construct : function(name) {\r\n    this.name = name;\r\n    var store = this.localStorage().getItem(this.name);\r\n    this.records = (store && store.split(\",\")) || [];\r\n  },\r\n\r\n  // Save the current state of the **Store** to *localStorage*.\r\n  save: function() {\r\n    this.localStorage().setItem(this.name, this.records.join(\",\"));\r\n  },\r\n\r\n  // Add a model, giving it a (hopefully)-unique GUID, if it doesn't already\r\n  // have an id of it's own.\r\n  create: function(model) {\r\n    if (!model.id) {\r\n      model.id = guid();\r\n      model.set(model.idAttribute, model.id);\r\n    }\r\n    this.localStorage().setItem(this.name+\"-\"+model.id, JSON.stringify(model));\r\n    this.records.push(model.id.toString());\r\n    this.save();\r\n    return this.find(model);\r\n  },\r\n\r\n  // Update a model by replacing its copy in `this.data`.\r\n  update: function(model) {\r\n    this.localStorage().setItem(this.name+\"-\"+model.id, JSON.stringify(model));\r\n    if (!_.include(this.records, model.id.toString()))\r\n      this.records.push(model.id.toString()); this.save();\r\n    return this.find(model);\r\n  },\r\n\r\n  // Retrieve a model from `this.data` by id.\r\n  find: function(model) {\r\n    return this.jsonData(this.localStorage().getItem(this.name+\"-\"+model.id));\r\n  },\r\n\r\n  // Return the array of all models currently in storage.\r\n  findAll: function() {\r\n    return _(this.records).chain()\r\n      .map(function(id){\r\n        return this.jsonData(this.localStorage().getItem(this.name+\"-\"+id));\r\n      }, this)\r\n      .compact()\r\n      .value();\r\n  },\r\n\r\n  // Delete a model from `this.data`, returning it.\r\n  destroy: function(model) {\r\n    if (model.isNew())\r\n      return false\r\n    this.localStorage().removeItem(this.name+\"-\"+model.id);\r\n    this.records = _.reject(this.records, function(id){\r\n      return id === model.id.toString();\r\n    });\r\n    this.save();\r\n    return model;\r\n  },\r\n\r\n  localStorage: function() {\r\n    return localStorage;\r\n  },\r\n\r\n  // fix for \"illegal access\" error on Android when JSON.parse is passed null\r\n  jsonData: function (data) {\r\n      return data && JSON.parse(data);\r\n  }\r\n\r\n});\r\n\r\n// localSync delegate to the model or collection's\r\n// *localStorage* property, which should be an instance of `Store`.\r\n// window.Store.sync and Backbone.localSync is deprectated, use Backbone.LocalStorage.sync instead\r\nLocalStorage.sync = models.localSync = function(method, model, options) {\r\n  var store = model.localStorage || model.collection.localStorage;\r\n\r\n  var resp, errorMessage, syncDfd = $.Deferred && $.Deferred(); //If $ is having Deferred - use it.\r\n\r\n  try {\r\n\r\n    switch (method) {\r\n      case \"read\":\r\n        resp = model.id != undefined ? store.find(model) : store.findAll();\r\n        break;\r\n      case \"create\":\r\n        resp = store.create(model);\r\n        break;\r\n      case \"update\":\r\n        resp = store.update(model);\r\n        break;\r\n      case \"delete\":\r\n        resp = store.destroy(model);\r\n        break;\r\n    }\r\n\r\n  } catch(error) {\r\n    if (error.code === DOMException.QUOTA_EXCEEDED_ERR && window.localStorage.length === 0)\r\n      errorMessage = \"Private browsing is unsupported\";\r\n    else\r\n      errorMessage = error.message;\r\n  }\r\n\r\n  if (resp) {\r\n    model.trigger(\"sync\", model, resp, options);\r\n    if (options && options.success)\r\n      options.success(resp);\r\n    if (syncDfd)\r\n      syncDfd.resolve(resp);\r\n\r\n  } else {\r\n    errorMessage = errorMessage ? errorMessage\r\n                                : \"Record Not Found\";\r\n\r\n    if (options && options.error)\r\n      options.error(errorMessage);\r\n    if (syncDfd)\r\n      syncDfd.reject(errorMessage);\r\n  }\r\n\r\n  // add compatibility with $.ajax\r\n  // always execute callback for success and error\r\n  if (options && options.complete) options.complete(resp);\r\n\r\n  return syncDfd && syncDfd.promise();\r\n};\r\n\r\n\r\nmodels.ajaxSync = models.sync;\r\n\r\nmodels.getSyncMethod = function(model) {\r\n  if(model.localStorage || (model.collection && model.collection.localStorage)) {\r\n    return models.localSync;\r\n  }\r\n\r\n  return models.ajaxSync;\r\n};\r\n\r\n// Override 'Backbone.sync' to default to localSync,\r\n// the original 'Backbone.sync' is still available in 'Backbone.ajaxSync'\r\nmodels.sync = function(method, model, options) {\r\n  return models.getSyncMethod(model).apply(this, [method, model, options]);\r\n};\r\n\r\nreturn Backbone.LocalStorage =  LocalStorage;\r\n\r\n});\ndefine('skylark-backbone/main',[\r\n\t\"./backbone\",\r\n\t\"./Collection\",\r\n\t\"./events\",\r\n\t\"./Model\",\r\n\t\"./View\",\r\n\t\"./LocalStorage\"\r\n],function(backbone){\r\n\treturn backbone;\r\n});\ndefine('skylark-backbone', ['skylark-backbone/main'], function (main) { return main; });\n\n"]}